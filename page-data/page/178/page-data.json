{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/178","result":{"data":{"allPost":{"edges":[{"node":{"ID":632,"Title":"ElasticWars Episode IV: A new field","Description":"","PublishedAt":"2020-06-03 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2020-06-03-elasticwarsepisodeivanewfield/","SourceName":"Trivago"}},{"node":{"ID":807,"Title":"Stretch Opportunities for Engineers","Description":"Stretch opportunities are tasks or projects that are a bit beyond your current skill or knowledge level and that allow you to improve and…","PublishedAt":"2020-05-20 00:00:00+00:00","OriginURL":"https://developers.soundcloud.com/blog/stretch-opportunities-for-engineers","SourceName":"Soundcloud"}},{"node":{"ID":721,"Title":"2020 Zoom Developer Survey Results","Description":"","PublishedAt":"2020-05-08 03:01:01+00:00","OriginURL":"https://medium.com/zoom-developer-blog/2020-zoom-developer-survey-results-33bc25c1fff?source=rss----4a85731adaff---4","SourceName":"Zoom"}},{"node":{"ID":722,"Title":"Introducing: @zoomus/chatbot-cli","Description":"","PublishedAt":"2020-05-07 22:53:57+00:00","OriginURL":"https://medium.com/zoom-developer-blog/introducing-zoomus-chatbot-cli-bf8d1e5bc45b?source=rss----4a85731adaff---4","SourceName":"Zoom"}},{"node":{"ID":808,"Title":"Open Sourcing Intervene","Description":"A little while back, the web team at SoundCloud got an urgent report that our upload page looked weird in the US. Web engineering is based…","PublishedAt":"2020-05-05 00:00:00+00:00","OriginURL":"https://developers.soundcloud.com/blog/open-sourcing-intervene","SourceName":"Soundcloud"}},{"node":{"ID":723,"Title":"Required Passwords and your Zoom Integration","Description":"","PublishedAt":"2020-05-04 21:52:20+00:00","OriginURL":"https://medium.com/zoom-developer-blog/required-passwords-and-your-zoom-integration-1c02828c5e68?source=rss----4a85731adaff---4","SourceName":"Zoom"}},{"node":{"ID":362,"Title":"Evolving Alongside your Tech Stack","Description":"<p><em>This blog post is adapted from a discussion during <a href=\"https://www.heroku.com/podcasts/codeish/39-evolving-alongside-your-tech-stack\">an episode of our podcast, Code[ish]</a>.</em></p>\n\n<p>Over the last twenty years, software development has advanced so rapidly that it's possible to create amazing user experiences, powerful machine learning algorithms, and memory efficient applications with incredible ease. But as the capabilities tech provides has changed, so too have the requirements of individual developers morphed to encompass a variety of skills. Not only should you be writing efficient code; you need to understand how that code communicates with all the other systems involved and make it all work together.</p>\n\n<p>In this post, we'll explore how you can stay on top of the changing software development landscape, without sacrificing your desires to learn or the success of your product.</p>\n<h2 class=\"anchored\">\n  <a name=\"user-experience-depends-on-technical-expertise\" href=\"#user-experience-depends-on-technical-expertise\">User experience depends on technical expertise</a>\n</h2>\n\n<p>When the iPhone first came out in 2007, it was rather limited in technical capabilities. There was no support for multitasking and gestures, no ability to copy and paste text, and there wasn't any support for third-party software. It's not that these ideas were not useful, it’s just that the first generation of the phone's hardware and operating system could not support such features. This serves as a good example to underscore how UX has sometimes been constrained by technology.</p>\n\n<p>Now, the situation has changed somewhat. Tools have advanced to the point where it's really easy to create a desktop or mobile app which accepts a variety of gestures and inputs. The consequences of this are twofold. First, users have come to expect a certain level of quality in software. Gone are the days of simply \"throwing something together\"; software, websites, and mobile apps all need to look polished. This requires developers to have a high level of design sensibility (or work with someone else who does). Second, it means that the role of the engineer has expanded beyond just writing code. They need to understand why they're building whatever it is they're building, why it's important to their users, and how it functionally integrates with the rest of the app. If you design an API, for example, you’ll need to secure it against abuse; if you design a custom search index, you need to make sure users can actually find what they’re looking for.</p>\n\n<p>On the one hand, because you're running on the same devices and platforms as your users (whether that a smartphone or an operating system), you're intricately familiar with the best UI patterns—how a button should operate, which transitions to make between screens—because every other app has made similar considerations. But on the other hand, you also need to deal with details such as memory management and CPU load to ensure the app is running optimally. </p>\n\n<p>It’s not enough for an app to work well, as it must also look good. It's important to find a balance of both design sensibilities and technical limitations—or at least, a baseline knowledge of how everything works—in order to ship quality software. </p>\n<h2 class=\"anchored\">\n  <a name=\"follow-everything-but-only-learn-em-some-em-things\" href=\"#follow-everything-but-only-learn-em-some-em-things\">Follow everything but only learn <em>some</em> things</a>\n</h2>\n\n<p>When it comes to personal growth, learning to prioritize solutions to the problems you encounter can be critical in your development. For example, suppose you notice one day that your Postgres queries are executing slower than you would like. You should have a general awareness of how higher rates of traffic affects your database querying strategies, or how frequent writes affect the physical tables on disk. But that doesn't necessarily mean that you should sink a massive amount of time and effort to fine-tune these issues towards the most optimal strategy. When developing software, you will always have one of several choices to make, and rarely does one become the only true path forward. Sometimes, having the insight to know the trade-offs and accepting one sub-optimal approach above another makes it easier to cut losses and focus on the parts of your software which matter.</p>\n\n<h2 class=\"pull-quote\" style=\"font-style: italic;\">Sometimes, having the insight to know the trade-offs and accepting one sub-optimal approach above another makes it easier to cut losses and focus on the parts of your software which matter.</h2>\n\n<p>It seems like every year, a new web framework or programming language is released. This makes it difficult, if not impossible, to follow every single new item when they are announced. The inverse is also true. We might feel that adopting new technologies is one way to stay \"relevant,\" but this attitude can be quite dangerous. If you are an early adopter, you run the risk of being on the hook for finding bugs, distracting you from your actual goal of shipping features for your own application. You should take a calculated approach to the pros and cons of any new tech. For example, switching your database entirely to MemSQL because you heard it's \"faster\" is less reasonable than making a switch after reading someone's careful evaluation of the technology, and realizing that it matched your own needs as well.</p>\n<h2 class=\"anchored\">\n  <a name=\"keeping-calm-and-steady\" href=\"#keeping-calm-and-steady\">Keeping calm and steady</a>\n</h2>\n\n<p>At the end of the day, you should be very invested in your own stack and the ecosystem you work in. That work can be something as simple as reading Medium posts or following Twitter accounts. Broaden your knowledge of other services outside your own realm of expertise only if you come across someone confronting problems similar to yours. You should own tools which you know how to operate, rather than keep a shed full of all sorts of shiny objects.</p>","PublishedAt":"2020-04-29 19:59:00+00:00","OriginURL":"https://blog.heroku.com/evolving-alongside-tech-stack","SourceName":"Heroku"}},{"node":{"ID":265,"Title":"How we made FastText faster","Description":"FastText is a library for efficient text classification and representation learning. Like its sibling, Word2Vec, it produces meaningful word embeddings from a given corpus of text. Unlike its sibling, FastText uses n-grams for word representations, making it great for text-classification projects like language detection, sentiment analysis, and topic modeling.&#160; Here at GIPHY, we use FastText [&#8230;]","PublishedAt":"2020-04-24 16:25:28+00:00","OriginURL":"https://engineering.giphy.com/how-we-made-fasttext-faster/","SourceName":"GIPHY"}},{"node":{"ID":363,"Title":"Building and Scaling a Global Chatbot using Heroku + Terraform","Description":"<p>Text-based communication has a long history weaved into the evolution of the Internet, from IRC and XMPP to Slack and Discord. And where there have been humans, there have also been chatbots: scriptable programs that respond to a user’s commands, like messages in a chat room.</p>\n\n<p>Chatbots don't require much in terms of computational power or disk storage, as they rely heavily on APIs to send actions and receive responses. But as with any kind of software, scaling them to support millions of user’s requests across the world requires a fail-safe operational strategy. Salesforce offers <a href=\"https://www.salesforce.com/products/service-cloud/features/live-agent/\">a Live Agent support product</a> with a chatbot integration that reacts to customer inquiries.</p>\n\n<p>In this post, we'll take a look at how the team uses Heroku for their chatbot's multi-regional requirements.</p>\n<h2 class=\"anchored\">\n  <a name=\"how-users-interact-with-the-chatbot\" href=\"#how-users-interact-with-the-chatbot\">How users interact with the chatbot</a>\n</h2>\n\n<p>Live Agent is an embeddable chatbot that can be added to any website or mobile app. Users can engage in a conversation with the chatbot, asking questions and performing actions along the way. For example, if a bank customer wants to learn how to set up two-factor authentication, they could ask the chatbot for guidance, rather than call the bank directly.</p>\n\n<p>The aim of Live Agent is to augment a human support agent's capabilities for responding to events that happen at a high scale. Because everybody learns and interacts a little bit differently, it's advantageous to provide help through various mediums, like videos and documentation. Chatbots offer another channel, with <em>guided</em> feedback that offers more interactive information. Rather than providing a series of webpages with static images, a chatbot can make processes friendlier by confirming to users their progress as they go through a sequence of steps.</p>\n\n<p>Live Agent hooks into <a href=\"https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_intro_what_is_apex.htm\">Apex</a>, a Java-like programming language that is tied directly into Salesforce's object models, allowing it to modify and call up CRM records directly. You can also have a Live Agent chatbot call out to any API and pretty much do anything on the web.</p>\n\n<p>With their open-ended nature, chatbots can perform endless operations across a variety of communication platforms. Facebook Messenger, for example, is <a href=\"https://www.businessinsider.com/most-used-smartphone-apps-2017-8?r=US&amp;IR=T#6-instagram-5\">the third most popular app in the world</a>, and you could have a Live Agent backend running on <a href=\"https://developers.facebook.com/docs/messenger-platform\">the Messenger platform</a> to respond to user queries.</p>\n<h2 class=\"anchored\">\n  <a name=\"running-live-agent-on-heroku\" href=\"#running-live-agent-on-heroku\">Running Live Agent on Heroku</a>\n</h2>\n\n<p>With such a large scope across disparate mediums, there's a significant number of requests coming into Live Agent chatbots and vast amounts of data they can access. It may surprise you to learn that there are only eight engineers responsible for running Live Agent! In addition to coding the features, they own the entire product. This means that they are also responsible for being on-call for pager rotations and ensuring that the chatbots can keep up with incoming traffic.</p>\n\n<p>The small team didn't want to waste time configuring their platform to run on bare metal or on a cloud VM, and they didn't want the administrative overhead of managing databases or other third-party services. Since Salesforce customers reside all over the world, the Live Agent chatbots must also be highly available across multiple regions.</p>\n\n<p>The Live Agent team put its trust into Heroku to take care of all of those operational burdens. Heroku already manages millions of Postgres databases for our customers, and we have a dedicated staff to manage backups, perform updates, and respond to potential outages. The Live Agent chatbot runs on Java, and Heroku's platform supports the entire Java ecosystem, with dedicated Java experts to handle language and framework updates, providing new features and responding to security issues.</p>\n\n<p>In order to serve their customers worldwide, the core Live Agent infrastructure matches <a href=\"https://devcenter.heroku.com/articles/regions\">Heroku's availability in every region around the world</a>. All of their services are managed by Heroku, ensuring that their Heroku Postgres, Redis, and Apache Kafka dependencies are blazing fast no matter where a request comes from.</p>\n\n<p>The beauty of it all is how simple it is to scale, without any of Live Agent's team needing to be responsible for any of the maintenance and upkeep.</p>\n<h2 class=\"anchored\">\n  <a name=\"leveraging-terraform-for-replication-and-private-spaces-for-security\" href=\"#leveraging-terraform-for-replication-and-private-spaces-for-security\">Leveraging Terraform for replication and Private Spaces for security</a>\n</h2>\n\n<p>The Live Agent platform is comprised of ten separate apps, each with their own managed add-ons and services. To fully isolate the boundaries of communication, the collection of apps are deployed into a <a href=\"https://www.heroku.com/private-spaces\">Heroku Private Space</a>. Private Spaces establish an isolated runtime for the apps to ensure that the data contained within the network is inaccessible from any outside service.</p>\n\n<p>Private Spaces are available in a variety of regions; if a new region becomes available, the Live Agent team wanted to be able to automatically redeploy the same apps and add-ons there. And if they ever need to create a new app, they also wanted to add it to all of the Private Spaces in those geographic locations.</p>\n\n<p>To easily replicate their architecture, the Live Agent team uses <a href=\"https://www.terraform.io/intro/index.html\">Terraform</a> to automate deployment and configuration of the Live Agent platform. Terraform is the driver behind everything they do on Heroku. With it, they can explicitly and programmatically define their infrastructure--the apps and add-ons, custom domains, and logging and profiling setup--and have it securely available in any region, instantly. Whenever a new configuration is necessary, they can implement that update with just a few lines of code and make it live everywhere with the merge of a pull request.</p>\n\n<p>For example, to automatically set up a Node.js Heroku app that requires a Postgres database and logging through <a href=\"https://elements.heroku.com/addons/papertrail\">Papertrail</a>, a Terraform config file might just look something like this:</p>\n\n<pre><code class=\"language-hcl\">resource \"heroku_app\" \"server\" {\n  name = \"my-app\"\n  region = \"us\"\n\n\n  provisioner \"local-exec\" {\n    command = \"heroku buildpacks:set heroku/nodejs --app ${heroku_app.server.name}\"\n  }\n}\n\nresource \"heroku_addon\" \"database\" {\n  app  = \"${heroku_app.server.name}\"\n  plan = \"heroku-postgresql:hobby-dev\"\n}\n\n# Papertrail addon (for logging)\n\nresource \"heroku_addon\" \"logging\" {\n  app = \"${heroku_app.server.name}\"\n  plan = \"papertrail:choklad\"\n}\n</code></pre>\n\n<p>Here are some details on how to <a href=\"https://devcenter.heroku.com/articles/using-terraform-with-heroku\">use Terraform with Heroku</a>.</p>\n<h2 class=\"anchored\">\n  <a name=\"learning-more\" href=\"#learning-more\">Learning more</a>\n</h2>\n\n<p>If you'd like to learn more about how Live Agent uses Heroku to scale their platform, our podcast Code[ish], has <a href=\"https://www.heroku.com/podcasts/codeish/30-the-infrastructure-behind-salesforces-chatbots\">an interview with their team</a>, where they dive into more of the technical specifics.</p>\n\n<p>We also have not <a href=\"https://dev.to/heroku/eight-devops-things-heroku-does-so-you-don-t-have-to-4o0b\">one</a> but <a href=\"https://dev.to/heroku/seven-more-devops-things-heroku-does-so-you-don-t-have-to-1g1n\"><em>two</em></a> posts on <a href=\"https://dev.to/\">dev.to</a> listing all the DevOps chores which Heroku automatically takes care of for you.</p>","PublishedAt":"2020-04-22 15:33:17+00:00","OriginURL":"https://blog.heroku.com/chatbots-with-heroku-terraform","SourceName":"Heroku"}},{"node":{"ID":724,"Title":"Zoom Web SDK with Angular","Description":"","PublishedAt":"2020-04-21 18:03:48+00:00","OriginURL":"https://medium.com/zoom-developer-blog/zoom-web-sdk-with-angular-6b080a6be38c?source=rss----4a85731adaff---4","SourceName":"Zoom"}},{"node":{"ID":725,"Title":"Developer Platform updates Spring 20'","Description":"","PublishedAt":"2020-04-21 18:02:21+00:00","OriginURL":"https://medium.com/zoom-developer-blog/developer-platform-updates-spring-20-668fa683762d?source=rss----4a85731adaff---4","SourceName":"Zoom"}},{"node":{"ID":726,"Title":"Automate Workflows With Zoom Webhooks","Description":"<div class=\"medium-feed-item\"><p class=\"medium-feed-image\"><a href=\"https://medium.com/zoom-developer-blog/automate-workflows-with-zoom-webhooks-334600f8c99?source=rss----4a85731adaff---4\"><img src=\"https://cdn-images-1.medium.com/max/1228/1*f_tX51MFaLweWux4BZLd1Q.png\" width=\"1228\"></a></p><p class=\"medium-feed-snippet\">Webhooks are automated event notification messages that can be sent from one server to another in the form of HTTP requests. In real life&#x2026;</p><p class=\"medium-feed-link\"><a href=\"https://medium.com/zoom-developer-blog/automate-workflows-with-zoom-webhooks-334600f8c99?source=rss----4a85731adaff---4\">Continue reading on Zoom Developer Blog »</a></p></div>","PublishedAt":"2020-04-17 16:09:29+00:00","OriginURL":"https://medium.com/zoom-developer-blog/automate-workflows-with-zoom-webhooks-334600f8c99?source=rss----4a85731adaff---4","SourceName":"Zoom"}},{"node":{"ID":633,"Title":"5 Tips to Boost Productivity When Working Remotely as an Engineer","Description":"","PublishedAt":"2020-04-17 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2020-04-17-5tipstoboostproductivitywhenworkingremot/","SourceName":"Trivago"}},{"node":{"ID":266,"Title":"GIPHY SDK: The Grid","Description":"A GIF feature in your app can increase engagement and give your users a valuable new way to express themselves, but building it can be hard!&#160; You have to figure out how and where to get the content, design and implement a UI, test, iterate&#8230;the list goes on.&#160; That’s why we built the GIPHY SDK, [&#8230;]","PublishedAt":"2020-04-15 17:33:00+00:00","OriginURL":"https://engineering.giphy.com/giphy-sdk-the-grid/","SourceName":"GIPHY"}},{"node":{"ID":634,"Title":"trivago joins the Cloud Native Computing Foundation","Description":"","PublishedAt":"2020-04-07 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2020-04-07-trivagojoinsthecloudnativecomputingfound/","SourceName":"Trivago"}},{"node":{"ID":727,"Title":"The Developer Show: Building Zoom Chatbots","Description":"<div class=\"medium-feed-item\"><p class=\"medium-feed-image\"><a href=\"https://medium.com/zoom-developer-blog/the-developer-show-building-zoom-chatbots-9aa56d918db1?source=rss----4a85731adaff---4\"><img src=\"https://cdn-images-1.medium.com/max/1920/1*-m30_vsj84Le3Lo3wj46TQ.png\" width=\"1920\"></a></p><p class=\"medium-feed-snippet\">The Zoom Developer Advocacy team is obsessed with developer education and developer support. Up until now, we relied on our developer&#x2026;</p><p class=\"medium-feed-link\"><a href=\"https://medium.com/zoom-developer-blog/the-developer-show-building-zoom-chatbots-9aa56d918db1?source=rss----4a85731adaff---4\">Continue reading on Zoom Developer Blog »</a></p></div>","PublishedAt":"2020-04-03 20:13:34+00:00","OriginURL":"https://medium.com/zoom-developer-blog/the-developer-show-building-zoom-chatbots-9aa56d918db1?source=rss----4a85731adaff---4","SourceName":"Zoom"}},{"node":{"ID":728,"Title":"Backwards Incompatible V2 API Changes","Description":"","PublishedAt":"2020-04-03 00:20:55+00:00","OriginURL":"https://medium.com/zoom-developer-blog/backwards-incompatible-v2-api-changes-a0a97df9c306?source=rss----4a85731adaff---4","SourceName":"Zoom"}},{"node":{"ID":267,"Title":"Engaging Endpoints: 4 Ways to Supplement GIF search","Description":"We’d like to highlight four public API endpoints designed to increase engagement and create better user experiences for products and projects integrating GIPHY. At GIPHY, we use these endpoints to help users discover content and as ancillary features for our core GIF search experience — as we know a blank search input on a platform [&#8230;]","PublishedAt":"2020-04-01 19:16:32+00:00","OriginURL":"https://engineering.giphy.com/engaging-endpoints-4-ways-to-supplement-gif-search/","SourceName":"GIPHY"}},{"node":{"ID":268,"Title":"#BuildforCOVID19 Global Online Hackathon","Description":"We’ve joined Facebook and many other partners such as Microsoft, Pinterest, Slack, TikTok, Twitter, and WeChat to support and participate in the #BuildforCOVID19 Online Hackathon —&#160;a new global hackathon to tackle the challenges and problems related to the current coronavirus (COVID-19) pandemic. We want to encourage you &#8211; our global developer community &#8211; to join [&#8230;]","PublishedAt":"2020-03-27 20:30:29+00:00","OriginURL":"https://engineering.giphy.com/buildforcovid19-global-online-hackathon/","SourceName":"GIPHY"}},{"node":{"ID":635,"Title":"Accommodation Consolidation: How we created an ETL pipeline on cloud","Description":"","PublishedAt":"2020-03-26 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2020-03-26-accommodationconsolidationhowwecreatedan/","SourceName":"Trivago"}},{"node":{"ID":636,"Title":"Ask a Developer: Your Questions Answered","Description":"","PublishedAt":"2020-03-20 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2020-03-20-askadeveloperyourquestionsanswered/","SourceName":"Trivago"}},{"node":{"ID":809,"Title":"Periskop: Exception Monitoring Service","Description":"Periskop is an exception monitoring service that we built here at SoundCloud. It was designed with microservice environments in mind, but it…","PublishedAt":"2020-03-16 00:00:00+00:00","OriginURL":"https://developers.soundcloud.com/blog/periskop-exception-monitoring-service","SourceName":"Soundcloud"}},{"node":{"ID":637,"Title":"The First Prettier Plugin For Twig is Here","Description":"","PublishedAt":"2020-03-10 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2020-03-10-thefirstprettierpluginfortwigishere/","SourceName":"Trivago"}},{"node":{"ID":364,"Title":"Building with Web Components","Description":"<p>In the early years of web development, there were three standard fundamentals upon which every website was built: HTML, CSS, and JavaScript. As time passed, web developers became more proficient in their construction of fancy UI/UX widgets for websites. With the need for newer ways of crafting a site coming in conflict with the relatively slow adoption of newer standards, more and more developers began to build their own libraries to abstract away some of the technical details. The web ceased being a standard: now your website could be a React site, or an Angular site, or a Vue site, or any number of other web framework that are not interoperable with each other.</p>\n\n<p>Web components seek to tilt the balance of web development back towards a standard agreed upon by browser vendors and developers. Various polyfills and proprietary frameworks have achieved what web components are now trying to standardize: composable units of JavaScript and HTML that can be imported and reused across web applications. Let's explore the history of web components and the advantages they provide over third-party libraries.</p>\n<h2 class=\"anchored\">\n  <a name=\"how-it-all-began\" href=\"#how-it-all-began\">How it all began</a>\n</h2>\n\n<p>After some attempts by browser vendors to create a standard—and subsequent slow progress—front-end developers realized it was up to them to create a browser-agnostic library delivering on the promise of the web components vision. When React was released, it completely changed the paradigm of web development in two key ways. First, with a bit of JavaScript and some XML-like syntax, React allowed you to compose custom HTML tags it called components:</p>\n\n<pre><code class=\"lang-javascript\">class HelloMessage extends React.Component {\n  render() {\n    return (\n    &lt;h1&gt;\n        Hello &lt;span class=\"name\"&gt;{this.props.name}&lt;/span&gt;\n    &lt;/h1&gt;\n    );\n  }\n}\n\nReactDOM.render(\n  &lt;HelloMessage name=\"Johnny\" /&gt;,\n  document.getElementById('hello-example-container')\n);\n</code></pre>\n\n<p>This trivial example shows how you can encapsulate logic to create React components which can be reused across your app and shared with other developers.</p>\n\n<p>Second, React popularized the concept of <a href=\"https://reactkungfu.com/2015/10/the-difference-between-virtual-dom-and-dom/\">a virtual DOM</a>. The DOM is your entire HTML document, all the HTML tags that a browser slurps up to render a website. However, the relationship between HTML tags, JavaScript, and CSS which make up a website is rather fragile. Making changes to one component could inadvertently affect other aspects of the site. One of the benefits of the virtual DOM was to make sure that UI updates only redrew specific chunks of HTML through JavaScript events. Thus, developers could easily build websites rendering massive amounts of changing data without necessarily worrying about the performance implications.</p>\n\n<p>Around 2015, Google began developing <a href=\"https://www.polymer-project.org/\">the Polymer Project</a> as a means of demonstrating how they wanted web standards to evolve through polyfills. Over the years and various releases, the ideas presented by Polymer library began to be incorporated by the W3C for standardization and browser adoption. The work started back in <a href=\"https://www.w3.org/TR/2012/WD-components-intro-20120522/\">2012 by the W3C</a> (and originally introduced by <a href=\"https://fronteers.nl/congres/2011/sessions/web-components-and-model-driven-views-alex-russell\">Alex Russell at Fronteers Conference 2011</a>) began to get more attention, undergoing various design changes to address developers' concerns.</p>\n<h2 class=\"anchored\">\n  <a name=\"the-web-components-toolkit\" href=\"#the-web-components-toolkit\">The web components toolkit</a>\n</h2>\n\n<p>Let's take a look at the web standards which make up web components today.</p>\n<h3 class=\"anchored\">\n  <a name=\"custom-elements\" href=\"#custom-elements\">Custom elements</a>\n</h3>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements\">Custom elements</a> allows you to create custom HTML tags which can exhibit any JavaScript behavior:</p>\n\n<pre><code class=\"lang-javascript\">class SayHello extends HTMLElement {\n  constructor() {\n    super();\n\n    let p = document.createElement(“p”);\n    let text = document.createTextNode(“Hello world!”);\n    p.appendChild(text);\n\n    this.appendChild(p);\n  }\n}\n\ncustomElements.define('say-hello', SayHello);\n</code></pre>\n\n<p>Custom elements can be used to encapsulate logic across your site and reused wherever necessary. Since they're a web standard, you won't need to load an additional JavaScript framework to support them.</p>\n<h3 class=\"anchored\">\n  <a name=\"html-templates\" href=\"#html-templates\">HTML templates</a>\n</h3>\n\n<p>If you need to reuse markup on a website, it can be helpful to make use of <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots\">an HTML template</a>. HTML templates are ignored by the browser until they are called upon to be rendered. Thus, you can create complicated blocks of HTML and render them instantaneously via JavaScript.</p>\n\n<p>To create an HTML template, all you need to do is wrap up your HTML with the new <code>&lt;template&gt;</code> tag:</p>\n\n<pre><code class=\"lang-html\">&lt;template id=\"template\"&gt;\n  &lt;script&gt;\n    const button = document.getElementById('click-button');\n    button.addEventListener('click', event =&gt; alert(event));\n  &lt;/script&gt;\n  &lt;style&gt;\n    #click-button {\n    border: 0;\n    border-radius: 4px;\n    color: white;\n    font-size: 1.5rem;\n    padding: .5rem 1rem;\n    }\n  &lt;/style&gt;\n  &lt;button id=\"click-button\"&gt;Click Me!&lt;/button&gt;\n&lt;/template&gt;\n</code></pre>\n<h3 class=\"anchored\">\n  <a name=\"shadow-dom\" href=\"#shadow-dom\">Shadow DOM</a>\n</h3>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM\">The shadow DOM</a> is another concept which provides support for further web page encapsulation. Any elements within the shadow DOM are not affected by the CSS styles of any other markup on the page, and similarly, any CSS defined within the shadow DOM doesn't affect other elements. They can also be configured to not be affected by external JavaScript, either. Among other advantages, this results in lower memory usage for the browser and faster render times. If it's helpful, you can think of elements in the shadow DOM as more secure <code>iframe</code>s.</p>\n\n<p>To add an element to the shadow DOM, you call <code>attachShadow()</code> on it:</p>\n\n<pre><code class=\"lang-javascript\">class MyWebComponent extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n    }\n    connectedCallback() {\n        this.shadowRoot.innerHTML = `\n            &lt;p&gt;I'm in the Shadow Root!&lt;/p&gt;\n        `;\n    }\n}\n\nwindow.customElements.define(\"my-web-component\", MyWebComponent);\n</code></pre>\n\n<p>This creates a custom element, <code>&lt;my-web-component&gt;</code>, whose <code>p</code> tag would not be affected by any other styles on the page.</p>\n<h2 class=\"anchored\">\n  <a name=\"web-component-ecosystems\" href=\"#web-component-ecosystems\">Web component ecosystems</a>\n</h2>\n\n<p>The greatest advantage web components have over using a library is their ability to provide standards-compliant, <em>composable</em> HTML elements. What this means is that if you have built a web component, you can package it up as a release for other developers to consume as a dependency in their project, just like any other Node or Ruby package, and those developers can be assured that that web component will work across all (well, most) web browsers without requiring the browser to load a front-end framework like React, Angular, or Vue.</p>\n\n<p>To give an example, <a href=\"https://github.com/halvves/shader-doodle\">Shader Doodle</a> is a custom element which sets up the ability to easily create fragment shaders. Developers who need this functionality can just fetch the package and insert it as a <code>&lt;shader-doodle&gt;</code> tag in their HTML, rather than creating the functionality of Share Doodle from scratch.</p>\n\n<p>Now, with the great interoperability that web components give you, many frameworks and libraries like Vue or React have started to provide the option to generate web components out of their proprietary code. That way you don't have to learn all the low-level APIs of the aforementioned standards, and can instead focus on coding. There many other libraries for creating web components, like <a href=\"https://github.com/polymer\">Polymer</a>, <a href=\"https://github.com/x-tag/core\">X-Tag</a>, <a href=\"https://github.com/slimjs/slim.js\">slim.js</a>, <a href=\"https://github.com/riot/riot\">Riot.js</a>, and <a href=\"https://github.com/ionic-team/stencil\">Stencil</a>.</p>\n\n<p>Another great example of this are Salesforce’s <a href=\"https://lwc.dev/\">Lightning Web Components</a>, a lightweight framework that abstracts away the complexity of the different web standards. It provides a standards-compliant foundation for building web components which can be used in any project.</p>\n<h2 class=\"anchored\">\n  <a name=\"getting-more-involved-web-components\" href=\"#getting-more-involved-web-components\">Getting more involved web components</a>\n</h2>\n\n<p>We recorded <a href=\"https://www.heroku.com/podcasts/codeish/38-building-with-web-components\">an episode of Code[ish], our podcast on all things tech, that meticulously went through the history (and future!) of web components</a>. Be sure to check out that interview from <a href=\"https://www.manning.com/books/web-components-in-action\">someone who literally wrote the book on web components</a>.</p>\n\n<p>You can also join <a href=\"https://polymer.slack.com/messages/general/\">the Polymer Slack workspace</a> to chat with other web developers about working with these standards.</p>","PublishedAt":"2020-03-04 16:45:00+00:00","OriginURL":"https://blog.heroku.com/building-with-web-components","SourceName":"Heroku"}},{"node":{"ID":810,"Title":"How (Not) to Build Datasets and Consume Data at Your Company","Description":"The topic of datasets is not new, and they have been successfully used at SoundCloud for analytics purposes for a long time. In this blog…","PublishedAt":"2020-03-03 00:00:00+00:00","OriginURL":"https://developers.soundcloud.com/blog/how-not-to-build-datasets-and-consume-data-at-your-company","SourceName":"Soundcloud"}},{"node":{"ID":269,"Title":"Elasticsearch: Custom Analysis","Description":"GIPHY uses Elasticsearch to deliver all the best GIFs. Elasticsearch is an extremely fast, open source search engine supported by a great community. It has a robust Query API which allows us to quickly iterate our search algorithm. The Mapping API enables us to prototype new signals and account for the quirks in GIF metadata. [&#8230;]","PublishedAt":"2020-03-02 20:49:23+00:00","OriginURL":"https://engineering.giphy.com/elasticsearch-custom-analysis/","SourceName":"GIPHY"}},{"node":{"ID":638,"Title":"Why We Chose Go","Description":"","PublishedAt":"2020-03-02 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2020-03-02-whywechosego/","SourceName":"Trivago"}},{"node":{"ID":639,"Title":"An Open Door to Open Source: Relive our OSS Conference","Description":"","PublishedAt":"2020-02-25 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2020-02-25-videosfromouropensourceconferencein2019/","SourceName":"Trivago"}},{"node":{"ID":811,"Title":"The Magic of Generating an Xcode Project","Description":"Planet Earth vs. Jupiter. There is the same order of magnitude between the ratio of these two planets and the amount of code that defined…","PublishedAt":"2020-02-20 00:00:00+00:00","OriginURL":"https://developers.soundcloud.com/blog/tuist-project-generation","SourceName":"Soundcloud"}},{"node":{"ID":640,"Title":"Better URL Search with Elasticsearch","Description":"","PublishedAt":"2020-02-11 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2020-02-11-betterurlsearchwithelasticsearch/","SourceName":"Trivago"}}]}},"pageContext":{"limit":30,"skip":5310,"numPages":193,"currentPage":178}},"staticQueryHashes":["3649515864"]}