{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/103","result":{"data":{"allPost":{"edges":[{"node":{"ID":2700,"Title":"BE Experimentation with VWO","Description":"","PublishedAt":"2023-01-06 06:52:58+00:00","OriginURL":"https://medium.com/engineering-housing/be-experimentation-with-vwo-80a96b0c2c59?source=rss----3a69e32e2594---4","SourceName":"Housing.com"}},{"node":{"ID":2701,"Title":"Our favorite apps, books, and games of 2023 (Ep. 524)","Description":"<p>From BeReal to RetroPi, we look back at what brought us joy last year.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/06/our-favorite-apps-books-and-games-of-2023-ep-524/\">Our favorite apps, books, and games of 2023 (Ep. 524)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-06 05:40:43+00:00","OriginURL":"https://stackoverflow.blog/2023/01/06/our-favorite-apps-books-and-games-of-2023-ep-524/","SourceName":"Stack Overflow"}},{"node":{"ID":2698,"Title":"Blog: Kubernetes 1.26: Eviction policy for unhealthy pods guarded by PodDisruptionBudgets","Description":"<p><strong>Authors:</strong> Filip Křepinský (Red Hat), Morten Torkildsen (Google), Ravi Gudimetla (Apple)</p>\n<p>Ensuring the disruptions to your applications do not affect its availability isn't a simple\ntask. Last month's release of Kubernetes v1.26 lets you specify an <em>unhealthy pod eviction policy</em>\nfor <a href=\"https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#pod-disruption-budgets\">PodDisruptionBudgets</a> (PDBs)\nto help you maintain that availability during node management operations.\nIn this article, we will dive deeper into what modifications were introduced for PDBs to\ngive application owners greater flexibility in managing disruptions.</p>\n<h2 id=\"what-problems-does-this-solve\">What problems does this solve?</h2>\n<p>API-initiated eviction of pods respects PodDisruptionBudgets (PDBs). This means that a requested <a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/#pod-disruption\">voluntary disruption</a>\nvia an eviction to a Pod, should not disrupt a guarded application and <code>.status.currentHealthy</code> of a PDB should not fall\nbelow <code>.status.desiredHealthy</code>. Running pods that are <a href=\"https://kubernetes.io/docs/tasks/run-application/configure-pdb/#healthiness-of-a-pod\">Unhealthy</a>\ndo not count towards the PDB status, but eviction of these is only possible in case the application\nis not disrupted. This helps disrupted or not yet started application to achieve availability\nas soon as possible without additional downtime that would be caused by evictions.</p>\n<p>Unfortunately, this poses a problem for cluster administrators that would like to drain nodes\nwithout any manual interventions. Misbehaving applications with pods in <code>CrashLoopBackOff</code>\nstate (due to a bug or misconfiguration) or pods that are simply failing to become ready\nmake this task much harder. Any eviction request will fail due to violation of a PDB,\nwhen all pods of an application are unhealthy. Draining of a node cannot make any progress\nin that case.</p>\n<p>On the other hand there are users that depend on the existing behavior, in order to:</p>\n<ul>\n<li>prevent data-loss that would be caused by deleting pods that are guarding an underlying resource or storage</li>\n<li>achieve the best availability possible for their application</li>\n</ul>\n<p>Kubernetes 1.26 introduced a new experimental field to the PodDisruptionBudget API: <code>.spec.unhealthyPodEvictionPolicy</code>.\nWhen enabled, this field lets you support both of those requirements.</p>\n<h2 id=\"how-does-it-work\">How does it work?</h2>\n<p>API-initiated eviction is the process that triggers graceful pod termination.\nThe process can be initiated either by calling the API directly,\nby using a <code>kubectl drain</code> command, or other actors in the cluster.\nDuring this process every pod removal is consulted with appropriate PDBs,\nto ensure that a sufficient number of pods is always running in the cluster.</p>\n<p>The following policies allow PDB authors to have a greater control how the process deals with unhealthy pods.</p>\n<p>There are two policies <code>IfHealthyBudget</code> and <code>AlwaysAllow</code> to choose from.</p>\n<p>The former, <code>IfHealthyBudget</code>, follows the existing behavior to achieve the best availability\nthat you get by default. Unhealthy pods can be disrupted only if their application\nhas a minimum available <code>.status.desiredHealthy</code> number of pods.</p>\n<p>By setting the <code>spec.unhealthyPodEvictionPolicy</code> field of your PDB to <code>AlwaysAllow</code>,\nyou are choosing the best effort availability for your application.\nWith this policy it is always possible to evict unhealthy pods.\nThis will make it easier to maintain and upgrade your clusters.</p>\n<p>We think that <code>AlwaysAllow</code> will often be a better choice, but for some critical workloads you may\nstill prefer to protect even unhealthy Pods from node drains or other forms of API-initiated\neviction.</p>\n<h2 id=\"how-do-i-use-it\">How do I use it?</h2>\n<p>This is an alpha feature, which means you have to enable the <code>PDBUnhealthyPodEvictionPolicy</code>\n<a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gate</a>,\nwith the command line argument <code>--feature-gates=PDBUnhealthyPodEvictionPolicy=true</code>\nto the kube-apiserver.</p>\n<p>Here's an example. Assume that you've enabled the feature gate in your cluster, and that you\nalready defined a Deployment that runs a plain webserver. You labelled the Pods for that\nDeployment with <code>app: nginx</code>.\nYou want to limit avoidable disruption, and you know that best effort availability is\nsufficient for this app.\nYou decide to allow evictions even if those webserver pods are unhealthy.\nYou create a PDB to guard this application, with the <code>AlwaysAllow</code> policy for evicting\nunhealthy pods:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>policy/v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PodDisruptionBudget<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>nginx-pdb<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">selector</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">matchLabels</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">app</span>:<span style=\"color:#bbb\"> </span>nginx<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">maxUnavailable</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">1</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">unhealthyPodEvictionPolicy</span>:<span style=\"color:#bbb\"> </span>AlwaysAllow<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h2 id=\"how-can-i-learn-more\">How can I learn more?</h2>\n<ul>\n<li>Read the KEP: <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/3017-pod-healthy-policy-for-pdb\">Unhealthy Pod Eviction Policy for PDBs</a></li>\n<li>Read the documentation: <a href=\"https://kubernetes.io/docs/tasks/run-application/configure-pdb/#unhealthy-pod-eviction-policy\">Unhealthy Pod Eviction Policy</a> for PodDisruptionBudgets</li>\n<li>Review the Kubernetes documentation for <a href=\"docs/concepts/workloads/pods/disruptions/#pod-disruption-budgets\">PodDisruptionBudgets</a>, <a href=\"docs/tasks/administer-cluster/safely-drain-node/\">draining of Nodes</a> and <a href=\"docs/concepts/scheduling-eviction/api-eviction/\">evictions</a></li>\n</ul>\n<h2 id=\"how-do-i-get-involved\">How do I get involved?</h2>\n<p>If you have any feedback, please reach out to us in the <a href=\"https://kubernetes.slack.com/archives/C18NZM5K9\">#sig-apps</a> channel on Slack (visit <a href=\"https://slack.k8s.io/\">https://slack.k8s.io/</a> for an invitation if you need one), or on the SIG Apps mailing list: <a href=\"mailto:kubernetes-sig-apps@googlegroups.com\">kubernetes-sig-apps@googlegroups.com</a></p>","PublishedAt":"2023-01-06 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/01/06/unhealthy-pod-eviction-policy-for-pdbs/","SourceName":"Kubernetes"}},{"node":{"ID":2703,"Title":"Monitor Tanzu Kubernetes Grid on vSphere with Datadog","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/monitor-vsphere-tanzu-kubernetes-grid-with-datadog/monitor-vsphere-tkg-hero.png\" width=\"100%\"/>With vSphere and Tanzu Kubernetes Grid (TKG), VMware enables enterprise organizations to combine the economic advantages of virtual machines (VMs) with the agility, portability, and scalability provided by Kubernetes.vSphere is VMware&rsquo;s platform for the provisioning and management of VMs. vSphere&rsquo;s vCenter Servers enable organizations to centrally manage and monitor their VMs, while its ESXi hypervisors help them optimize their infrastructure and reduce costs by strategically allocating bare-metal server resources. TKG is VMware&rsquo;s turnkey solution for deploying and managing Kubernetes clusters at enterprise scale.","PublishedAt":"2023-01-06 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/monitor-vsphere-tanzu-kubernetes-grid-with-datadog/","SourceName":"Datadog"}},{"node":{"ID":2826,"Title":"What I Learned in One Year as an SRE Trainee","Description":"I recently celebrated my one year anniversary as a Site Reliability Engineering (SRE) trainee at SoundCloud. Looking back, I had very little…","PublishedAt":"2023-01-06 00:00:00+00:00","OriginURL":"https://developers.soundcloud.com/blog/sre-trainee","SourceName":"Soundcloud"}},{"node":{"ID":2696,"Title":"Amazon S3 Encrypts New Objects By Default","Description":"At AWS, security is job zero. Starting today, Amazon Simple Storage Service (Amazon S3) encrypts all new objects by default. Now, S3 automatically applies server-side encryption (SSE-S3) for each new object, unless you specify a different encryption option. SSE-S3 was first launched in 2011. As Jeff wrote at the time: “Amazon S3 server-side encryption handles […]","PublishedAt":"2023-01-05 21:03:09+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/amazon-s3-encrypts-new-objects-by-default/","SourceName":"AWS"}},{"node":{"ID":2697,"Title":"The Winter/Summer Bash 2022 Hat Cafe is now closed!","Description":"<p>We had fun celebrating Winter Bash 2022 with you all! While we’ve closed our cafe, let’s look at a few highlights and hat-wearing avatars that brought us joy this holiday season. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/05/the-winter-summer-bash-2022-hat-cafe-is-now-closed/\">The Winter/Summer Bash 2022 Hat Cafe is now closed!</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-05 20:58:54+00:00","OriginURL":"https://stackoverflow.blog/2023/01/05/the-winter-summer-bash-2022-hat-cafe-is-now-closed/","SourceName":"Stack Overflow"}},{"node":{"ID":2693,"Title":"2023 Predictions: Data Trends That Will Dominate Business Agenda in APAC","Description":"<p>Vice President of Asia Pacific and Japan Remus Lim discusses the key business trends that leaders in APAC need to keep an eye on, and how to leverage data to stay the course in the coming year.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/2023-predictions-data-trends-that-will-dominate-business-agenda-in-apac/\">2023 Predictions: Data Trends That Will Dominate Business Agenda in APAC</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2023-01-05 14:34:05+00:00","OriginURL":"https://blog.cloudera.com/2023-predictions-data-trends-that-will-dominate-business-agenda-in-apac/","SourceName":"Cloudera"}},{"node":{"ID":2692,"Title":"Blog: Kubernetes 1.26: Retroactive Default StorageClass","Description":"<p><strong>Author:</strong> Roman Bednář (Red Hat)</p>\n<p>The v1.25 release of Kubernetes introduced an alpha feature to change how a default StorageClass was assigned to a PersistentVolumeClaim (PVC).\nWith the feature enabled, you no longer need to create a default StorageClass first and PVC second to assign the class. Additionally, any PVCs without a StorageClass assigned can be updated later.\nThis feature was graduated to beta in Kubernetes 1.26.</p>\n<p>You can read <a href=\"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#retroactive-default-storageclass-assignment\">retroactive default StorageClass assignment</a> in the Kubernetes documentation for more details about how to use that,\nor you can read on to learn about why the Kubernetes project is making this change.</p>\n<h2 id=\"why-did-storageclass-assignment-need-improvements\">Why did StorageClass assignment need improvements</h2>\n<p>Users might already be familiar with a similar feature that assigns default StorageClasses to <strong>new</strong> PVCs at the time of creation. This is currently handled by the <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#defaultstorageclass\">admission controller</a>.</p>\n<p>But what if there wasn't a default StorageClass defined at the time of PVC creation?\nUsers would end up with a PVC that would never be assigned a class.\nAs a result, no storage would be provisioned, and the PVC would be somewhat &quot;stuck&quot; at this point.\nGenerally, two main scenarios could result in &quot;stuck&quot; PVCs and cause problems later down the road.\nLet's take a closer look at each of them.</p>\n<h3 id=\"changing-default-storageclass\">Changing default StorageClass</h3>\n<p>With the alpha feature enabled, there were two options admins had when they wanted to change the default StorageClass:</p>\n<ol>\n<li>\n<p>Creating a new StorageClass as default before removing the old one associated with the PVC.\nThis would result in having two defaults for a short period.\nAt this point, if a user were to create a PersistentVolumeClaim with storageClassName set to <code>null</code> (implying default StorageClass), the newest default StorageClass would be chosen and assigned to this PVC.</p>\n</li>\n<li>\n<p>Removing the old default first and creating a new default StorageClass.\nThis would result in having no default for a short time.\nSubsequently, if a user were to create a PersistentVolumeClaim with storageClassName set to <code>null</code> (implying default StorageClass), the PVC would be in <code>Pending</code> state forever.\nThe user would have to fix this by deleting the PVC and recreating it once the default StorageClass was available.</p>\n</li>\n</ol>\n<h3 id=\"resource-ordering-during-cluster-installation\">Resource ordering during cluster installation</h3>\n<p>If a cluster installation tool needed to create resources that required storage, for example, an image registry, it was difficult to get the ordering right.\nThis is because any Pods that required storage would rely on the presence of a default StorageClass and would fail to be created if it wasn't defined.</p>\n<h2 id=\"what-changed\">What changed</h2>\n<p>We've changed the PersistentVolume (PV) controller to assign a default StorageClass to any unbound PersistentVolumeClaim that has the storageClassName set to <code>null</code>.\nWe've also modified the PersistentVolumeClaim admission within the API server to allow the change of values from an unset value to an actual StorageClass name.</p>\n<h3 id=\"null-vs-empty-string\">Null <code>storageClassName</code> versus <code>storageClassName: &quot;&quot;</code> - does it matter?</h3>\n<p>Before this feature was introduced, those values were equal in terms of behavior. Any PersistentVolumeClaim with the storageClassName set to <code>null</code> or <code>&quot;&quot;</code> would bind to an existing PersistentVolume resource with storageClassName also set to <code>null</code> or <code>&quot;&quot;</code>.</p>\n<p>With this new feature enabled we wanted to maintain this behavior but also be able to update the StorageClass name.\nWith these constraints in mind, the feature changes the semantics of <code>null</code>. If a default StorageClass is present, <code>null</code> would translate to &quot;Give me a default&quot; and <code>&quot;&quot;</code> would mean &quot;Give me PersistentVolume that also has <code>&quot;&quot;</code> StorageClass name.&quot; In the absence of a StorageClass, the behavior would remain unchanged.</p>\n<p>Summarizing the above, we've changed the semantics of <code>null</code> so that its behavior depends on the presence or absence of a definition of default StorageClass.</p>\n<p>The tables below show all these cases to better describe when PVC binds and when its StorageClass gets updated.</p>\n<table>\n<caption>PVC binding behavior with Retroactive default StorageClass</caption>\n<thead>\n<tr>\n<th colspan=\"2\"></th>\n<th>PVC <tt>storageClassName</tt> = <code>\"\"</code></th>\n<th>PVC <tt>storageClassName</tt> = <code>null</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td rowspan=\"2\">Without default class</td>\n<td>PV <tt>storageClassName</tt> = <code>\"\"</code></td>\n<td>binds</td>\n<td>binds</td>\n</tr>\n<tr>\n<td>PV without <tt>storageClassName</tt></td>\n<td>binds</td>\n<td>binds</td>\n</tr>\n<tr>\n<td rowspan=\"2\">With default class</td>\n<td>PV <tt>storageClassName</tt> = <code>\"\"</code></td>\n<td>binds</td>\n<td>class updates</td>\n</tr>\n<tr>\n<td>PV without <tt>storageClassName</tt></td>\n<td>binds</td>\n<td>class updates</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"how-to-use-it\">How to use it</h2>\n<p>If you want to test the feature whilst it's alpha, you need to enable the relevant feature gate in the kube-controller-manager and the kube-apiserver. Use the <code>--feature-gates</code> command line argument:</p>\n<pre tabindex=\"0\"><code>--feature-gates=&#34;...,RetroactiveDefaultStorageClass=true&#34;\n</code></pre><h3 id=\"test-drive\">Test drive</h3>\n<p>If you would like to see the feature in action and verify it works fine in your cluster here's what you can try:</p>\n<ol>\n<li>Define a basic PersistentVolumeClaim:</li>\n</ol>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PersistentVolumeClaim<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>pvc-1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">accessModes</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- ReadWriteOnce<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">requests</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">storage</span>:<span style=\"color:#bbb\"> </span>1Gi<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><ol start=\"2\">\n<li>Create the PersistentVolumeClaim when there is no default StorageClass. The PVC won't provision or bind (unless there is an existing, suitable PV already present) and will remain in <code>Pending</code> state.</li>\n</ol>\n<pre tabindex=\"0\"><code>$ kc get pvc\nNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE\npvc-1 Pending\n</code></pre><ol start=\"3\">\n<li>Configure one StorageClass as default.</li>\n</ol>\n<pre tabindex=\"0\"><code>$ kc patch sc -p &#39;{&#34;metadata&#34;:{&#34;annotations&#34;:{&#34;storageclass.kubernetes.io/is-default-class&#34;:&#34;true&#34;}}}&#39;\nstorageclass.storage.k8s.io/my-storageclass patched\n</code></pre><ol start=\"4\">\n<li>Verify that PersistentVolumeClaims is now provisioned correctly and was updated retroactively with new default StorageClass.</li>\n</ol>\n<pre tabindex=\"0\"><code>$ kc get pvc\nNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE\npvc-1 Bound pvc-06a964ca-f997-4780-8627-b5c3bf5a87d8 1Gi RWO my-storageclass 87m\n</code></pre><h3 id=\"new-metrics\">New metrics</h3>\n<p>To help you see that the feature is working as expected we also introduced a new <code>retroactive_storageclass_total</code> metric to show how many times that the PV controller attempted to update PersistentVolumeClaim, and <code>retroactive_storageclass_errors_total</code> to show how many of those attempts failed.</p>\n<h2 id=\"getting-involved\">Getting involved</h2>\n<p>We always welcome new contributors so if you would like to get involved you can join our <a href=\"https://github.com/kubernetes/community/tree/master/sig-storage\">Kubernetes Storage Special-Interest-Group</a> (SIG).</p>\n<p>If you would like to share feedback, you can do so on our <a href=\"https://app.slack.com/client/T09NY5SBT/C09QZFCE5\">public Slack channel</a>.</p>\n<p>Special thanks to all the contributors that provided great reviews, shared valuable insight and helped implement this feature (alphabetical order):</p>\n<ul>\n<li>Deep Debroy (<a href=\"https://github.com/ddebroy\">ddebroy</a>)</li>\n<li>Divya Mohan (<a href=\"https://github.com/divya-mohan0209\">divya-mohan0209</a>)</li>\n<li>Jan Šafránek (<a href=\"https://github.com/jsafrane/\">jsafrane</a>)</li>\n<li>Joe Betz (<a href=\"https://github.com/jpbetz\">jpbetz</a>)</li>\n<li>Jordan Liggitt (<a href=\"https://github.com/liggitt\">liggitt</a>)</li>\n<li>Michelle Au (<a href=\"https://github.com/msau42\">msau42</a>)</li>\n<li>Seokho Son (<a href=\"https://github.com/seokho-son\">seokho-son</a>)</li>\n<li>Shannon Kularathna (<a href=\"https://github.com/shannonxtreme\">shannonxtreme</a>)</li>\n<li>Tim Bannister (<a href=\"https://github.com/sftim\">sftim</a>)</li>\n<li>Tim Hockin (<a href=\"https://github.com/thockin\">thockin</a>)</li>\n<li>Wojciech Tyczynski (<a href=\"https://github.com/wojtek-t\">wojtek-t</a>)</li>\n<li>Xing Yang (<a href=\"https://github.com/xing-yang\">xing-yang</a>)</li>\n</ul>","PublishedAt":"2023-01-05 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/01/05/retroactive-default-storage-class/","SourceName":"Kubernetes"}},{"node":{"ID":2694,"Title":"Visualize user behavior with Datadog Heatmaps","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/visualize-behavior-datadog-heatmaps/heatmaps-feature-announcement-hero.png\" width=\"100%\"/>While understanding user behavior is key to effectively optimizing your application, it can be difficult to grasp how problems in individual sessions fit into larger trends. You could look at each relevant user session one by one to gauge how many users are experiencing an issue and to what degree. However, clicking through hundreds (or even thousands) of sessions is time-consuming and can overwhelm you with data that’s hard to analyze.","PublishedAt":"2023-01-05 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/visualize-behavior-datadog-heatmaps/","SourceName":"Datadog"}},{"node":{"ID":2695,"Title":"How the third-largest US county uses Elastic to accelerate investigations","Description":"","PublishedAt":"2023-01-05 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/how-the-third-largest-us-county-uses-elastic-to-accelerate-investigations","SourceName":"Elastic"}},{"node":{"ID":2796,"Title":"Datadog at AWS SKO 2023","Description":"","PublishedAt":"2023-01-05 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/event/micro-awssko-2023/","SourceName":"Datadog"}},{"node":{"ID":2690,"Title":"GitHub Availability Report: December 2022","Description":"In December, we did not experience any incidents that resulted in degraded performance across GitHub services. This report sheds light into an incident that impacted customers using GitHub Packages and GitHub Pages in November.","PublishedAt":"2023-01-04 17:20:40+00:00","OriginURL":"https://github.blog/2023-01-04-github-availability-report-december-2022/","SourceName":"GitHub"}},{"node":{"ID":2691,"Title":"Creating AWS security efficiencies in IT","Description":"In this post, we'll discuss several steps that your teams can take to create AWS efficiencies and streamline cloud security. ","PublishedAt":"2023-01-04 17:16:17+00:00","OriginURL":"https://snyk.io/blog/creating-aws-security-efficiencies/","SourceName":"Snyk"}},{"node":{"ID":2689,"Title":"How to Become a Developer Advocate: Part 1, Public Speaking","Description":"This is the first installment in a series of blog posts on how to build the skills needed to become a developer advocate (or similar technical roles). This post focuses on public speaking. ","PublishedAt":"2023-01-04 17:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/how-to-become-a-developer-advocate-part-1-public-speaking","SourceName":"HashiCorp"}},{"node":{"ID":2687,"Title":"The future of software engineering is powered by AIOps and open source","Description":"<p>Hear how Intuit is using AI to help its dev teams ship faster. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/04/the-future-of-software-engineering-is-powered-by-aiops-and-open-source/\">The future of software engineering is powered by AIOps and open source</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-04 15:58:28+00:00","OriginURL":"https://stackoverflow.blog/2023/01/04/the-future-of-software-engineering-is-powered-by-aiops-and-open-source/","SourceName":"Stack Overflow"}},{"node":{"ID":2685,"Title":"Getting your data in shape for machine learning","Description":"<p>Machine learning uses data structures that don't always resemble the ones used in standard computing. You'll need to process your data first if you want efficient machine learning. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/04/getting-your-data-in-shape-for-machine-learning/\">Getting your data in shape for machine learning</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-04 15:00:00+00:00","OriginURL":"https://stackoverflow.blog/2023/01/04/getting-your-data-in-shape-for-machine-learning/","SourceName":"Stack Overflow"}},{"node":{"ID":2686,"Title":"Better developer experience through AI and open source","Description":"<p>This podcast series explores how the company is using AI and open source to let their engineers build better software faster. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/04/better-developer-experience-through-ai-and-open-source/\">Better developer experience through AI and open source</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-04 14:44:24+00:00","OriginURL":"https://stackoverflow.blog/2023/01/04/better-developer-experience-through-ai-and-open-source/","SourceName":"Stack Overflow"}},{"node":{"ID":2683,"Title":"How Cloudflare can help stop malware before it reaches your app","Description":"Today, we’re making the job of application security teams easier, by providing a content scanning engine integrated with our Web Application Firewall (WAF), so that malicious files being uploaded by end users, never reach origin servers in the first place","PublishedAt":"2023-01-04 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/waf-content-scanning/","SourceName":"Cloudflare"}},{"node":{"ID":2682,"Title":"Price Transparency: Putting the customer first in B2B software","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2023/01/Mixpanel_TransparentPricing_Blog-1024x576.png\" class=\"type:primaryImage\" /></figure>\n<p>Customer Focus is one of our core cultural values at Mixpanel. We respect our customers’ time and strive to make buying software as seamless and frictionless as subscribing to your favorite music streaming service. That’s why we’ve made all of Mixpanel’s plans available for purchase online with our pricing clearly listed on our website. This</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/mixpanel-pricing-transparency-all-plans-available-for-purchase/\">Price Transparency: Putting the customer first in B2B software</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2023-01-04 13:00:00+00:00","OriginURL":"https://mixpanel.com/blog/mixpanel-pricing-transparency-all-plans-available-for-purchase/","SourceName":"Mixpanel"}},{"node":{"ID":2684,"Title":"4 resolutions for state & local government leaders to reduce tool sprawl in 2023","Description":"","PublishedAt":"2023-01-04 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/4-resolutions-for-state-local-government-leaders-to-reduce-tool-sprawl-in-2023","SourceName":"Elastic"}},{"node":{"ID":2688,"Title":"How governments can generate mainframe savings and delight users by \"freeing their data\"","Description":"","PublishedAt":"2023-01-04 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/how-governments-generate-mainframe-savings-delight-users-freeing-their-data","SourceName":"Elastic"}},{"node":{"ID":2681,"Title":"A New Phase in the History of Evernote","Description":"<p>Luca Ferrari, CEO of Bending Spoons, discusses his company's acquisition of Evernote and shares his vision for the future.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://evernote.com/blog/new-phase-in-evernote-history/\">A New Phase in the History of Evernote</a> appeared first on <a rel=\"nofollow\" href=\"https://evernote.com/blog\"></a>.</p>\n","PublishedAt":"2023-01-03 22:44:06+00:00","OriginURL":"https://evernote.com/blog/new-phase-in-evernote-history/","SourceName":"Evernote"}},{"node":{"ID":2677,"Title":"How a Visual Goal Tracker Helps You Keep Your Eye on the Prize","Description":"<p>We live in a world filled with distractions. Whether it’s the latest streaming series or drama on the internet, getting sidetracked from working on your goals is easy—even for people who are disciplined enough to write them down in the first place. And while you may think you’re strong enough to resist, diversion will never be more than a cellphone screen away. That’s where a visual goal tracker comes in</p>\n<p><a class=\"continue-reading\" href=\"https://evernote.com/blog/visual-goal-tracker/\">Continue reading...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://evernote.com/blog/visual-goal-tracker/\">How a Visual Goal Tracker Helps You Keep Your Eye on the Prize</a> appeared first on <a rel=\"nofollow\" href=\"https://evernote.com/blog\"></a>.</p>\n","PublishedAt":"2023-01-03 14:30:00+00:00","OriginURL":"https://evernote.com/blog/visual-goal-tracker/","SourceName":"Evernote"}},{"node":{"ID":2675,"Title":"From life without parole to startup CTO (Ep. 522)","Description":"<p>Ever wondered what it's like learning to code from an XML file of raw Stack Overflow data?</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/01/03/jessica-hicklin-unlocked-labs-overflow-offline/\">From life without parole to startup CTO (Ep. 522)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-01-03 05:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/01/03/jessica-hicklin-unlocked-labs-overflow-offline/","SourceName":"Stack Overflow"}},{"node":{"ID":2676,"Title":"What Have I Even Been Doing Today?","Description":"","PublishedAt":"2023-01-03 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2023-01-03-engineer-to-manager-three-mindset-shifts/","SourceName":"Trivago"}},{"node":{"ID":2678,"Title":"How to put your untapped data to work to transform your business","Description":"","PublishedAt":"2023-01-03 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/how-to-put-your-untapped-data-to-work-to-transform-your-business","SourceName":"Elastic"}},{"node":{"ID":2679,"Title":"Identify and resolve incidents faster with InsightFinder’s offering in the Datadog Marketplace","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/resolve-incidents-faster-with-insightfinder/insightfinder_hero.png\" width=\"100%\"/>InsightFinder is a SaaS platform that uses AI-backed predictive analytics to predict and prevent production incidents. Using InsightFinder with Datadog, you can quickly identify hidden correlations in your application metrics, logs, and events and address application issues before they devolve into production outages and create customer impact.After you sign up for an InsightFinder trial in the Datadog Marketplace and install the out-of-the-box (OOTB) InsightFinder integration, you can begin sending metrics from Datadog to InsightFinder’s unsupervised ML engine to predict incidents and identify hidden correlations.","PublishedAt":"2023-01-03 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/resolve-incidents-faster-with-insightfinder/","SourceName":"Datadog"}},{"node":{"ID":2680,"Title":"Looking back at 2022 — Elastic year in review","Description":"","PublishedAt":"2023-01-03 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/looking-back-at-2022-elastic-year-in-review","SourceName":"Elastic"}},{"node":{"ID":2674,"Title":"Blog: Kubernetes v1.26: Alpha support for cross-namespace storage data sources","Description":"<p><strong>Author:</strong> Takafumi Takahashi (Hitachi Vantara)</p>\n<p>Kubernetes v1.26, released last month, introduced an alpha feature that\nlets you specify a data source for a PersistentVolumeClaim, even where the source\ndata belong to a different namespace.\nWith the new feature enabled, you specify a namespace in the <code>dataSourceRef</code> field of\na new PersistentVolumeClaim. Once Kubernetes checks that access is OK, the new\nPersistentVolume can populate its data from the storage source specified in that other\nnamespace.\nBefore Kubernetes v1.26, provided your cluster had the <code>AnyVolumeDataSource</code> feature enabled,\nyou could already provision new volumes from a data source in the <strong>same</strong>\nnamespace.\nHowever, that only worked for the data source in the same namespace,\ntherefore users couldn't provision a PersistentVolume with a claim\nin one namespace from a data source in other namespace.\nTo solve this problem, Kubernetes v1.26 added a new alpha <code>namespace</code> field\nto <code>dataSourceRef</code> field in PersistentVolumeClaim the API.</p>\n<h2 id=\"how-it-works\">How it works</h2>\n<p>Once the csi-provisioner finds that a data source is specified with a <code>dataSourceRef</code> that\nhas a non-empty namespace name,\nit checks all reference grants within the namespace that's specified by the<code>.spec.dataSourceRef.namespace</code>\nfield of the PersistentVolumeClaim, in order to see if access to the data source is allowed.\nIf any ReferenceGrant allows access, the csi-provisioner provisions a volume from the data source.</p>\n<h2 id=\"trying-it-out\">Trying it out</h2>\n<p>The following things are required to use cross namespace volume provisioning:</p>\n<ul>\n<li>Enable the <code>AnyVolumeDataSource</code> and <code>CrossNamespaceVolumeDataSource</code> <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gates</a> for the kube-apiserver and kube-controller-manager</li>\n<li>Install a CRD for the specific <code>VolumeSnapShot</code> controller</li>\n<li>Install the CSI Provisioner controller and enable the <code>CrossNamespaceVolumeDataSource</code> feature gate</li>\n<li>Install the CSI driver</li>\n<li>Install a CRD for ReferenceGrants</li>\n</ul>\n<h2 id=\"putting-it-all-together\">Putting it all together</h2>\n<p>To see how this works, you can install the sample and try it out.\nThis sample do to create PVC in dev namespace from VolumeSnapshot in prod namespace.\nThat is a simple example. For real world use, you might want to use a more complex approach.</p>\n<h3 id=\"example-assumptions\">Assumptions for this example</h3>\n<ul>\n<li>Your Kubernetes cluster was deployed with <code>AnyVolumeDataSource</code> and <code>CrossNamespaceVolumeDataSource</code> feature gates enabled</li>\n<li>There are two namespaces, dev and prod</li>\n<li>CSI driver is being deployed</li>\n<li>There is an existing VolumeSnapshot named <code>new-snapshot-demo</code> in the <em>prod</em> namespace</li>\n<li>The ReferenceGrant CRD (from the Gateway API project) is already deployed</li>\n</ul>\n<h3 id=\"grant-referencegrants-read-permission-to-the-csi-provisioner\">Grant ReferenceGrants read permission to the CSI Provisioner</h3>\n<p>Access to ReferenceGrants is only needed when the CSI driver\nhas the <code>CrossNamespaceVolumeDataSource</code> controller capability.\nFor this example, the external-provisioner needs <strong>get</strong>, <strong>list</strong>, and <strong>watch</strong>\npermissions for <code>referencegrants</code> (API group <code>gateway.networking.k8s.io</code>).</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">apiGroups</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;gateway.networking.k8s.io&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;referencegrants&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">verbs</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;get&#34;</span>,<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;list&#34;</span>,<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;watch&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h3 id=\"enable-the-crossnamespacevolumedatasource-feature-gate-for-the-csi-provisioner\">Enable the CrossNamespaceVolumeDataSource feature gate for the CSI Provisioner</h3>\n<p>Add <code>--feature-gates=CrossNamespaceVolumeDataSource=true</code> to the csi-provisioner command line.\nFor example, use this manifest snippet to redefine the container:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">args</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- -v=5<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- --csi-address=/csi/csi.sock<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- --feature-gates=Topology=true<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- --feature-gates=CrossNamespaceVolumeDataSource=true<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>csi-provisioner:latest<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">imagePullPolicy</span>:<span style=\"color:#bbb\"> </span>IfNotPresent<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>csi-provisioner<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h3 id=\"create-a-referencegrant\">Create a ReferenceGrant</h3>\n<p>Here's a manifest for an example ReferenceGrant.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>gateway.networking.k8s.io/v1beta1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>ReferenceGrant<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>allow-prod-pvc<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">namespace</span>:<span style=\"color:#bbb\"> </span>prod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">from</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">group</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PersistentVolumeClaim<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">namespace</span>:<span style=\"color:#bbb\"> </span>dev<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">to</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">group</span>:<span style=\"color:#bbb\"> </span>snapshot.storage.k8s.io<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>VolumeSnapshot<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>new-snapshot-demo<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h3 id=\"create-a-persistentvolumeclaim-by-using-cross-namespace-data-source\">Create a PersistentVolumeClaim by using cross namespace data source</h3>\n<p>Kubernetes creates a PersistentVolumeClaim on dev and the CSI driver populates\nthe PersistentVolume used on dev from snapshots on prod.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>PersistentVolumeClaim<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>example-pvc<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">namespace</span>:<span style=\"color:#bbb\"> </span>dev<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">storageClassName</span>:<span style=\"color:#bbb\"> </span>example<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">accessModes</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- ReadWriteOnce<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">requests</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">storage</span>:<span style=\"color:#bbb\"> </span>1Gi<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">dataSourceRef</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">apiGroup</span>:<span style=\"color:#bbb\"> </span>snapshot.storage.k8s.io<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>VolumeSnapshot<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>new-snapshot-demo<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">namespace</span>:<span style=\"color:#bbb\"> </span>prod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">volumeMode</span>:<span style=\"color:#bbb\"> </span>Filesystem<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h2 id=\"how-can-i-learn-more\">How can I learn more?</h2>\n<p>The enhancement proposal,\n<a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-storage/3294-provision-volumes-from-cross-namespace-snapshots\">Provision volumes from cross-namespace snapshots</a>, includes lots of detail about the history and technical implementation of this feature.</p>\n<p>Please get involved by joining the <a href=\"https://github.com/kubernetes/community/tree/master/sig-storage\">Kubernetes Storage Special Interest Group (SIG)</a>\nto help us enhance this feature.\nThere are a lot of good ideas already and we'd be thrilled to have more!</p>\n<h2 id=\"acknowledgments\">Acknowledgments</h2>\n<p>It takes a wonderful group to make wonderful software.\nSpecial thanks to the following people for the insightful reviews,\nthorough consideration and valuable contribution to the CrossNamespaceVolumeDataSouce feature:</p>\n<ul>\n<li>Michelle Au (msau42)</li>\n<li>Xing Yang (xing-yang)</li>\n<li>Masaki Kimura (mkimuram)</li>\n<li>Tim Hockin (thockin)</li>\n<li>Ben Swartzlander (bswartz)</li>\n<li>Rob Scott (robscott)</li>\n<li>John Griffith (j-griffith)</li>\n<li>Michael Henriksen (mhenriks)</li>\n<li>Mustafa Elbehery (Elbehery)</li>\n</ul>\n<p>It’s been a joy to work with y'all on this.</p>","PublishedAt":"2023-01-02 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/01/02/cross-namespace-data-sources-alpha/","SourceName":"Kubernetes"}}]}},"pageContext":{"limit":30,"skip":3060,"numPages":193,"currentPage":103}},"staticQueryHashes":["3649515864"]}