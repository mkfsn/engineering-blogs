{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/83","result":{"data":{"allPost":{"edges":[{"node":{"ID":3318,"Title":"More efficient pair programming with Datadog CoScreen","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/pair-programming-coscreen-datadog/coscreen-v5-hero.png\" width=\"100%\"/>Pair programming is a well-established practice in agile software development. But it can be difficult in remote settings, as most remote collaboration tools don&rsquo;t accommodate real-time, spontaneous interactivity among participants&rsquo; desktop environments. Datadog CoScreen changes that by combining interactive screen sharing and video conferencing in a way that closely mimics in-person collaboration. By enabling engineering and product teams to simultaneously video chat, share multiple application windows, and seamlessly interact across each other&rsquo;s desktop environments, CoScreen makes collaborative software engineering and product development fluid and intuitive.","PublishedAt":"2023-03-31 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/pair-programming-coscreen-datadog/","SourceName":"Datadog"}},{"node":{"ID":3310,"Title":"HashiCorp earns Comparably awards for company and teams","Description":"Comparably recognizes HashiCorp with awards for Best Company Outlook, Best Marketing Team, Best Sales Team, and Best HR Team.","PublishedAt":"2023-03-30 22:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/hashicorp-earns-comparably-awards-for-company-and-teams","SourceName":"HashiCorp"}},{"node":{"ID":3309,"Title":"Amazon GuardDuty Now Supports Amazon EKS Runtime Monitoring","Description":"Since Amazon GuardDuty launched in 2017, GuardDuty has been capable of analyzing tens of billions of events per minute across multiple AWS data sources, such as AWS CloudTrail event logs, Amazon Virtual Private Cloud (Amazon VPC) Flow Logs, and DNS query logs, Amazon Simple Storage Service (Amazon S3) data plane events, Amazon Elastic Kubernetes Service […]","PublishedAt":"2023-03-30 21:03:43+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/amazon-guardduty-now-supports-amazon-eks-runtime-monitoring/","SourceName":"AWS"}},{"node":{"ID":3307,"Title":"HCP Consul cluster peering enhances multi-cloud connectivity","Description":"Cluster peering for HashiCorp-managed HCP Consul in AWS and Azure boosts multi-cloud and hybrid-cloud connectivity in the enterprise. ","PublishedAt":"2023-03-30 18:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/hcp-consul-cluster-peering-enhances-multi-cloud-connectivity","SourceName":"HashiCorp"}},{"node":{"ID":3299,"Title":"Renew your existing HashiCorp Certifications","Description":"HashiCorp certification holders can now renew their certifications.","PublishedAt":"2023-03-30 16:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/renew-your-existing-hashicorp-certifications","SourceName":"HashiCorp"}},{"node":{"ID":3308,"Title":"How LinkedIn automates cherry-picking commits to improve developer productivity","Description":"Our developers at LinkedIn are constantly exploring ways to enhance and strengthen our platform, aiming to provide our members and customers with the greatest possible access to knowledge and connections. With approximately 15,000 code repositories, our developers work tirelessly to make thousands of code changes each day, improving functionality and resolving any issues that may arise. Most of these repositories practice trunk-based development, which means developers push code changes frequently to the trunk (main branch) and avoid any other long-lived branches. Code changes are [&#8230;]","PublishedAt":"2023-03-30 15:00:00+00:00","OriginURL":"https://engineering.linkedin.com/blog/2023/how-linkedin-automates-cherry-picking-commits-to-improve-develop","SourceName":"Linkedin"}},{"node":{"ID":3505,"Title":"How LinkedIn automates cherry-picking commits to improve developer productivity","Description":"Our developers at LinkedIn are constantly exploring ways to enhance and strengthen our platform, aiming to provide our members and customers with the greatest possible access to knowledge and connections. With approximately 15,000 code repositories, our developers work tirelessly to make thousands of code changes each day, improving functionality and resolving any issues that may arise. Most of these repositories practice trunk-based development, which means developers push code changes frequently to the trunk (main branch) and avoid any other long-lived branches. Code changes are [&#8230;]","PublishedAt":"2023-03-30 15:00:00+00:00","OriginURL":"https://engineering.linkedin.com/content/engineering/en-us/blog/2023/how-linkedin-automates-cherry-picking-commits-to-improve-develop","SourceName":"Linkedin"}},{"node":{"ID":3300,"Title":"How to establish a product analytics practice","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2023/03/Product-Analytics-Practice_Yellow-1024x577.png\" class=\"type:primaryImage\" /></figure>\n<p>&#160; Product analytics promises us something incredible: With more behavioral data about your users, you can make more informed product decisions. But what if you feel like you’re drowning in data? If you have a mature, well-established product, it’s even harder to mine through millions of end users and billions of data points. Or what</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/establish-a-product-analytics-practice/\">How to establish a product analytics practice</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2023-03-30 14:00:00+00:00","OriginURL":"https://mixpanel.com/blog/establish-a-product-analytics-practice/","SourceName":"Mixpanel"}},{"node":{"ID":3298,"Title":"From IP packets to HTTP: the many faces of our Oxy framework","Description":"We have recently introduced Oxy, our Rust-based framework for proxies powering many Cloudflare services and products. Today, we will explain why and how it spans various layers of the OSI model, by handling directly raw IP packets, TCP connections and UDP payloads","PublishedAt":"2023-03-30 13:00:00+00:00","OriginURL":"https://blog.cloudflare.com/from-ip-packets-to-http-the-many-faces-of-our-oxy-framework/","SourceName":"Cloudflare"}},{"node":{"ID":3297,"Title":"Using signed URLs to simplify data uploads","Description":"","PublishedAt":"2023-03-30 11:35:14+00:00","OriginURL":"https://medium.com/miro-engineering/using-signed-urls-to-simplify-data-uploads-623635ceb769?source=rss----555f7fd62a50---4","SourceName":"Miro Engineering"}},{"node":{"ID":3296,"Title":"Helping protect personal information in the cloud, all across the world","Description":"Helping protect personal information in the cloud, all across the world","PublishedAt":"2023-03-30 10:46:56+00:00","OriginURL":"https://blog.cloudflare.com/cloudflare-official-gdpr-code-of-conduct/","SourceName":"Cloudflare"}},{"node":{"ID":3294,"Title":"Blog: Kubernetes Validating Admission Policies: A Practical Example","Description":"<p><strong>Authors</strong>: Craig Box (ARMO), Ben Hirschberg (ARMO)</p>\n<p>Admission control is an important part of the Kubernetes control plane, with several internal\nfeatures depending on the ability to approve or change an API object as it is submitted to the\nserver. It is also useful for an administrator to be able to define business logic, or policies,\nregarding what objects can be admitted into a cluster. To better support that use case, <a href=\"https://kubernetes.io/blog/2017/06/kubernetes-1-7-security-hardening-stateful-application-extensibility-updates/\">Kubernetes\nintroduced external admission control in\nv1.7</a>.</p>\n<p>In addition to countless custom, internal implementations, many open source projects and commercial\nsolutions implement admission controllers with user-specified policy, including\n<a href=\"https://github.com/kyverno/kyverno\">Kyverno</a> and Open Policy Agent’s\n<a href=\"https://github.com/open-policy-agent/gatekeeper\">Gatekeeper</a>.</p>\n<p>While admission controllers for policy have seen adoption, there are blockers for their widespread\nuse. Webhook infrastructure must be maintained as a production service, with all that entails. The\nfailure case of an admission control webhook must either be closed, reducing the availability of the\ncluster; or open, negating the use of the feature for policy enforcement. The network hop and\nevaluation time makes admission control a notable component of latency when dealing with, for\nexample, pods being spun up to respond to a network request in a &quot;serverless&quot; environment.</p>\n<h2 id=\"validating-admission-policies-and-the-common-expression-language\">Validating admission policies and the Common Expression Language</h2>\n<p>Version 1.26 of Kubernetes introduced, in alpha, a compromise solution. <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/validating-admission-policy/\">Validating admission\npolicies</a> are a declarative,\nin-process alternative to admission webhooks. They use the <a href=\"https://github.com/google/cel-spec\">Common Expression\nLanguage</a> (CEL) to declare validation rules.</p>\n<p>CEL was developed by Google for security and policy use cases, based on learnings from the Firebase\nreal-time database. Its design allows it to be safely embedded into applications and executed in\nmicroseconds, with limited compute and memory impact. <a href=\"https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#validation-rules\">Validation rules for\nCRDs</a>\nintroduced CEL to the Kubernetes ecosystem in v1.23, and at the time it was noted that the language\nwould suit a more generic implementation of validation by admission control.</p>\n<h2 id=\"giving-cel-a-roll-a-practical-example\">Giving CEL a roll - a practical example</h2>\n<p><a href=\"https://github.com/kubescape/kubescape\">Kubescape</a> is a CNCF project which has become one of the\nmost popular ways for users to improve the security posture of a Kubernetes cluster and validate its\ncompliance. Its <a href=\"https://github.com/kubescape/regolibrary\">controls</a> — groups of tests against API\nobjects — are built in <a href=\"https://www.openpolicyagent.org/docs/latest/policy-language/\">Rego</a>, the\npolicy language of Open Policy Agent.</p>\n<p>Rego has a reputation for complexity, based largely on the fact that it is a declarative query\nlanguage (like SQL). It <a href=\"https://github.com/kubernetes/enhancements/blob/499e28/keps/sig-api-machinery/2876-crd-validation-expression-language/README.md#alternatives\">was\nconsidered</a>\nfor use in Kubernetes, but it does not offer the same sandbox constraints as CEL.</p>\n<p>A common feature request for the project is to be able to implement policies based on Kubescape’s\nfindings and output. For example, after scanning pods for <a href=\"https://hub.armosec.io/docs/c-0020\">known paths to cloud credential\nfiles</a>, users would like the ability to enforce policy that\nthese pods should not be admitted at all. The Kubescape team thought this would be the perfect\nopportunity to try and port our existing controls to CEL and apply them as admission policies.</p>\n<h3 id=\"show-me-the-policy\">Show me the policy</h3>\n<p>It did not take us long to convert many of our controls and build a <a href=\"https://github.com/kubescape/cel-admission-library\">library of validating admission\npolicies</a>. Let’s look at one as an example.</p>\n<p>Kubescape’s <a href=\"https://hub.armosec.io/docs/c-0017\">control C-0017</a> covers the requirement for\ncontainers to have an immutable (read-only) root filesystem. This is a best practice according to\nthe <a href=\"https://kubernetes.io/blog/2021/10/05/nsa-cisa-kubernetes-hardening-guidance/#immutable-container-filesystems\">NSA Kubernetes hardening\nguidelines</a>,\nbut is not currently required as a part of any of the <a href=\"https://kubernetes.io/docs/concepts/security/pod-security-standards/\">pod security\nstandards</a>.</p>\n<p>Here's how we implemented it in CEL:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>admissionregistration.k8s.io/v1alpha1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>ValidatingAdmissionPolicy<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;kubescape-c-0017-deny-resources-with-mutable-container-filesystem&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">failurePolicy</span>:<span style=\"color:#bbb\"> </span>Fail<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">matchConstraints</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resourceRules</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">apiGroups</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">apiVersions</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;v1&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">operations</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;CREATE&#34;</span>,<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;UPDATE&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;pods&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">apiGroups</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;apps&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">apiVersions</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;v1&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">operations</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;CREATE&#34;</span>,<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;UPDATE&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;deployments&#34;</span>,<span style=\"color:#b44\">&#34;replicasets&#34;</span>,<span style=\"color:#b44\">&#34;daemonsets&#34;</span>,<span style=\"color:#b44\">&#34;statefulsets&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">apiGroups</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;batch&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">apiVersions</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;v1&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">operations</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;CREATE&#34;</span>,<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;UPDATE&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;jobs&#34;</span>,<span style=\"color:#b44\">&#34;cronjobs&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">validations</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">expression</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;object.kind != &#39;Pod&#39; || object.spec.containers.all(container, has(container.securityContext) &amp;&amp; has(container.securityContext.readOnlyRootFilesystem) &amp;&amp; container.securityContext.readOnlyRootFilesystem == true)&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">message</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;Pods having containers with mutable filesystem not allowed! (see more at https://hub.armosec.io/docs/c-0017)&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">expression</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;[&#39;Deployment&#39;,&#39;ReplicaSet&#39;,&#39;DaemonSet&#39;,&#39;StatefulSet&#39;,&#39;Job&#39;].all(kind, object.kind != kind) || object.spec.template.spec.containers.all(container, has(container.securityContext) &amp;&amp; has(container.securityContext.readOnlyRootFilesystem) &amp;&amp; container.securityContext.readOnlyRootFilesystem == true)&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">message</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;Workloads having containers with mutable filesystem not allowed! (see more at https://hub.armosec.io/docs/c-0017)&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">expression</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;object.kind != &#39;CronJob&#39; || object.spec.jobTemplate.spec.template.spec.containers.all(container, has(container.securityContext) &amp;&amp; has(container.securityContext.readOnlyRootFilesystem) &amp;&amp; container.securityContext.readOnlyRootFilesystem == true)&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">message</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;CronJob having containers with mutable filesystem not allowed! (see more at https://hub.armosec.io/docs/c-0017)&#34;</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>Match constraints are provided for three possible API groups: the <code>core/v1</code> group for Pods, the\n<code>apps/v1</code> workload controllers, and the <code>batch/v1</code> job controllers.</p>\n<div class=\"alert alert-info note callout\" role=\"alert\">\n<strong>Note:</strong> <code>matchConstraints</code> will convert the API object to the matched version for you. If, for\nexample, an API request was for <code>apps/v1beta1</code> and you match <code>apps/v1</code> in matchConstraints, the API\nrequest will be converted from <code>apps/v1beta1</code> to <code>apps/v1</code> and then validated. This has the useful\nproperty of making validation rules secure against the introduction of new versions of APIs, which\nwould otherwise allow API requests to sneak past the validation rule by using the newly introduced\nversion.\n</div>\n<p>The <code>validations</code> include the CEL rules for the objects. There are three different expressions,\ncatering for the fact that a Pod <code>spec</code> can be at the root of the object (a <a href=\"https://kubernetes.io/docs/concepts/configuration/overview/#naked-pods-vs-replicasets-deployments-and-jobs\">naked\npod</a>),\nunder <code>template</code> (a workload controller or a Job), or under <code>jobTemplate</code> (a CronJob).</p>\n<p>In the event that any <code>spec</code> does not have <code>readOnlyRootFilesystem</code> set to true, the object will not\nbe admitted.</p>\n<div class=\"alert alert-info note callout\" role=\"alert\">\n<strong>Note:</strong> In our initial release, we have grouped the three expressions into the same policy\nobject. This means they can be enabled and disabled atomically, and thus there is no chance that a\nuser will accidentally leave a compliance gap by enabling policy for one API group and not the\nothers. Breaking them into separate policies would allow us access to improvements targeted for the\n1.27 release, including type checking. We are talking to SIG API Machinery about how to best address\nthis before the APIs reach <code>v1</code>.\n</div>\n<h3 id=\"using-the-cel-library-in-your-cluster\">Using the CEL library in your cluster</h3>\n<p>Policies are provided as Kubernetes objects, which are then bound to certain resources by a\n<a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\">selector</a>.</p>\n<p><a href=\"https://minikube.sigs.k8s.io/docs/\">Minikube</a> is a quick and easy way to install and configure a\nKubernetes cluster for testing. To install Kubernetes v1.26 with the <code>ValidatingAdmissionPolicy</code>\n<a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gate</a> enabled:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-shell\" data-lang=\"shell\"><span style=\"display:flex;\"><span>minikube start --kubernetes-version<span style=\"color:#666\">=</span>1.26.1 --extra-config<span style=\"color:#666\">=</span>apiserver.runtime-config<span style=\"color:#666\">=</span>admissionregistration.k8s.io/v1alpha1 --feature-gates<span style=\"color:#666\">=</span><span style=\"color:#b44\">&#39;ValidatingAdmissionPolicy=true&#39;</span>\n</span></span></code></pre></div><p>To install the policies in your cluster:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-shell\" data-lang=\"shell\"><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># Install configuration CRD</span>\n</span></span><span style=\"display:flex;\"><span>kubectl apply -f https://github.com/kubescape/cel-admission-library/releases/latest/download/policy-configuration-definition.yaml\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># Install basic configuration</span>\n</span></span><span style=\"display:flex;\"><span>kubectl apply -f https://github.com/kubescape/cel-admission-library/releases/latest/download/basic-control-configuration.yaml\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># Install policies</span>\n</span></span><span style=\"display:flex;\"><span>kubectl apply -f https://github.com/kubescape/cel-admission-library/releases/latest/download/kubescape-validating-admission-policies.yaml\n</span></span></code></pre></div><p>To apply policies to objects, create a <code>ValidatingAdmissionPolicyBinding</code> resource. Let’s apply the\nabove Kubescape C-0017 control to any namespace with the label <code>policy=enforced</code>:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-shell\" data-lang=\"shell\"><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># Create a binding</span>\n</span></span><span style=\"display:flex;\"><span>kubectl apply -f - <span style=\"color:#b44\">&lt;&lt;EOT\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\">apiVersion: admissionregistration.k8s.io/v1alpha1\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\">kind: ValidatingAdmissionPolicyBinding\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\">metadata:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\"> name: c0017-binding\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\">spec:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\"> policyName: kubescape-c-0017-deny-mutable-container-filesystem\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\"> matchResources:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\"> namespaceSelector:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\"> matchLabels:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\"> policy: enforced\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44\">EOT</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># Create a namespace for running the example</span>\n</span></span><span style=\"display:flex;\"><span>kubectl create namespace policy-example\n</span></span><span style=\"display:flex;\"><span>kubectl label namespace policy-example <span style=\"color:#b44\">&#39;policy=enforced&#39;</span>\n</span></span></code></pre></div><p>Now, if you attempt to create an object without specifying a <code>readOnlyRootFilesystem</code>, it will not\nbe created.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-shell\" data-lang=\"shell\"><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># The next line should fail</span>\n</span></span><span style=\"display:flex;\"><span>kubectl -n policy-example run nginx --image<span style=\"color:#666\">=</span>nginx --restart<span style=\"color:#666\">=</span>Never\n</span></span></code></pre></div><p>The output shows our error:</p>\n<pre tabindex=\"0\"><code>The pods &#34;nginx&#34; is invalid: : ValidatingAdmissionPolicy &#39;kubescape-c-0017-deny-mutable-container-filesystem&#39; with binding &#39;c0017-binding&#39; denied request: Pods having containers with mutable filesystem not allowed! (see more at https://hub.armosec.io/docs/c-0017)\n</code></pre><h3 id=\"configuration\">Configuration</h3>\n<p>Policy objects can include configuration, which is provided in a different object. Many of the\nKubescape controls require a configuration: which labels to require, which capabilities to allow or\ndeny, which registries to allow containers to be deployed from, etc. Default values for those\ncontrols are defined in <a href=\"https://github.com/kubescape/cel-admission-library/blob/main/configuration/basic-control-configuration.yaml\">the ControlConfiguration\nobject</a>.</p>\n<p>To use this configuration object, or your own object in the same format, add a <code>paramRef.name</code> value\nto your binding object:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>admissionregistration.k8s.io/v1alpha1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>ValidatingAdmissionPolicyBinding<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>c0001-binding<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">policyName</span>:<span style=\"color:#bbb\"> </span>kubescape-c-0001-deny-forbidden-container-registries<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">paramRef</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>basic-control-configuration<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">matchResources</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">namespaceSelector</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">matchLabels</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">policy</span>:<span style=\"color:#bbb\"> </span>enforced<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h2 id=\"summary\">Summary</h2>\n<p>Converting our controls to CEL was simple, in most cases. We cannot port the whole Kubescape\nlibrary, as some controls check for things outside a Kubernetes cluster, and some require data that\nis not available in the admission request object. Overall, we are happy to contribute this library\nto the Kubernetes community and will continue to develop it for Kubescape and Kubernetes users\nalike. We hope it becomes useful, either as something you use yourself, or as examples for you to\nwrite your own policies.</p>\n<p>As for the validating admission policy feature itself, we are very excited to see this native\nfunctionality introduced to Kubernetes. We look forward to watching it move to Beta and then GA,\nhopefully by the end of the year. It is important to note this feature is currently in Alpha, which\nmeans this is the perfect opportunity to play around with it in environments like Minikube and give\na test drive. However, it is not yet considered production-ready and stable, and will not be enabled\non most managed Kubernetes environments. We will not recommend Kubescape users use these policies in\nproduction until the underlying functionality becomes stable. Keep an eye on <a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-api-machinery/3488-cel-admission-control/README.md\">the\nKEP</a>,\nand of course this blog, for an eventual release announcement.</p>","PublishedAt":"2023-03-30 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/03/30/kubescape-validating-admission-policy-library/","SourceName":"Kubernetes"}},{"node":{"ID":3301,"Title":"Modernize cloud security, increase observability coverage, and more with Elastic 8.7","Description":"","PublishedAt":"2023-03-30 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/whats-new-elastic-8-7-0","SourceName":"Elastic"}},{"node":{"ID":3302,"Title":"More complex queries, anomaly detection, simplified semantic search and onboarding with Elastic 8.7","Description":"","PublishedAt":"2023-03-30 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/whats-new-kibana-ml-cloud-8-7-0","SourceName":"Elastic"}},{"node":{"ID":3303,"Title":"Elastic Observability 8.7: Enhanced observability for synthetic monitoring, serverless functions, and Kubernetes","Description":"","PublishedAt":"2023-03-30 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/whats-new-elastic-observability-8-7-0","SourceName":"Elastic"}},{"node":{"ID":3304,"Title":"Elastic Security 8.7 helps security practitioners eliminate alert fatigue, drive MTTR lower, and better secure cloud environments","Description":"","PublishedAt":"2023-03-30 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/whats-new-elastic-security-8-7-0","SourceName":"Elastic"}},{"node":{"ID":3305,"Title":"Reduce storage for metrics by 40% and simplified vector search all in 8.7","Description":"","PublishedAt":"2023-03-30 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/whats-new-elasticsearch-8-7-0","SourceName":"Elastic"}},{"node":{"ID":3306,"Title":"Elastic Enterprise Search 8.7: New connectors, extraction rules for web crawler, and search analytics client beta ","Description":"","PublishedAt":"2023-03-30 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/whats-new-elastic-enterprise-search-8-7-0","SourceName":"Elastic"}},{"node":{"ID":3313,"Title":"Modernize your cloud security for AWS with the power of Elastic Security","Description":"","PublishedAt":"2023-03-30 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/march-2023-launch-announcement","SourceName":"Elastic"}},{"node":{"ID":3293,"Title":"Vault Secrets Operator: A new method for Kubernetes integration","Description":"The Vault Secrets Operator implements a first-class Kubernetes Operator pattern for HashiCorp Vault along with a set of CRDs responsible for synchronizing Vault secrets to Kubernetes Secrets natively.","PublishedAt":"2023-03-29 21:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/vault-secrets-operator-a-new-method-for-kubernetes-integration","SourceName":"HashiCorp"}},{"node":{"ID":3289,"Title":"HashiCorp Terraform Ecosystem passes 3,000 providers with over 250 partners ","Description":"The Terraform integrations ecosystem has reached a new milestone, surpassing 3,000 providers in the registry.","PublishedAt":"2023-03-29 16:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/hashicorp-terraform-ecosystem-passes-3-000-providers-with-over-250-partners","SourceName":"HashiCorp"}},{"node":{"ID":3290,"Title":"From Web2 to Web3: How developers can upskill and build with blockchain","Description":"<p>Nobody's built the killer blockchain app, which means there's still a ton of opportunity. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/03/29/from-web2-to-web3-how-developers-can-upskill-and-build-with-blockchain/\">From Web2 to Web3: How developers can upskill and build with blockchain</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-03-29 14:00:00+00:00","OriginURL":"https://stackoverflow.blog/2023/03/29/from-web2-to-web3-how-developers-can-upskill-and-build-with-blockchain/","SourceName":"Stack Overflow"}},{"node":{"ID":3287,"Title":"#ClouderaLife Volunteer Spotlight Pet Day Special: Julia Ostrowski","Description":"<p>In this special edition of Cloudera Cares #VolunteerSpotlight for International Pet Day, Julia Ostrowski shares her experience of fostering cats and dogs for the past two decades. About you Where are you based? I live in beautiful downtown San Jose, CA and live in a house built in 1904.  What’s your job role?  I have [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/clouderalife-volunteer-spotlight-pet-day-special-julia-ostrowski/\">#ClouderaLife Volunteer Spotlight Pet Day Special: Julia Ostrowski</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2023-03-29 13:37:15+00:00","OriginURL":"https://blog.cloudera.com/clouderalife-volunteer-spotlight-pet-day-special-julia-ostrowski/","SourceName":"Cloudera"}},{"node":{"ID":3285,"Title":"Killnet and AnonymousSudan DDoS attack Australian university websites, and threaten more attacks — here’s what to do about it","Description":"Over the past 24 hours, Cloudflare has observed HTTP DDoS attacks targeting university websites in Australia. Universities were the first of several groups publicly targeted by the pro-Russian hacker group Killnet and their affiliate AnonymousSudan, as revealed in a recent Telegram post","PublishedAt":"2023-03-29 11:10:13+00:00","OriginURL":"https://blog.cloudflare.com/ddos-attacks-on-australian-universities/","SourceName":"Cloudflare"}},{"node":{"ID":3291,"Title":"AWS in 30 recap","Description":"Last month, Lead Partner Solutions Architect, David Schott, presented a demo on how Snyk works alongside Amazon Web Services (AWS) to identify vulnerabilities at every level of development and infrastructure. Let’s dive right into his presentation and its biggest takeaways.","PublishedAt":"2023-03-29 05:00:00+00:00","OriginURL":"https://snyk.io/blog/aws-in-30-recap","SourceName":"Snyk"}},{"node":{"ID":3286,"Title":"Hexagonal spatial analytics in Elasticsearch","Description":"","PublishedAt":"2023-03-29 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/hexagonal-spatial-analytics-elasticsearch","SourceName":"Elastic"}},{"node":{"ID":3288,"Title":"Monitor your Azure Arc hybrid infrastructure with Datadog","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/azure-arc-integration/azurearc_hero.png\" width=\"100%\"/>In today’s modern digital environment, many organizations are architecting their infrastructure and services around a mix of cloud and on-prem solutions. Both cloud and private servers offer unique benefits, and taking a hybrid approach to infrastructure can allow businesses to better meet user demand on a global scale while expanding capabilities, minimizing risk, and keeping services consistent.Azure Arc is a service that extends the Azure platform to help you build cloud-native applications, secure Windows and Linux servers, and deploy data services across on-prem data centers and other clouds.","PublishedAt":"2023-03-29 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/azure-arc-integration/","SourceName":"Datadog"}},{"node":{"ID":3292,"Title":"How we built it: Stripe Radar","Description":"Radar is Stripe’s fraud prevention solution. This post covers what makes Radar so powerful and some of the key decisions we’ve made—and lessons we’ve learned—over the almost seven years we’ve been building it.","PublishedAt":"2023-03-29 00:00:00+00:00","OriginURL":"https://stripe.com/blog/how-we-built-it-stripe-radar","SourceName":"Stripe"}},{"node":{"ID":3280,"Title":"No Average Patient – Leveraging Data for Precision Healthcare","Description":"<p>The evolution of healthcare has come a long way since local physicians made house calls and homespun remedies were formulated using items from the kitchen spice rack. Today’s healthcare is driven as much by the promise of emerging technologies centered on data processing and advanced analytics as by developing new and specialized drugs. This has [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/no-average-patient-leveraging-data-for-precision-healthcare/\">No Average Patient – Leveraging Data for Precision Healthcare</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2023-03-28 15:20:19+00:00","OriginURL":"https://blog.cloudera.com/no-average-patient-leveraging-data-for-precision-healthcare/","SourceName":"Cloudera"}},{"node":{"ID":3279,"Title":"Cloudflare’s commitment to the 2023 Summit for Democracy","Description":"Cloudflare is proud to participate in and contribute commitments to the 2023 Summit Summit for Democracy because we believe that everyone should have access to an Internet that is faster, more reliable, more private, and more secure","PublishedAt":"2023-03-28 13:00:00+00:00","OriginURL":"https://blog.cloudflare.com/cloudflare-commitment-to-the-2023-summit-for-democracy/","SourceName":"Cloudflare"}}]}},"pageContext":{"limit":30,"skip":2460,"numPages":193,"currentPage":83}},"staticQueryHashes":["3649515864"]}