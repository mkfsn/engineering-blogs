{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/44","result":{"data":{"allPost":{"edges":[{"node":{"ID":4508,"Title":"Datadog for US Government Solution Brief","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/resources/us-government-solution-brief/gated-asset/public_sector.png\" width=\"100%\"/>Datadog is a unified observability platform that collects, processes, and analyzes performance data from your entire IT environment, providing the visibility US Government agencies need to advance technology initiatives quickly and securely.In this solution brief, you’ll learn how US government agencies can achieve four key outcomes of unified observability:Faster time to remediation Improved security posture Increased operational efficiency Optimized citizen customer experience (Citizen CX)","PublishedAt":"2023-08-30 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/resources/us-government-solution-brief/","SourceName":"Datadog"}},{"node":{"ID":4480,"Title":"Zero Configuration Service Mesh with On-Demand Cluster Discovery","Description":"","PublishedAt":"2023-08-29 23:08:45+00:00","OriginURL":"https://netflixtechblog.com/zero-configuration-service-mesh-with-on-demand-cluster-discovery-ac6483b52a51?source=rss----2615bd06b42e---4","SourceName":"Netflix"}},{"node":{"ID":4479,"Title":"Blog: Gateway API v0.8.0: Introducing Service Mesh Support","Description":"<p><em><strong>Authors:</strong></em> Flynn (Buoyant), John Howard (Google), Keith Mattix (Microsoft), Michael Beaumont (Kong), Mike Morris (independent), Rob Scott (Google)</p>\n<p>We are thrilled to announce the v0.8.0 release of Gateway API! With this\nrelease, Gateway API support for service mesh has reached <a href=\"https://gateway-api.sigs.k8s.io/geps/overview/#status\">Experimental\nstatus</a>. We look forward to your feedback!</p>\n<p>We're especially delighted to announce that Kuma 2.3+, Linkerd 2.14+, and Istio\n1.16+ are all fully-conformant implementations of Gateway API service mesh\nsupport.</p>\n<h2 id=\"service-mesh-support-in-gateway-api\">Service mesh support in Gateway API</h2>\n<p>While the initial focus of Gateway API was always ingress (north-south)\ntraffic, it was clear almost from the beginning that the same basic routing\nconcepts should also be applicable to service mesh (east-west) traffic. In\n2022, the Gateway API subproject started the <a href=\"https://gateway-api.sigs.k8s.io/concepts/gamma/\">GAMMA initiative</a>, a\ndedicated vendor-neutral workstream, specifically to examine how best to fit\nservice mesh support into the framework of the Gateway API resources, without\nrequiring users of Gateway API to relearn everything they understand about the\nAPI.</p>\n<p>Over the last year, GAMMA has dug deeply into the challenges and possible\nsolutions around using Gateway API for service mesh. The end result is a small\nnumber of <a href=\"https://gateway-api.sigs.k8s.io/contributing/enhancement-requests/\">enhancement proposals</a> that subsume many hours of thought and\ndebate, and provide a minimum viable path to allow Gateway API to be used for\nservice mesh.</p>\n<h3 id=\"how-will-mesh-routing-work-when-using-gateway-api\">How will mesh routing work when using Gateway API?</h3>\n<p>You can find all the details in the <a href=\"https://gateway-api.sigs.k8s.io/concepts/gamma/#how-the-gateway-api-works-for-service-mesh\">Gateway API Mesh routing\ndocumentation</a> and <a href=\"https://gateway-api.sigs.k8s.io/geps/gep-1426/\">GEP-1426</a>, but the short version for Gateway\nAPI v0.8.0 is that an HTTPRoute can now have a <code>parentRef</code> that is a Service,\nrather than just a Gateway. We anticipate future GEPs in this area as we gain\nmore experience with service mesh use cases -- binding to a Service makes it\npossible to use the Gateway API with a service mesh, but there are several\ninteresting use cases that remain difficult to cover.</p>\n<p>As an example, you might use an HTTPRoute to do an A-B test in the mesh as\nfollows:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>gateway.networking.k8s.io/v1beta1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>HTTPRoute<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>bar-route<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">parentRefs</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">group</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Service<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>demo-app<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">port</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">5000</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">rules</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">matches</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">headers</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">type</span>:<span style=\"color:#bbb\"> </span>Exact<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>env<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">value</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">backendRefs</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>demo-app-v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">port</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">5000</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">backendRefs</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>demo-app-v2<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">port</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">5000</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>Any request to port 5000 of the <code>demo-app</code> Service that has the header <code>env: v1</code> will be routed to <code>demo-app-v1</code>, while any request without that header\nwill be routed to <code>demo-app-v2</code> -- and since this is being handled by the\nservice mesh, not the ingress controller, the A/B test can happen anywhere in\nthe application's call graph.</p>\n<h3 id=\"how-do-i-know-this-will-be-truly-portable\">How do I know this will be truly portable?</h3>\n<p>Gateway API has been investing heavily in conformance tests across all\nfeatures it supports, and mesh is no exception. One of the challenges that the\nGAMMA initiative ran into is that many of these tests were strongly tied to\nthe idea that a given implementation provides an ingress controller. Many\nservice meshes don't, and requiring a GAMMA-conformant mesh to also implement\nan ingress controller seemed impractical at best. This resulted in work\nrestarting on Gateway API <em>conformance profiles</em>, as discussed in <a href=\"https://gateway-api.sigs.k8s.io/geps/gep-1709/\">GEP-1709</a>.</p>\n<p>The basic idea of conformance profiles is that we can define subsets of the\nGateway API, and allow implementations to choose (and document) which subsets\nthey conform to. GAMMA is adding a new profile, named <code>Mesh</code> and described in\n<a href=\"https://gateway-api.sigs.k8s.io/geps/gep-1686/\">GEP-1686</a>, which checks only the mesh functionality as defined by GAMMA. At\nthis point, Kuma 2.3+, Linkerd 2.14+, and Istio 1.16+ are all conformant with\nthe <code>Mesh</code> profile.</p>\n<h2 id=\"what-else-is-in-gateway-api-v0-8-0\">What else is in Gateway API v0.8.0?</h2>\n<p>This release is all about preparing Gateway API for the upcoming v1.0 release\nwhere HTTPRoute, Gateway, and GatewayClass will graduate to GA. There are two\nmain changes related to this: CEL validation and API version changes.</p>\n<h3 id=\"cel-validation\">CEL Validation</h3>\n<p>The first major change is that Gateway API v0.8.0 is the start of a transition\nfrom webhook validation to <a href=\"https://kubernetes.io/docs/reference/using-api/cel/\">CEL validation</a> using information built into\nthe CRDs. That will mean different things depending on the version of\nKubernetes you're using:</p>\n<h4 id=\"kubernetes-1-25\">Kubernetes 1.25+</h4>\n<p>CEL validation is fully supported, and almost all validation is implemented in\nCEL. (The sole exception is that header names in header modifier filters can\nonly do case-insensitive validation. There is more information in <a href=\"https://github.com/kubernetes-sigs/gateway-api/issues/2277\">issue\n2277</a>.)</p>\n<p>We recommend <em>not</em> using the validating webhook on these Kubernetes versions.</p>\n<h4 id=\"kubernetes-1-23-and-1-24\">Kubernetes 1.23 and 1.24</h4>\n<p>CEL validation is not supported, but Gateway API v0.8.0 CRDs can still be\ninstalled. When you upgrade to Kubernetes 1.25+, the validation included in\nthese CRDs will automatically take effect.</p>\n<p>We recommend continuing to use the validating webhook on these Kubernetes\nversions.</p>\n<h4 id=\"kubernetes-1-22-and-older\">Kubernetes 1.22 and older</h4>\n<p>Gateway API only commits to support for <a href=\"https://gateway-api.sigs.k8s.io/concepts/versioning/#supported-versions\">5 most recent versions of\nKubernetes</a>. As such, these versions are no longer\nsupported by Gateway API, and unfortunately Gateway API v0.8.0 cannot be\ninstalled on them, since CRDs containing CEL validation will be rejected.</p>\n<h3 id=\"api-version-changes\">API Version Changes</h3>\n<p>As we prepare for a v1.0 release that will graduate Gateway, GatewayClass, and\nHTTPRoute to the <code>v1</code> API Version from <code>v1beta1</code>, we are continuing the process\nof moving away from <code>v1alpha2</code> for resources that have graduated to <code>v1beta1</code>.\nFor more information on this change and everything else included in this\nrelease, refer to the <a href=\"https://github.com/kubernetes-sigs/gateway-api/releases/tag/v0.8.0\">v0.8.0 release notes</a>.</p>\n<h2 id=\"how-can-i-get-started-with-gateway-api\">How can I get started with Gateway API?</h2>\n<p>Gateway API represents the future of load balancing, routing, and service mesh\nAPIs in Kubernetes. There are already more than 20 <a href=\"https://gateway-api.sigs.k8s.io/implementations/\">implementations</a>\navailable (including both ingress controllers and service meshes) and the list\nkeeps growing.</p>\n<p>If you're interested in getting started with Gateway API, take a look at the\n<a href=\"https://gateway-api.sigs.k8s.io/concepts/api-overview/\">API concepts documentation</a> and check out some of the\n<a href=\"https://gateway-api.sigs.k8s.io/guides/getting-started/\">Guides</a> to try it out. Because this is a CRD-based API, you can\ninstall the latest version on any Kubernetes 1.23+ cluster.</p>\n<p>If you're specifically interested in helping to contribute to Gateway API, we\nwould love to have you! Please feel free to <a href=\"https://github.com/kubernetes-sigs/gateway-api/issues/new/choose\">open a new issue</a> on the\nrepository, or join in the <a href=\"https://github.com/kubernetes-sigs/gateway-api/discussions\">discussions</a>. Also check out the <a href=\"https://gateway-api.sigs.k8s.io/contributing/community/\">community\npage</a> which includes links to the Slack channel and community\nmeetings. We look forward to seeing you!!</p>\n<h2 id=\"further-reading\">Further Reading:</h2>\n<ul>\n<li><a href=\"https://gateway-api.sigs.k8s.io/geps/gep-1324/\">GEP-1324</a> provides an overview of the GAMMA goals and some important\ndefinitions. This GEP is well worth a read for its discussion of the problem\nspace.</li>\n<li><a href=\"https://gateway-api.sigs.k8s.io/geps/gep-1426/\">GEP-1426</a> defines how to use Gateway API route resources, such as\nHTTPRoute, to manage traffic within a service mesh.</li>\n<li><a href=\"https://gateway-api.sigs.k8s.io/geps/gep-1686/\">GEP-1686</a> builds on the work of <a href=\"https://gateway-api.sigs.k8s.io/geps/gep-1709/\">GEP-1709</a> to define a <em>conformance\nprofile</em> for service meshes to be declared conformant with Gateway API.</li>\n</ul>\n<p>Although these are <a href=\"https://gateway-api.sigs.k8s.io/geps/overview/#status\">Experimental</a> patterns, note that they are available\nin the <a href=\"https://gateway-api.sigs.k8s.io/concepts/versioning/#release-channels-eg-experimental-standard\"><code>standard</code> release channel</a>, since the GAMMA initiative has not\nneeded to introduce new resources or fields to date.</p>","PublishedAt":"2023-08-29 18:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/08/29/gateway-api-v0-8/","SourceName":"Kubernetes"}},{"node":{"ID":4478,"Title":"Scheduling Jupyter Notebooks at Meta","Description":"<p>At Meta, Bento is our internal Jupyter notebooks platform that is leveraged by many internal users. Notebooks are also being used widely for creating reports and workflows (for example, performing data ETL) that need to be repeated at certain intervals. Users with such notebooks would have to remember to manually run their notebooks at the [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2023/08/29/security/scheduling-jupyter-notebooks-meta/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2023/08/29/security/scheduling-jupyter-notebooks-meta/\">Scheduling Jupyter Notebooks at Meta</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n","PublishedAt":"2023-08-29 16:00:30+00:00","OriginURL":"https://engineering.fb.com/2023/08/29/security/scheduling-jupyter-notebooks-meta/","SourceName":"Facebook"}},{"node":{"ID":4476,"Title":"Cloudflare’s tenant platform in action: Meter deploys DNS filtering at scale","Description":"Today, we're excited to showcase Meter, a provider of Internet infrastructure, is leveraging the Tenant API integration for DNS filtering to help their clients enforce acceptable Internet use policies","PublishedAt":"2023-08-29 13:00:30+00:00","OriginURL":"http://blog.cloudflare.com/gateway-managed-service-provider-meter/","SourceName":"Cloudflare"}},{"node":{"ID":5350,"Title":"Cloudflare’s tenant platform in action: Meter deploys DNS filtering at scale","Description":" Today, we're excited to showcase Meter, a provider of Internet infrastructure, is leveraging the Tenant API integration for DNS filtering to help their clients enforce acceptable Internet use policies ","PublishedAt":"2023-08-29 13:00:30+00:00","OriginURL":"https://blog.cloudflare.com/gateway-managed-service-provider-meter","SourceName":"Cloudflare"}},{"node":{"ID":5452,"Title":"Cloudflare’s tenant platform in action: Meter deploys DNS filtering at scale","Description":" Today, we're excited to showcase Meter, a provider of Internet infrastructure, is leveraging the Tenant API integration for DNS filtering to help their clients enforce acceptable Internet use policies ","PublishedAt":"2023-08-29 13:00:30+00:00","OriginURL":"https://staging.blog.mrk.cfdata.org/gateway-managed-service-provider-meter","SourceName":"Cloudflare"}},{"node":{"ID":4475,"Title":"What it’s like being a professional workplace bestie (Ep. 603)","Description":"<p>Stack Overflow’s Employee Resource Groups (ERGs) are a cornerstone of our efforts to create a diverse, inclusive, and equitable workplace. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/08/29/what-its-like-being-a-professional-workplace-bestie-ep-603/\">What it’s like being a professional workplace bestie (Ep. 603)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-08-29 04:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/08/29/what-its-like-being-a-professional-workplace-bestie-ep-603/","SourceName":"Stack Overflow"}},{"node":{"ID":4477,"Title":"Elastic wins Google Cloud's Global Technology Partner of the Year Award","Description":"","PublishedAt":"2023-08-29 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/elastic-wins-google-cloud-global-technology-partner-of-the-year-award","SourceName":"Elastic"}},{"node":{"ID":4473,"Title":"AWS Weekly Roundup – AWS Dedicated Zones, Events and More – August 28, 2023","Description":"This week, I will meet our customers and partners at the AWS Summit Mexico. If you are around, please come say hi at the community lounge and at the F1 Game Day where I will spend most of my time. I would love to discuss your developer experience on AWS and listen to your stories […]","PublishedAt":"2023-08-28 21:13:54+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/aws-weekly-roundup-aws-dedicated-zones-events-and-more-august-28-2023/","SourceName":"AWS"}},{"node":{"ID":4471,"Title":"Deploying an LLM ChatBot Augmented with Enterprise Data","Description":"<p>Volume 1</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/llm-amp-vol-1/\">Deploying an LLM ChatBot Augmented with Enterprise Data</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2023-08-28 18:06:53+00:00","OriginURL":"https://blog.cloudera.com/llm-amp-vol-1/","SourceName":"Cloudera"}},{"node":{"ID":4470,"Title":"10 things you didn’t know you could do with GitHub Projects","Description":"<p>Learn how to optimize your usage of GitHub Projects to plan and track your work from idea to production.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://github.blog/2023-08-28-10-things-you-didnt-know-you-could-do-with-github-projects/\">10 things you didn’t know you could do with GitHub Projects</a> appeared first on <a rel=\"nofollow\" href=\"https://github.blog\">The GitHub Blog</a>.</p>\n","PublishedAt":"2023-08-28 16:18:04+00:00","OriginURL":"https://github.blog/2023-08-28-10-things-you-didnt-know-you-could-do-with-github-projects/","SourceName":"GitHub"}},{"node":{"ID":4469,"Title":"Traffic 101: Packets Mostly Flow","Description":"<p>&#160; Slack handles billions of inbound network requests per day, all of which traverse through our edge network and ingress load balancing tiers. In this blog post, we’ll talk about how a request flows — from a Slack’s user perspective — across the vast ether of the network to reach AWS and then Slack’s internal [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://slack.engineering/traffic-101-packets-mostly-flow/\">Traffic 101: Packets Mostly Flow</a> appeared first on <a rel=\"nofollow\" href=\"https://slack.engineering\">Slack Engineering</a>.</p>\n","PublishedAt":"2023-08-28 08:00:05+00:00","OriginURL":"https://slack.engineering/traffic-101-packets-mostly-flow/","SourceName":"Slack"}},{"node":{"ID":4468,"Title":"Blog: Kubernetes 1.28: A New (alpha) Mechanism For Safer Cluster Upgrades","Description":"<p><strong>Author:</strong> Richa Banker (Google)</p>\n<p>This blog describes the <em>mixed version proxy</em>, a new alpha feature in Kubernetes 1.28. The\nmixed version proxy enables an HTTP request for a resource to be served by the correct API server\nin cases where there are multiple API servers at varied versions in a cluster. For example,\nthis is useful during a cluster upgrade, or when you're rolling out the runtime configuration of\nthe cluster's control plane.</p>\n<h2 id=\"what-problem-does-this-solve\">What problem does this solve?</h2>\n<p>When a cluster undergoes an upgrade, the kube-apiservers existing at different versions in that scenario can serve different sets (groups, versions, resources) of built-in resources. A resource request made in this scenario may be served by any of the available apiservers, potentially resulting in the request ending up at an apiserver that may not be aware of the requested resource; consequently it being served a 404 not found error which is incorrect. Furthermore, incorrect serving of the 404 errors can lead to serious consequences such as namespace deletion being blocked incorrectly or objects being garbage collected mistakenly.</p>\n<h2 id=\"how-do-we-solve-the-problem\">How do we solve the problem?</h2>\n<figure class=\"diagram-large\">\n<img src=\"https://kubernetes.io/images/blog/2023-08-28-a-new-alpha-mechanism-for-safer-cluster-upgrades/mvp-flow-diagram.svg\"/>\n</figure>\n<p>The new feature “Mixed Version Proxy” provides the kube-apiserver with the capability to proxy a request to a peer kube-apiserver which is aware of the requested resource and hence can serve the request. To do this, a new filter has been added to the handler chain in the API server's aggregation layer.</p>\n<ol>\n<li>The new filter in the handler chain checks if the request is for a group/version/resource that the apiserver doesn't know about (using the existing <a href=\"https://github.com/kubernetes/kubernetes/blob/release-1.28/pkg/apis/apiserverinternal/types.go#L25-L37\">StorageVersion API</a>). If so, it proxies the request to one of the apiservers that is listed in the ServerStorageVersion object. If the identified peer apiserver fails to respond (due to reasons like network connectivity, race between the request being received and the controller registering the apiserver-resource info in ServerStorageVersion object), then error 503(&quot;Service Unavailable&quot;) is served.</li>\n<li>To prevent indefinite proxying of the request, a (new for v1.28) HTTP header <code>X-Kubernetes-APIServer-Rerouted: true</code> is added to the original request once it is determined that the request cannot be served by the original API server. Setting that to true marks that the original API server couldn't handle the request and it should therefore be proxied. If a destination peer API server sees this header, it never proxies the request further.</li>\n<li>To set the network location of a kube-apiserver that peers will use to proxy requests, the value passed in <code>--advertise-address</code> or (when <code>--advertise-address</code> is unspecified) the <code>--bind-address</code> flag is used. For users with network configurations that would not allow communication between peer kube-apiservers using the addresses specified in these flags, there is an option to pass in the correct peer address as <code>--peer-advertise-ip</code> and <code>--peer-advertise-port</code> flags that are introduced in this feature.</li>\n</ol>\n<h2 id=\"how-do-i-enable-this-feature\">How do I enable this feature?</h2>\n<p>Following are the required steps to enable the feature:</p>\n<ul>\n<li>Download the <a href=\"https://kubernetes.io/releases/download/\">latest Kubernetes project</a> (version <code>v1.28.0</code> or later)</li>\n<li>Switch on the feature gate with the command line flag <code>--feature-gates=UnknownVersionInteroperabilityProxy=true</code> on the kube-apiservers</li>\n<li>Pass the CA bundle that will be used by source kube-apiserver to authenticate destination kube-apiserver's serving certs using the flag <code>--peer-ca-file</code> on the kube-apiservers. Note: this is a required flag for this feature to work. There is no default value enabled for this flag.</li>\n<li>Pass the correct ip and port of the local kube-apiserver that will be used by peers to connect to this kube-apiserver while proxying a request. Use the flags <code>--peer-advertise-ip</code> and <code>peer-advertise-port</code> to the kube-apiservers upon startup. If unset, the value passed to either <code>--advertise-address</code> or <code>--bind-address</code> is used. If those too, are unset, the host's default interface will be used.</li>\n</ul>\n<h2 id=\"what-s-missing\">What’s missing?</h2>\n<p>Currently we only proxy resource requests to a peer kube-apiserver when its determined to do so. Next we need to address how to work discovery requests in such scenarios. Right now we are planning to have the following capabilities for beta</p>\n<ul>\n<li>Merged discovery across all kube-apiservers</li>\n<li>Use an egress dialer for network connections made to peer kube-apiservers</li>\n</ul>\n<h2 id=\"how-can-i-learn-more\">How can I learn more?</h2>\n<ul>\n<li>Read the <a href=\"https://kubernetes.io/docs/concepts/architecture/mixed-version-proxy\">Mixed Version Proxy documentation</a></li>\n<li>Read <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/4020-unknown-version-interoperability-proxy\">KEP-4020: Unknown Version Interoperability Proxy</a></li>\n</ul>\n<h2 id=\"how-can-i-get-involved\">How can I get involved?</h2>\n<p>Reach us on <a href=\"https://slack.k8s.io/\">Slack</a>: <a href=\"https://kubernetes.slack.com/messages/sig-api-machinery\">#sig-api-machinery</a>, or through the <a href=\"https://groups.google.com/forum/#!forum/kubernetes-sig-api-machinery\">mailing list</a>.</p>\n<p>Huge thanks to the contributors that have helped in the design, implementation, and review of this feature: Daniel Smith, Han Kang, Joe Betz, Jordan Liggit, Antonio Ojea, David Eads and Ben Luddy!</p>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/08/28/kubernetes-1-28-feature-mixed-version-proxy-alpha/","SourceName":"Kubernetes"}},{"node":{"ID":4472,"Title":"Perfectly Reproducible, Verified Go Toolchains","Description":"Go 1.21 is the first perfectly reproducible Go toolchain.","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://go.dev/blog/rebuild","SourceName":"The Go Blog"}},{"node":{"ID":4474,"Title":"How to deploy Hello World Elastic Observability on Google Cloud Run","Description":"","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/how-to-deploy-hello-world-elastic-observability-google-cloud-run","SourceName":"Elastic"}},{"node":{"ID":4481,"Title":"Digital Media & Entertainment Monitoring","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/solutions/media-entertainment/solutions/media-entertainment/og-media-entertainment.png\" width=\"100%\"/>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/solutions/media-entertainment/","SourceName":"Datadog"}},{"node":{"ID":4482,"Title":"Education Monitoring Solutions","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/solutions/education/solutions/education/og-education.png\" width=\"100%\"/>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/solutions/education/","SourceName":"Datadog"}},{"node":{"ID":4483,"Title":"Government Monitoring Solutions","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/solutions/government/solutions/government/og-government.png\" width=\"100%\"/>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/solutions/government/","SourceName":"Datadog"}},{"node":{"ID":4484,"Title":"Healthcare & Life Sciences Monitoring","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/solutions/healthcare/solutions/healthcare/og-healthcare.png\" width=\"100%\"/>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/solutions/healthcare/","SourceName":"Datadog"}},{"node":{"ID":4485,"Title":"Manufacturing & Logistics Monitoring","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/solutions/manufacturing-logistics/solutions/manufacturing-logistics/og-manufacturing-logistics.png\" width=\"100%\"/>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/solutions/manufacturing-logistics/","SourceName":"Datadog"}},{"node":{"ID":4486,"Title":"Monitoring Solutions for Financial Services","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/solutions/financial-services/solutions/financial-services/og-financial-services.png\" width=\"100%\"/>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/solutions/financial-services/","SourceName":"Datadog"}},{"node":{"ID":4487,"Title":"Monitoring Solutions for Gaming Industry","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/solutions/gaming/solutions/gaming/og-gaming.png\" width=\"100%\"/>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/solutions/gaming/","SourceName":"Datadog"}},{"node":{"ID":4488,"Title":"Monitoring Solutions for Technology Companies","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/solutions/technology/solutions/technology/og-technology.png\" width=\"100%\"/>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/solutions/technology/","SourceName":"Datadog"}},{"node":{"ID":4489,"Title":"Retail & E-Commerce Monitoring","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/solutions/retail-ecommerce/solutions/retail-ecommerce/og-retail.png\" width=\"100%\"/>","PublishedAt":"2023-08-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/solutions/retail-ecommerce/","SourceName":"Datadog"}},{"node":{"ID":4466,"Title":"The Overflow #192: Ask your data better questions","Description":"<p>Predictable event architecture, vector DBs, and alt text</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/08/25/the-overflow-192-ask-your-data-better-questions/\">The Overflow #192: Ask your data better questions</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-08-25 13:00:00+00:00","OriginURL":"https://stackoverflow.blog/2023/08/25/the-overflow-192-ask-your-data-better-questions/","SourceName":"Stack Overflow"}},{"node":{"ID":4467,"Title":"Fighting comment spam at Facebook scale (Ep. 602)","Description":"<p>Louis Brandy, VP of Engineering at Rockset, joins us for a deep dive into the architectural similarities across AI, vector search, and real-time analytics, and how they’re all at play in shaping the infrastructure to fight spam.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/08/25/fighting-comment-spam-at-facebook-scale-ep-602/\">Fighting comment spam at Facebook scale (Ep. 602)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-08-25 04:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/08/25/fighting-comment-spam-at-facebook-scale-ep-602/","SourceName":"Stack Overflow"}},{"node":{"ID":4463,"Title":"Blog: Kubernetes v1.28: Introducing native sidecar containers","Description":"<p><em><strong>Authors:</strong></em> Todd Neal (AWS), Matthias Bertschy (ARMO), Sergey Kanzhelev (Google), Gunju Kim (NAVER), Shannon Kularathna (Google)</p>\n<p>This post explains how to use the new sidecar feature, which enables restartable init containers and is available in alpha in Kubernetes 1.28. We want your feedback so that we can graduate this feature as soon as possible.</p>\n<p>The concept of a “sidecar” has been part of Kubernetes since nearly the very beginning. In 2015, sidecars were described in a <a href=\"https://kubernetes.io/blog/2015/06/the-distributed-system-toolkit-patterns/\">blog post</a> about composite containers as additional containers that “extend and enhance the ‘main’ container”. Sidecar containers have become a common Kubernetes deployment pattern and are often used for network proxies or as part of a logging system. Until now, sidecars were a concept that Kubernetes users applied without native support. The lack of native support has caused some usage friction, which this enhancement aims to resolve.</p>\n<h2 id=\"what-are-sidecar-containers-in-1-28\">What are sidecar containers in 1.28?</h2>\n<p>Kubernetes 1.28 adds a new <code>restartPolicy</code> field to <a href=\"https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\">init containers</a> that is available when the <code>SidecarContainers</code> <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gate</a> is enabled.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Pod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">initContainers</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>secret-fetch<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>secret-fetch:1.0<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>network-proxy<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>network-proxy:1.0<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">restartPolicy</span>:<span style=\"color:#bbb\"> </span>Always<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">containers</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>...<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>The field is optional and, if set, the only valid value is Always. Setting this field changes the behavior of init containers as follows:</p>\n<ul>\n<li>The container restarts if it exits</li>\n<li>Any subsequent init container starts immediately after the <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes\">startupProbe</a> has successfully completed instead of waiting for the restartable init container to exit</li>\n<li>The resource usage calculation changes for the pod as restartable init container resources are now added to the sum of the resource requests by the main containers</li>\n</ul>\n<p><a href=\"https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination\">Pod termination</a> continues to only depend on the main containers. An init container with a <code>restartPolicy</code> of <code>Always</code> (named a sidecar) won't prevent the pod from terminating after the main containers exit.</p>\n<p>The following properties of restartable init containers make them ideal for the sidecar deployment pattern:</p>\n<ul>\n<li>Init containers have a well-defined startup order regardless of whether you set a <code>restartPolicy</code>, so you can ensure that your sidecar starts before any container declarations that come after the sidecar declaration in your manifest.</li>\n<li>Sidecar containers don't extend the lifetime of the Pod, so you can use them in short-lived Pods with no changes to the Pod lifecycle.</li>\n<li>Sidecar containers are restarted on exit, which improves resilience and lets you use sidecars to provide services that your main containers can more reliably consume.</li>\n</ul>\n<h2 id=\"when-to-use-sidecar-containers\">When to use sidecar containers</h2>\n<p>You might find built-in sidecar containers useful for workloads such as the following:</p>\n<ul>\n<li><strong>Batch or AI/ML workloads</strong>, or other Pods that run to completion. These workloads will experience the most significant benefits.</li>\n<li><strong>Network proxies</strong> that start up before any other container in the manifest. Every other container that runs can use the proxy container's services. For instructions, see the <a href=\"https://istio.io/latest/blog/2023/native-sidecars/\">Kubernetes Native sidecars in Istio blog post</a>.</li>\n<li><strong>Log collection containers</strong>, which can now start before any other container and run until the Pod terminates. This improves the reliability of log collection in your Pods.</li>\n<li><strong>Jobs</strong>, which can use sidecars for any purpose without Job completion being blocked by the running sidecar. No additional configuration is required to ensure this behavior.</li>\n</ul>\n<h2 id=\"how-did-users-get-sidecar-behavior-before-1-28\">How did users get sidecar behavior before 1.28?</h2>\n<p>Prior to the sidecar feature, the following options were available for implementing sidecar behavior depending on the desired lifetime of the sidecar container:</p>\n<ul>\n<li><strong>Lifetime of sidecar less than Pod lifetime</strong>: Use an init container, which provides well-defined startup order. However, the sidecar has to exit for other init containers and main Pod containers to start.</li>\n<li><strong>Lifetime of sidecar equal to Pod lifetime</strong>: Use a main container that runs alongside your workload containers in the Pod. This method doesn't give you control over startup order, and lets the sidecar container potentially block Pod termination after the workload containers exit.</li>\n</ul>\n<p>The built-in sidecar feature solves for the use case of having a lifetime equal to the Pod lifetime and has the following additional benefits:</p>\n<ul>\n<li>Provides control over startup order</li>\n<li>Doesn’t block Pod termination</li>\n</ul>\n<h2 id=\"transitioning-existing-sidecars-to-the-new-model\">Transitioning existing sidecars to the new model</h2>\n<p>We recommend only using the sidecars feature gate in <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/#feature-stages\">short lived testing clusters</a> at the alpha stage. If you have an existing sidecar that is configured as a main container so it can run for the lifetime of the pod, it can be moved to the <code>initContainers</code> section of the pod spec and given a <code>restartPolicy</code> of <code>Always</code>. In many cases, the sidecar should work as before with the added benefit of having a defined startup ordering and not prolonging the pod lifetime.</p>\n<h2 id=\"known-issues\">Known issues</h2>\n<p>The alpha release of built-in sidecar containers has the following known issues, which we'll resolve before graduating the feature to beta:</p>\n<ul>\n<li>The CPU, memory, device, and topology manager are unaware of the sidecar container lifetime and additional resource usage, and will operate as if the Pod had lower resource requests than it actually does.</li>\n<li>The output of <code>kubectl describe node</code> is incorrect when sidecars are in use. The output shows resource usage that's lower than the actual usage because it doesn't use the new resource usage calculation for sidecar containers.</li>\n</ul>\n<h2 id=\"we-need-your-feedback\">We need your feedback!</h2>\n<p>In the alpha stage, we want you to try out sidecar containers in your environments and open issues if you encounter bugs or friction points. We're especially interested in feedback about the following:</p>\n<ul>\n<li>The shutdown sequence, especially with multiple sidecars running</li>\n<li>The backoff timeout adjustment for crashing sidecars</li>\n<li>The behavior of Pod readiness and liveness probes when sidecars are running</li>\n</ul>\n<p>To open an issue, see the <a href=\"https://github.com/kubernetes/kubernetes/issues/new/choose\">Kubernetes GitHub repository</a>.</p>\n<h2 id=\"what-s-next\">What’s next?</h2>\n<p>In addition to the known issues that will be resolved, we're working on adding termination ordering for sidecar and main containers. This will ensure that sidecar containers only terminate after the Pod's main containers have exited.</p>\n<p>We’re excited to see the sidecar feature come to Kubernetes and are interested in feedback.</p>\n<h2 id=\"acknowledgements\">Acknowledgements</h2>\n<p>Many years have passed since the original KEP was written, so we apologize if we omit anyone who worked on this feature over the years. This is a best-effort attempt to recognize the people involved in this effort.</p>\n<ul>\n<li><a href=\"https://github.com/mrunalp/\">mrunalp</a> for design discussions and reviews</li>\n<li><a href=\"https://github.com/thockin/\">thockin</a> for API discussions and support thru years</li>\n<li><a href=\"https://github.com/bobbypage\">bobbypage</a> for reviews</li>\n<li><a href=\"https://github.com/smarterclayton\">smarterclayton</a> for detailed review and feedback</li>\n<li><a href=\"https://github.com/howardjohn\">howardjohn</a> for feedback over years and trying it early during implementation</li>\n<li><a href=\"https://github.com/derekwaynecarr\">derekwaynecarr</a> and <a href=\"https://github.com/dchen1107\">dchen1107</a> for leadership</li>\n<li><a href=\"https://github.com/Jpbetz\">jpbetz</a> for API and termination ordering designs as well as code reviews</li>\n<li><a href=\"https://github.com/Joseph-Irving\">Joseph-Irving</a> and <a href=\"https://github.com/rata\">rata</a> for the early iterations design and reviews years back</li>\n<li><a href=\"https://github.com/swatisehgal\">swatisehgal</a> and <a href=\"https://github.com/ffromani\">ffromani</a> for early feedback on resource managers impact</li>\n<li><a href=\"https://github.com/Alculquicondor\">alculquicondor</a> for feedback on addressing the version skew of the scheduler</li>\n<li><a href=\"https://github.com/Wojtek-t\">wojtek-t</a> for PRR review of a KEP</li>\n<li><a href=\"https://github.com/ahg-g\">ahg-g</a> for reviewing the scheduler portion of a KEP</li>\n<li><a href=\"https://github.com/Adisky\">adisky</a> for the Job completion issue</li>\n</ul>\n<h2 id=\"more-information\">More Information</h2>\n<ul>\n<li>Read <a href=\"https://kubernetes.io/docs/concepts/workloads/pods/init-containers/#api-for-sidecar-containers\">API for sidecar containers</a> in the Kubernetes documentation</li>\n<li>Read the <a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/753-sidecar-containers/README.md\">Sidecar KEP</a></li>\n</ul>","PublishedAt":"2023-08-25 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/08/25/native-sidecar-containers/","SourceName":"Kubernetes"}},{"node":{"ID":4464,"Title":"Blog: Kubernetes 1.28: Beta support for using swap on Linux","Description":"<p><strong>Author:</strong> Itamar Holder (Red Hat)</p>\n<p>The 1.22 release <a href=\"https://kubernetes.io/blog/2021/08/09/run-nodes-with-swap-alpha/\">introduced Alpha support</a>\nfor configuring swap memory usage for Kubernetes workloads running on Linux on a per-node basis.\nNow, in release 1.28, support for swap on Linux nodes has graduated to Beta, along with many\nnew improvements.</p>\n<p>Prior to version 1.22, Kubernetes did not provide support for swap memory on Linux systems.\nThis was due to the inherent difficulty in guaranteeing and accounting for pod memory utilization\nwhen swap memory was involved. As a result, swap support was deemed out of scope in the initial\ndesign of Kubernetes, and the default behavior of a kubelet was to fail to start if swap memory\nwas detected on a node.</p>\n<p>In version 1.22, the swap feature for Linux was initially introduced in its Alpha stage. This represented\na significant advancement, providing Linux users with the opportunity to experiment with the swap\nfeature for the first time. However, as an Alpha version, it was not fully developed and had\nseveral issues, including inadequate support for cgroup v2, insufficient metrics and summary\nAPI statistics, inadequate testing, and more.</p>\n<p>Swap in Kubernetes has numerous <a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/2400-node-swap/README.md#user-stories\">use cases</a>\nfor a wide range of users. As a result, the node special interest group within the Kubernetes project\nhas invested significant effort into supporting swap on Linux nodes for beta.\nCompared to the alpha, the kubelet's support for running with swap enabled is more stable and\nrobust, more user-friendly, and addresses many known shortcomings. This graduation to beta\nrepresents a crucial step towards achieving the goal of fully supporting swap in Kubernetes.</p>\n<h2 id=\"how-do-i-use-it\">How do I use it?</h2>\n<p>The utilization of swap memory on a node where it has already been provisioned can be\nfacilitated by the activation of the <code>NodeSwap</code> feature gate on the kubelet.\nAdditionally, you must disable the <code>failSwapOn</code> configuration setting, or the deprecated\n<code>--fail-swap-on</code> command line flag must be deactivated.</p>\n<p>It is possible to configure the <code>memorySwap.swapBehavior</code> option to define the manner in which a node utilizes swap memory. For instance,</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># this fragment goes into the kubelet&#39;s configuration file</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">memorySwap</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">swapBehavior</span>:<span style=\"color:#bbb\"> </span>UnlimitedSwap<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>The available configuration options for <code>swapBehavior</code> are:</p>\n<ul>\n<li><code>UnlimitedSwap</code> (default): Kubernetes workloads can use as much swap memory as they\nrequest, up to the system limit.</li>\n<li><code>LimitedSwap</code>: The utilization of swap memory by Kubernetes workloads is subject to limitations.\nOnly Pods of <a href=\"docs/concepts/workloads/pods/pod-qos/#burstable\">Burstable</a> QoS are permitted to employ swap.</li>\n</ul>\n<p>If configuration for <code>memorySwap</code> is not specified and the feature gate is\nenabled, by default the kubelet will apply the same behaviour as the\n<code>UnlimitedSwap</code> setting.</p>\n<p>Note that <code>NodeSwap</code> is supported for <strong>cgroup v2</strong> only. For Kubernetes v1.28,\nusing swap along with cgroup v1 is no longer supported.</p>\n<h2 id=\"install-a-swap-enabled-cluster-with-kubeadm\">Install a swap-enabled cluster with kubeadm</h2>\n<h3 id=\"before-you-begin\">Before you begin</h3>\n<p>It is required for this demo that the kubeadm tool be installed, following the steps outlined in the\n<a href=\"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm\">kubeadm installation guide</a>.\nIf swap is already enabled on the node, cluster creation may\nproceed. If swap is not enabled, please refer to the provided instructions for enabling swap.</p>\n<h3 id=\"create-a-swap-file-and-turn-swap-on\">Create a swap file and turn swap on</h3>\n<p>I'll demonstrate creating 4GiB of unencrypted swap.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-bash\" data-lang=\"bash\"><span style=\"display:flex;\"><span>dd <span style=\"color:#a2f;font-weight:bold\">if</span><span style=\"color:#666\">=</span>/dev/zero <span style=\"color:#b8860b\">of</span><span style=\"color:#666\">=</span>/swapfile <span style=\"color:#b8860b\">bs</span><span style=\"color:#666\">=</span>128M <span style=\"color:#b8860b\">count</span><span style=\"color:#666\">=</span><span style=\"color:#666\">32</span>\n</span></span><span style=\"display:flex;\"><span>chmod <span style=\"color:#666\">600</span> /swapfile\n</span></span><span style=\"display:flex;\"><span>mkswap /swapfile\n</span></span><span style=\"display:flex;\"><span>swapon /swapfile\n</span></span><span style=\"display:flex;\"><span>swapon -s <span style=\"color:#080;font-style:italic\"># enable the swap file only until this node is rebooted</span>\n</span></span></code></pre></div><p>To start the swap file at boot time, add line like <code>/swapfile swap swap defaults 0 0</code> to <code>/etc/fstab</code> file.</p>\n<h3 id=\"set-up-a-kubernetes-cluster-that-uses-swap-enabled-nodes\">Set up a Kubernetes cluster that uses swap-enabled nodes</h3>\n<p>To make things clearer, here is an example kubeadm configuration file <code>kubeadm-config.yaml</code> for the swap enabled cluster.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#00f;font-weight:bold\">---</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;kubeadm.k8s.io/v1beta3&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>InitConfiguration<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#00f;font-weight:bold\">---</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>kubelet.config.k8s.io/v1beta1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>KubeletConfiguration<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">failSwapOn</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#a2f;font-weight:bold\">false</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">featureGates</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">NodeSwap</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#a2f;font-weight:bold\">true</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">memorySwap</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">swapBehavior</span>:<span style=\"color:#bbb\"> </span>LimitedSwap<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>Then create a single-node cluster using <code>kubeadm init --config kubeadm-config.yaml</code>.\nDuring init, there is a warning that swap is enabled on the node and in case the kubelet\n<code>failSwapOn</code> is set to true. We plan to remove this warning in a future release.</p>\n<h2 id=\"how-is-the-swap-limit-being-determined-with-limitedswap\">How is the swap limit being determined with LimitedSwap?</h2>\n<p>The configuration of swap memory, including its limitations, presents a significant\nchallenge. Not only is it prone to misconfiguration, but as a system-level property, any\nmisconfiguration could potentially compromise the entire node rather than just a specific\nworkload. To mitigate this risk and ensure the health of the node, we have implemented\nSwap in Beta with automatic configuration of limitations.</p>\n<p>With <code>LimitedSwap</code>, Pods that do not fall under the Burstable QoS classification (i.e.\n<code>BestEffort</code>/<code>Guaranteed</code> Qos Pods) are prohibited from utilizing swap memory.\n<code>BestEffort</code> QoS Pods exhibit unpredictable memory consumption patterns and lack\ninformation regarding their memory usage, making it difficult to determine a safe\nallocation of swap memory. Conversely, <code>Guaranteed</code> QoS Pods are typically employed for\napplications that rely on the precise allocation of resources specified by the workload,\nwith memory being immediately available. To maintain the aforementioned security and node\nhealth guarantees, these Pods are not permitted to use swap memory when <code>LimitedSwap</code> is\nin effect.</p>\n<p>Prior to detailing the calculation of the swap limit, it is necessary to define the following terms:</p>\n<ul>\n<li><code>nodeTotalMemory</code>: The total amount of physical memory available on the node.</li>\n<li><code>totalPodsSwapAvailable</code>: The total amount of swap memory on the node that is available for use by Pods (some swap memory may be reserved for system use).</li>\n<li><code>containerMemoryRequest</code>: The container's memory request.</li>\n</ul>\n<p>Swap limitation is configured as:\n<code>(containerMemoryRequest / nodeTotalMemory) × totalPodsSwapAvailable</code></p>\n<p>In other words, the amount of swap that a container is able to use is proportionate to its\nmemory request, the node's total physical memory and the total amount of swap memory on\nthe node that is available for use by Pods.</p>\n<p>It is important to note that, for containers within Burstable QoS Pods, it is possible to\nopt-out of swap usage by specifying memory requests that are equal to memory limits.\nContainers configured in this manner will not have access to swap memory.</p>\n<h2 id=\"how-does-it-work\">How does it work?</h2>\n<p>There are a number of possible ways that one could envision swap use on a node.\nWhen swap is already provisioned and available on a node,\nSIG Node have <a href=\"https://github.com/kubernetes/enhancements/blob/9d127347773ad19894ca488ee04f1cd3af5774fc/keps/sig-node/2400-node-swap/README.md#proposal\">proposed</a>\nthe kubelet should be able to be configured so that:</p>\n<ul>\n<li>It can start with swap on.</li>\n<li>It will direct the Container Runtime Interface to allocate zero swap memory\nto Kubernetes workloads by default.</li>\n</ul>\n<p>Swap configuration on a node is exposed to a cluster admin via the\n<a href=\"https://kubernetes.io/docs/reference/config-api/kubelet-config.v1\"><code>memorySwap</code> in the KubeletConfiguration</a>.\nAs a cluster administrator, you can specify the node's behaviour in the\npresence of swap memory by setting <code>memorySwap.swapBehavior</code>.</p>\n<p>The kubelet <a href=\"https://kubernetes.io/docs/concepts/architecture/cri/\">employs the CRI</a>\n(container runtime interface) API to direct the CRI to\nconfigure specific cgroup v2 parameters (such as <code>memory.swap.max</code>) in a manner that will\nenable the desired swap configuration for a container. The CRI is then responsible to\nwrite these settings to the container-level cgroup.</p>\n<h2 id=\"how-can-i-monitor-swap\">How can I monitor swap?</h2>\n<p>A notable deficiency in the Alpha version was the inability to monitor and introspect swap\nusage. This issue has been addressed in the Beta version introduced in Kubernetes 1.28, which now\nprovides the capability to monitor swap usage through several different methods.</p>\n<p>The beta version of kubelet now collects\n<a href=\"https://kubernetes.io/docs/reference/instrumentation/node-metrics/\">node-level metric statistics</a>,\nwhich can be accessed at the <code>/metrics/resource</code> and <code>/stats/summary</code> kubelet HTTP endpoints.\nThis allows clients who can directly interrogate the kubelet to\nmonitor swap usage and remaining swap memory when using LimitedSwap. Additionally, a\n<code>machine_swap_bytes</code> metric has been added to cadvisor to show the total physical swap capacity of the\nmachine.</p>\n<h2 id=\"caveats\">Caveats</h2>\n<p>Having swap available on a system reduces predictability. Swap's performance is\nworse than regular memory, sometimes by many orders of magnitude, which can\ncause unexpected performance regressions. Furthermore, swap changes a system's\nbehaviour under memory pressure. Since enabling swap permits\ngreater memory usage for workloads in Kubernetes that cannot be predictably\naccounted for, it also increases the risk of noisy neighbours and unexpected\npacking configurations, as the scheduler cannot account for swap memory usage.</p>\n<p>The performance of a node with swap memory enabled depends on the underlying\nphysical storage. When swap memory is in use, performance will be significantly\nworse in an I/O operations per second (IOPS) constrained environment, such as a\ncloud VM with I/O throttling, when compared to faster storage mediums like\nsolid-state drives or NVMe.</p>\n<p>As such, we do not advocate the utilization of swap memory for workloads or\nenvironments that are subject to performance constraints. Furthermore, it is\nrecommended to employ <code>LimitedSwap</code>, as this significantly mitigates the risks\nposed to the node.</p>\n<p>Cluster administrators and developers should benchmark their nodes and applications\nbefore using swap in production scenarios, and <a href=\"#how-do-i-get-involved\">we need your help</a> with that!</p>\n<h3 id=\"security-risk\">Security risk</h3>\n<p>Enabling swap on a system without encryption poses a security risk, as critical information,\nsuch as volumes that represent Kubernetes Secrets, <a href=\"https://kubernetes.io/docs/concepts/configuration/secret/#information-security-for-secrets\">may be swapped out to the disk</a>.\nIf an unauthorized individual gains\naccess to the disk, they could potentially obtain these confidential data. To mitigate this risk, the\nKubernetes project strongly recommends that you encrypt your swap space.\nHowever, handling encrypted swap is not within the scope of\nkubelet; rather, it is a general OS configuration concern and should be addressed at that level.\nIt is the administrator's responsibility to provision encrypted swap to mitigate this risk.</p>\n<p>Furthermore, as previously mentioned, with <code>LimitedSwap</code> the user has the option to completely\ndisable swap usage for a container by specifying memory requests that are equal to memory limits.\nThis will prevent the corresponding containers from accessing swap memory.</p>\n<h2 id=\"looking-ahead\">Looking ahead</h2>\n<p>The Kubernetes 1.28 release introduced Beta support for swap memory on Linux nodes,\nand we will continue to work towards <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/#feature-stages\">general availability</a>\nfor this feature. I hope that this will include:</p>\n<ul>\n<li>Add the ability to set a system-reserved quantity of swap from what kubelet detects on the host.</li>\n<li>Adding support for controlling swap consumption at the Pod level via cgroups.\n<ul>\n<li>This point is still under discussion.</li>\n</ul>\n</li>\n<li>Collecting feedback from test user cases.\n<ul>\n<li>We will consider introducing new configuration modes for swap, such as a\nnode-wide swap limit for workloads.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"how-can-i-learn-more\">How can I learn more?</h2>\n<p>You can review the current <a href=\"https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory\">documentation</a>\nfor using swap with Kubernetes.</p>\n<p>For more information, and to assist with testing and provide feedback, please\nsee <a href=\"https://github.com/kubernetes/enhancements/issues/4128\">KEP-2400</a> and its\n<a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/2400-node-swap/README.md\">design proposal</a>.</p>\n<h2 id=\"how-do-i-get-involved\">How do I get involved?</h2>\n<p>Your feedback is always welcome! SIG Node <a href=\"https://github.com/kubernetes/community/tree/master/sig-node#meetings\">meets regularly</a>\nand <a href=\"https://github.com/kubernetes/community/tree/master/sig-node#contact\">can be reached</a>\nvia <a href=\"https://slack.k8s.io/\">Slack</a> (channel <strong>#sig-node</strong>), or the SIG's\n<a href=\"https://groups.google.com/forum/#!forum/kubernetes-sig-node\">mailing list</a>. A Slack\nchannel dedicated to swap is also available at <strong>#sig-node-swap</strong>.</p>\n<p>Feel free to reach out to me, Itamar Holder (<strong>@iholder101</strong> on Slack and GitHub)\nif you'd like to help or ask further questions.</p>","PublishedAt":"2023-08-24 18:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/08/24/swap-linux-beta/","SourceName":"Kubernetes"}},{"node":{"ID":4460,"Title":"Unleashing GitHub Codespaces templates to ignite your development","Description":"<p>Learn how to leverage templating features in GitHub Codespaces to streamline your project setup, improve consistency, and simplify collaboration within your development team.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://github.blog/2023-08-24-unleashing-github-codespaces-templates-to-ignite-your-development/\">Unleashing GitHub Codespaces templates to ignite your development</a> appeared first on <a rel=\"nofollow\" href=\"https://github.blog\">The GitHub Blog</a>.</p>\n","PublishedAt":"2023-08-24 16:57:10+00:00","OriginURL":"https://github.blog/2023-08-24-unleashing-github-codespaces-templates-to-ignite-your-development/","SourceName":"GitHub"}}]}},"pageContext":{"limit":30,"skip":1290,"numPages":193,"currentPage":44}},"staticQueryHashes":["3649515864"]}