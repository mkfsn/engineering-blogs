{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/107","result":{"data":{"allPost":{"edges":[{"node":{"ID":2582,"Title":"New Terraform Run Tasks From Checkpoint, Rapid7, ZScaler and Others","Description":"New Terraform Cloud Run Tasks partners provide more options to ensure security and compliance for cloud infrastructure management.","PublishedAt":"2022-12-16 17:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/new-terraform-run-tasks-from-checkpoint-rapid7-zscaler-and-others","SourceName":"HashiCorp"}},{"node":{"ID":2581,"Title":"Evernote’s Parade of Features, Part Four: Transform Your Time With Your Tablet","Description":"<p>Learn how to optimize your use of Evernote on your tablet. We share tips, tricks, and the best features to make Evernote work better for you.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://evernote.com/blog/transform-your-time-with-your-tablet/\">Evernote&#8217;s Parade of Features, Part Four: Transform Your Time With Your Tablet</a> appeared first on <a rel=\"nofollow\" href=\"https://evernote.com/blog\"></a>.</p>\n","PublishedAt":"2022-12-16 14:30:00+00:00","OriginURL":"https://evernote.com/blog/transform-your-time-with-your-tablet/","SourceName":"Evernote"}},{"node":{"ID":2574,"Title":"The unintended consequences of blocking IP addresses","Description":"A discussion about IP blocking: why we see it, what it is, what it does, who it affects, and why it’s such a problematic way to address content online.","PublishedAt":"2022-12-16 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/consequences-of-ip-blocking/","SourceName":"Cloudflare"}},{"node":{"ID":2575,"Title":"Introducing Cloudflare's Third Party Code of Conduct","Description":"We are excited to share our Third Party Code of Conduct, specifically formulated with our suppliers, resellers and other partners in mind.","PublishedAt":"2022-12-16 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/introducing-cloudflares-third-party-code-of-conduct/","SourceName":"Cloudflare"}},{"node":{"ID":2576,"Title":"Helping build a safer Internet by measuring BGP RPKI Route Origin Validation","Description":"Is BGP safe yet? If the question needs asking, then it isn't. But how far the Internet is from this goal is what we set out to answer.","PublishedAt":"2022-12-16 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/rpki-updates-data/","SourceName":"Cloudflare"}},{"node":{"ID":2577,"Title":"The latest from Cloudflare's seventeen Employee Resource Groups","Description":"The ERGs at Cloudflare have helped us realize the power of community and how critical it is for hybrid work.","PublishedAt":"2022-12-16 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/the-latest-from-cloudflares-seventeen-employee-resource-groups/","SourceName":"Cloudflare"}},{"node":{"ID":2578,"Title":"Working to help the HBCU Smart Cities Challenge","Description":"Learn how Cloudflare is empowering the HBCU Smart Cities Challenge","PublishedAt":"2022-12-16 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/working-to-help-the-hbcu-smart-cities-challenge/","SourceName":"Cloudflare"}},{"node":{"ID":2579,"Title":"How Cloudflare advocates for a better Internet","Description":"In this blog we outline how we advocate, across the many jurisdictions where we operate, for a better Internet, in our engagement with governments and regulators.","PublishedAt":"2022-12-16 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/how-cloudflare-advocates-for-a-better-internet/","SourceName":"Cloudflare"}},{"node":{"ID":2572,"Title":"Towards the new Product &amp; Engineering at Merpay &#8211; 5th anniversary edition","Description":"<p>This post is for Day 16 of Merpay Advent Calendar 2022, brought to you by @robertjerovsek from Merpay Engineering. I have been performing many roles and done a few different things at Merpay, but for this time’s post I would like to talk a little bit about how we have decided our focus points until [&hellip;]</p>\n","PublishedAt":"2022-12-16 12:00:58+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221216-towards-the-new-product-engineering-at-merpay-5th-anniversary-edition/","SourceName":"Mercari"}},{"node":{"ID":2571,"Title":"Do We Need Engineers in a ChatGPT World?","Description":"<p>Hi everyone! My name is Darren, and I work on Data Engineering at Mercari. For today’s Advent Calendar post, we’ll take a break from technical details and talk about the broader tech landscape. And tomorrow, we’ll hear the origin story of Mercari India’s Center of Excellence. Stay tuned for more great posts! The explosive release [&hellip;]</p>\n","PublishedAt":"2022-12-16 11:00:29+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20221215-do-we-need-engineers-in-a-chatgpt-world/","SourceName":"Mercari"}},{"node":{"ID":2573,"Title":"An honest end-of-year rundown (Ep. 518)","Description":"<p>Mastadon, holographic wormholes, and AI the writes comedy and code.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/16/an-honest-end-of-year-rundown-ep-518/\">An honest end-of-year rundown (Ep. 518)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-16 05:40:00+00:00","OriginURL":"https://stackoverflow.blog/2022/12/16/an-honest-end-of-year-rundown-ep-518/","SourceName":"Stack Overflow"}},{"node":{"ID":2580,"Title":"Elastic recognized as a Leader in the 2022 Gartner® Magic Quadrant™ for Insight Engines","Description":"","PublishedAt":"2022-12-16 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/elastic-recognized-as-a-leader-in-the-2022-gartner-magic-quadrant-for-insight-engines","SourceName":"Elastic"}},{"node":{"ID":2586,"Title":"Best practices for application security in cloud-native environments","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/securing-cloud-native-applications/securing-cloud-native-applications-hero.png\" width=\"100%\"/>Editor&rsquo;s note: This is Part 3 of a five-part cloud security series that covers protecting an organization&rsquo;s network perimeter, endpoints, application code, sensitive data, and service and user accounts from threats.In Parts 1 and 2 of this series, we discussed the importance of protecting the boundaries of networks in cloud environments and best practices for applying efficient security controls to endpoints. In this post, we&rsquo;ll look at how organizations can protect their applications—another key, vulnerable part of their cloud-native footprint—by doing the following:","PublishedAt":"2022-12-16 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/securing-cloud-native-applications/","SourceName":"Datadog"}},{"node":{"ID":2583,"Title":"Career stories: Next-gen systems, servers, and production infrastructure engineering","Description":"Saira joined our Bangalore Production Infrastructure Engineering team to tackle large-scale, site engineering challenges and grow. She highlights for us the impactful work she found here — from ushering in LinkedIn’s next-generation, server query system that runs over a fleet of 350,000 servers, to mentoring the next generation of female engineers: In my engineering career, I’ve always followed the path less taken. As a student, I became interested in cloud computing and systems engineering after working on an OpenStack project. My passion for this engineering area led to me [&#8230;]","PublishedAt":"2022-12-15 22:17:00+00:00","OriginURL":"https://engineering.linkedin.com/blog/2022/career-stories--next-gen-systems--servers--and-production-infras","SourceName":"Linkedin"}},{"node":{"ID":2568,"Title":"Exploring the Spring Security authorization bypass (CVE-2022-31692)","Description":"Learn about the recently discovered Spring Security authorization bypass (CVE-2022-31692) and learn steps to mitigate.","PublishedAt":"2022-12-15 21:19:20+00:00","OriginURL":"https://snyk.io/blog/spring-security-authorization-bypass-cve-2022-31692/","SourceName":"Snyk"}},{"node":{"ID":2570,"Title":"HashiCorp Predicts: What to Expect in 2023","Description":"Leaders from around HashiCorp share their predictions for the coming year on everything from Kubernetes to AI to zero trust security.","PublishedAt":"2022-12-15 20:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/hashicorp-predicts-what-to-expect-in-2023","SourceName":"HashiCorp"}},{"node":{"ID":2566,"Title":"Elastic Security maintains Product Approved status for AV-Comparatives","Description":"","PublishedAt":"2022-12-15 17:00:00+00:00","OriginURL":"https://www.elastic.co/blog/elastic-security-maintains-product-approved-status-for-av-comparatives","SourceName":"Elastic"}},{"node":{"ID":2565,"Title":"Datadog Named a Leader in AIOps by Independent Research Firm","Description":"NEW YORK — Datadog, Inc. (NASDAQ: DDOG), the monitoring and security platform for cloud applications, today announced it has been named a Leader in The Forrester Wave™: Artificial Intelligence For IT Operations, Q4 2022. The research identifies, evaluates and scores the 11 top vendors offering products with AIOps capabilities. The Forrester report stated that Datadog leads the pack in data insights and visualizations.&ldquo;Feedback from our customers drives our product decisions.","PublishedAt":"2022-12-15 16:57:00+00:00","OriginURL":"https://www.datadoghq.com/about/latest-news/press-releases/datadog-named-a-leader-in-aiops-by-independent-research-firm/","SourceName":"Datadog"}},{"node":{"ID":2567,"Title":"Accelerating Code Delivery By 97% With Yarn Workspaces","Description":"As teams and applications experience growth, it’s critical to adopt architectures that optimize for clear code ownership, build isolation, and provide efficient delivery of code. While many projects start small with just one or two repositories (for example, frontend and backend), this approach often becomes difficult to maintain as the codebases expand. At LinkedIn, we develop many applications that receive regular contributions from a multitude of teams, with each team owning distinct products or features. Our infrastructure teams enable developers to work effectively within these [&#8230;]","PublishedAt":"2022-12-15 16:00:00+00:00","OriginURL":"https://engineering.linkedin.com/blog/2022/accelerating-code-delivery-by-97--with-yarn-workspaces","SourceName":"Linkedin"}},{"node":{"ID":2564,"Title":"Snyk in 30: Open source security for Atlassian Bitbucket Cloud","Description":"In our latest Snyk in 30, we showcased Snyk Open Source security with a focus on our integration with Atlassian Bitbucket Cloud. ","PublishedAt":"2022-12-15 15:26:30+00:00","OriginURL":"https://snyk.io/blog/snyk-open-source-security-atlassian-bitbucket/","SourceName":"Snyk"}},{"node":{"ID":2563,"Title":"Job insights from the tech community: The latest survey results from Stack Overflow Knows","Description":"<p>The last year has been a time of re-evaluation and opportunity for technology professionals. The rise of remote work, the Great Resignation/Reshuffle, and “quiet quitting” all demonstrate how fast the workplace is changing, especially amidst recent economic uncertainty and layoffs in the tech sector. In October 2022, we surveyed 2,600+ tech professionals to learn more…</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/15/job-insights-from-the-tech-community-the-latest-survey-results-from-stack-overflow-knows/\">Job insights from the tech community: The latest survey results from Stack Overflow Knows </a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-15 15:00:00+00:00","OriginURL":"https://stackoverflow.blog/2022/12/15/job-insights-from-the-tech-community-the-latest-survey-results-from-stack-overflow-knows/","SourceName":"Stack Overflow"}},{"node":{"ID":2562,"Title":"Implement A Multi-cloud Open Lakehouse with Apache Iceberg in Cloudera Data Platform","Description":"<p>Since we announced the general availability of Apache Iceberg in Cloudera Data Platform, Cloudera customers, such as Teranet, have built open lakehouses to future-proof their data platforms for all their analytical workloads. Cloudera partners are also benefiting from Apache Iceberg in CDP. For example Modak Nabu, is helping their enterprise customers accelerate data ingestion, curation [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/implement-a-multi-cloud-open-lakehouse-with-apache-iceberg-in-cloudera-data-platform/\">Implement A Multi-cloud Open Lakehouse with Apache Iceberg in Cloudera Data Platform</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-12-15 14:00:29+00:00","OriginURL":"https://blog.cloudera.com/implement-a-multi-cloud-open-lakehouse-with-apache-iceberg-in-cloudera-data-platform/","SourceName":"Cloudera"}},{"node":{"ID":2557,"Title":"A new, configurable and scalable version of Geo Key Manager, now available in Closed Beta","Description":"We’re excited to announce a new version of Geo Key Manager — one that allows customers to define boundaries by country, by a region, or by a standard, such as “only store my private keys in FIPS compliant data centers” — now available in Closed Beta.","PublishedAt":"2022-12-15 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/configurable-and-scalable-geo-key-manager-closed-beta/","SourceName":"Cloudflare"}},{"node":{"ID":2558,"Title":"How Cloudflare helps next-generation markets","Description":"The speed of an Internet connection is more about decreasing real-world latency than adding underutilized bandwidth.","PublishedAt":"2022-12-15 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/how-cloudflare-helps-next-generation-markets/","SourceName":"Cloudflare"}},{"node":{"ID":2559,"Title":"Applying Human Rights Frameworks to our approach to abuse","Description":"Cloudflare launched its first Human Rights Policy in 2021, formally stating our commitment to respect human rights under the UN Guiding Principles on Business and Human Rights (UNGPs)","PublishedAt":"2022-12-15 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/applying-human-rights-frameworks-to-our-approach-to-abuse/","SourceName":"Cloudflare"}},{"node":{"ID":2560,"Title":"Cloudflare is joining the AS112 project to help the Internet deal with misdirected DNS queries","Description":"Cloudflare is participating in the AS112 project, becoming an operator of the loosely coordinated, distributed sink of the reverse lookup (PTR) queries for RFC 1918 addresses, dynamic DNS updates and other ambiguous addresses.","PublishedAt":"2022-12-15 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/the-as112-project/","SourceName":"Cloudflare"}},{"node":{"ID":2561,"Title":"Partnering with civil society to track Internet shutdowns with Radar Alerts and API","Description":"Learn more on how Cloudflare works with civil society organizations to provide tools to track Internet shutdowns using Radar Alerts and API.","PublishedAt":"2022-12-15 14:00:00+00:00","OriginURL":"https://blog.cloudflare.com/partnering-with-civil-society-to-track-shutdowns/","SourceName":"Cloudflare"}},{"node":{"ID":2556,"Title":"Blog: Kubernetes 1.26: Alpha API For Dynamic Resource Allocation","Description":"<p><strong>Authors:</strong> Patrick Ohly (Intel), Kevin Klues (NVIDIA)</p>\n<p>Dynamic resource allocation is a new API for requesting resources. It is a\ngeneralization of the persistent volumes API for generic resources, making it possible to:</p>\n<ul>\n<li>access the same resource instance in different pods and containers,</li>\n<li>attach arbitrary constraints to a resource request to get the exact resource\nyou are looking for,</li>\n<li>initialize a resource according to parameters provided by the user.</li>\n</ul>\n<p>Third-party resource drivers are responsible for interpreting these parameters\nas well as tracking and allocating resources as requests come in.</p>\n<p>Dynamic resource allocation is an <em>alpha feature</em> and only enabled when the\n<code>DynamicResourceAllocation</code> <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature\ngate</a> and the\n<code>resource.k8s.io/v1alpha1</code> <a class='glossary-tooltip' title='A set of related paths in the Kubernetes API.' data-toggle='tooltip' data-placement='top' href='https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-groups-and-versioning' target='_blank' aria-label='API group'>API group</a> are enabled. For details, see the\n<code>--feature-gates</code> and <code>--runtime-config</code> <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/\">kube-apiserver\nparameters</a>.\nThe kube-scheduler, kube-controller-manager and kubelet components all need\nthe feature gate enabled as well.</p>\n<p>The default configuration of kube-scheduler enables the <code>DynamicResources</code>\nplugin if and only if the feature gate is enabled. Custom configurations may\nhave to be modified to include it.</p>\n<p>Once dynamic resource allocation is enabled, resource drivers can be installed\nto manage certain kinds of hardware. Kubernetes has a test driver that is used\nfor end-to-end testing, but also can be run manually. See\n<a href=\"#running-the-test-driver\">below</a> for step-by-step instructions.</p>\n<h2 id=\"api\">API</h2>\n<p>The new <code>resource.k8s.io/v1alpha1</code> <a class='glossary-tooltip' title='A set of related paths in the Kubernetes API.' data-toggle='tooltip' data-placement='top' href='https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-groups-and-versioning' target='_blank' aria-label='API group'>API group</a> provides four new types:</p>\n<dl>\n<dt>ResourceClass</dt>\n<dd>Defines which resource driver handles a certain kind of\nresource and provides common parameters for it. ResourceClasses\nare created by a cluster administrator when installing a resource\ndriver.</dd>\n<dt>ResourceClaim</dt>\n<dd>Defines a particular resource instances that is required by a\nworkload. Created by a user (lifecycle managed manually, can be shared\nbetween different Pods) or for individual Pods by the control plane based on\na ResourceClaimTemplate (automatic lifecycle, typically used by just one\nPod).</dd>\n<dt>ResourceClaimTemplate</dt>\n<dd>Defines the spec and some meta data for creating\nResourceClaims. Created by a user when deploying a workload.</dd>\n<dt>PodScheduling</dt>\n<dd>Used internally by the control plane and resource drivers\nto coordinate pod scheduling when ResourceClaims need to be allocated\nfor a Pod.</dd>\n</dl>\n<p>Parameters for ResourceClass and ResourceClaim are stored in separate objects,\ntypically using the type defined by a <a class='glossary-tooltip' title='Custom code that defines a resource to add to your Kubernetes API server without building a complete custom server.' data-toggle='tooltip' data-placement='top' href='https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/' target='_blank' aria-label='CRD'>CRD</a> that was created when\ninstalling a resource driver.</p>\n<p>With this alpha feature enabled, the <code>spec</code> of Pod defines ResourceClaims that are needed for a Pod\nto run: this information goes into a new\n<code>resourceClaims</code> field. Entries in that list reference either a ResourceClaim\nor a ResourceClaimTemplate. When referencing a ResourceClaim, all Pods using\nthis <code>.spec</code> (for example, inside a Deployment or StatefulSet) share the same\nResourceClaim instance. When referencing a ResourceClaimTemplate, each Pod gets\nits own ResourceClaim instance.</p>\n<p>For a container defined within a Pod, the <code>resources.claims</code> list\ndefines whether that container gets\naccess to these resource instances, which makes it possible to share resources\nbetween one or more containers inside the same Pod. For example, an init container could\nset up the resource before the application uses it.</p>\n<p>Here is an example of a fictional resource driver. Two ResourceClaim objects\nwill get created for this Pod and each container gets access to one of them.</p>\n<p>Assuming a resource driver called <code>resource-driver.example.com</code> was installed\ntogether with the following resource class:</p>\n<pre tabindex=\"0\"><code>apiVersion: resource.k8s.io/v1alpha1\nkind: ResourceClass\nname: resource.example.com\ndriverName: resource-driver.example.com\n</code></pre><p>An end-user could then allocate two specific resources of type\n<code>resource.example.com</code> as follows:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#00f;font-weight:bold\">---</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>cats.resource.example.com/v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>ClaimParameters<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>large-black-cats<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">color</span>:<span style=\"color:#bbb\"> </span>black<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">size</span>:<span style=\"color:#bbb\"> </span>large<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#00f;font-weight:bold\">---</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>resource.k8s.io/v1alpha1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>ResourceClaimTemplate<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>large-black-cats<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resourceClassName</span>:<span style=\"color:#bbb\"> </span>resource.example.com<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">parametersRef</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">apiGroup</span>:<span style=\"color:#bbb\"> </span>cats.resource.example.com<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>ClaimParameters<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>large-black-cats<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span>–--<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Pod<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>pod-with-cats<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">containers</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># two example containers; each container claims one cat resource</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>first-example<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>ubuntu:22.04<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">command</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;sleep&#34;</span>,<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;9999&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">claims</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>cat-0<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>second-example<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>ubuntu:22.04<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">command</span>:<span style=\"color:#bbb\"> </span>[<span style=\"color:#b44\">&#34;sleep&#34;</span>,<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;9999&#34;</span>]<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resources</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">claims</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>cat-1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resourceClaims</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>cat-0<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">source</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resourceClaimTemplateName</span>:<span style=\"color:#bbb\"> </span>large-black-cats<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>cat-1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">source</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">resourceClaimTemplateName</span>:<span style=\"color:#bbb\"> </span>large-black-cats<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h2 id=\"scheduling\">Scheduling</h2>\n<p>In contrast to native resources (such as CPU or RAM) and\n<a href=\"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#extended-resources\">extended resources</a>\n(managed by a\ndevice plugin, advertised by kubelet), the scheduler has no knowledge of what\ndynamic resources are available in a cluster or how they could be split up to\nsatisfy the requirements of a specific ResourceClaim. Resource drivers are\nresponsible for that. Drivers mark ResourceClaims as <em>allocated</em> once resources\nfor it are reserved. This also then tells the scheduler where in the cluster a\nclaimed resource is actually available.</p>\n<p>ResourceClaims can get resources allocated as soon as the ResourceClaim\nis created (<em>immediate allocation</em>), without considering which Pods will use\nthe resource. The default (<em>wait for first consumer</em>) is to delay allocation until\na Pod that relies on the ResourceClaim becomes eligible for scheduling.\nThis design with two allocation options is similar to how Kubernetes handles\nstorage provisioning with PersistentVolumes and PersistentVolumeClaims.</p>\n<p>In the wait for first consumer mode, the scheduler checks all ResourceClaims needed\nby a Pod. If the Pods has any ResourceClaims, the scheduler creates a PodScheduling\n(a special object that requests scheduling details on behalf of the Pod). The PodScheduling\nhas the same name and namespace as the Pod and the Pod as its as owner.\nUsing its PodScheduling, the scheduler informs the resource drivers\nresponsible for those ResourceClaims about nodes that the scheduler considers\nsuitable for the Pod. The resource drivers respond by excluding nodes that\ndon't have enough of the driver's resources left.</p>\n<p>Once the scheduler has that resource\ninformation, it selects one node and stores that choice in the PodScheduling\nobject. The resource drivers then allocate resources based on the relevant\nResourceClaims so that the resources will be available on that selected node.\nOnce that resource allocation is complete, the scheduler attempts to schedule the Pod\nto a suitable node. Scheduling can still fail at this point; for example, a different Pod could\nbe scheduled to the same node in the meantime. If this happens, already allocated\nResourceClaims may get deallocated to enable scheduling onto a different node.</p>\n<p>As part of this process, ResourceClaims also get reserved for the\nPod. Currently ResourceClaims can either be used exclusively by a single Pod or\nan unlimited number of Pods.</p>\n<p>One key feature is that Pods do not get scheduled to a node unless all of\ntheir resources are allocated and reserved. This avoids the scenario where\na Pod gets scheduled onto one node and then cannot run there, which is bad\nbecause such a pending Pod also blocks all other resources like RAM or CPU that were\nset aside for it.</p>\n<h2 id=\"limitations\">Limitations</h2>\n<p>The scheduler plugin must be involved in scheduling Pods which use\nResourceClaims. Bypassing the scheduler by setting the <code>nodeName</code> field leads\nto Pods that the kubelet refuses to start because the ResourceClaims are not\nreserved or not even allocated. It may be possible to remove this\n<a href=\"https://github.com/kubernetes/kubernetes/issues/114005\">limitation</a> in the\nfuture.</p>\n<h2 id=\"writing-a-resource-driver\">Writing a resource driver</h2>\n<p>A dynamic resource allocation driver typically consists of two separate-but-coordinating\ncomponents: a centralized controller, and a DaemonSet of node-local kubelet\nplugins. Most of the work required by the centralized controller to coordinate\nwith the scheduler can be handled by boilerplate code. Only the business logic\nrequired to actually allocate ResourceClaims against the ResourceClasses owned\nby the plugin needs to be customized. As such, Kubernetes provides\nthe following package, including APIs for invoking this boilerplate code as\nwell as a <code>Driver</code> interface that you can implement to provide their custom\nbusiness logic:</p>\n<ul>\n<li><a href=\"https://github.com/kubernetes/dynamic-resource-allocation/tree/release-1.26/controller\">k8s.io/dynamic-resource-allocation/controller</a></li>\n</ul>\n<p>Likewise, boilerplate code can be used to register the node-local plugin with\nthe kubelet, as well as start a gRPC server to implement the kubelet plugin\nAPI. For drivers written in Go, the following package is recommended:</p>\n<ul>\n<li><a href=\"https://github.com/kubernetes/dynamic-resource-allocation/tree/release-1.26/kubeletplugin\">k8s.io/dynamic-resource-allocation/kubeletplugin</a></li>\n</ul>\n<p>It is up to the driver developer to decide how these two components\ncommunicate. The <a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/3063-dynamic-resource-allocation/README.md\">KEP</a> outlines an <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/3063-dynamic-resource-allocation#implementing-a-plugin-for-node-resources\">approach using\nCRDs</a>.</p>\n<p>Within SIG Node, we also plan to provide a complete <a href=\"https://github.com/kubernetes-sigs/dra-example-driver\">example\ndriver</a> that can serve\nas a template for other drivers.</p>\n<h2 id=\"running-the-test-driver\">Running the test driver</h2>\n<p>The following steps bring up a local, one-node cluster directly from the\nKubernetes source code. As a prerequisite, your cluster must have nodes with a container\nruntime that supports the\n<a href=\"https://github.com/container-orchestrated-devices/container-device-interface\">Container Device Interface</a>\n(CDI). For example, you can run CRI-O <a href=\"https://github.com/cri-o/cri-o/releases/tag/v1.23.2\">v1.23.2</a> or later.\nOnce containerd v1.7.0 is released, we expect that you can run that or any later version.\nIn the example below, we use CRI-O.</p>\n<p>First, clone the Kubernetes source code. Inside that directory, run:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> hack/install-etcd.sh\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">...\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"></span><span style=\"\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"\"></span><span style=\"color:#000080;font-weight:bold\">$</span> <span style=\"color:#b8860b\">RUNTIME_CONFIG</span><span style=\"color:#666\">=</span>resource.k8s.io/v1alpha1 <span style=\"color:#b62;font-weight:bold\">\\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b62;font-weight:bold\"></span><span style=\"color:#888\"> FEATURE_GATES=DynamicResourceAllocation=true \\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"> DNS_ADDON=&#34;coredns&#34; \\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"> CGROUP_DRIVER=systemd \\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"> CONTAINER_RUNTIME_ENDPOINT=unix:///var/run/crio/crio.sock \\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"> LOG_LEVEL=6 \\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"> ENABLE_CSI_SNAPSHOTTER=false \\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"> API_SECURE_PORT=6444 \\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"> ALLOW_PRIVILEGED=1 \\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"> PATH=$(pwd)/third_party/etcd:$PATH \\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"> ./hack/local-up-cluster.sh -O\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">...\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">To start using your cluster, you can open up another terminal/tab and run:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"></span><span style=\"\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"\"></span><span style=\"color:#888\"> export KUBECONFIG=/var/run/kubernetes/admin.kubeconfig\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">...\n</span></span></span></code></pre></div><p>Once the cluster is up, in another\nterminal run the test driver controller. <code>KUBECONFIG</code> must be set for all of\nthe following commands.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> go run ./test/e2e/dra/test-driver --feature-gates <span style=\"color:#b8860b\">ContextualLogging</span><span style=\"color:#666\">=</span><span style=\"color:#a2f\">true</span> -v<span style=\"color:#666\">=</span><span style=\"color:#666\">5</span> controller\n</span></span></code></pre></div><p>In another terminal, run the kubelet plugin:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> sudo mkdir -p /var/run/cdi <span style=\"color:#666\">&amp;&amp;</span> <span style=\"color:#b62;font-weight:bold\">\\\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b62;font-weight:bold\"></span><span style=\"color:#888\"> sudo chmod a+rwx /var/run/cdi /var/lib/kubelet/plugins_registry /var/lib/kubelet/plugins/\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"></span><span style=\"color:#000080;font-weight:bold\">$</span> go run ./test/e2e/dra/test-driver --feature-gates <span style=\"color:#b8860b\">ContextualLogging</span><span style=\"color:#666\">=</span><span style=\"color:#a2f\">true</span> -v<span style=\"color:#666\">=</span><span style=\"color:#666\">6</span> kubelet-plugin\n</span></span></code></pre></div><p>Changing the permissions of the directories makes it possible to run and (when\nusing delve) debug the kubelet plugin as a normal user, which is convenient\nbecause it uses the already populated Go cache. Remember to restore permissions\nwith <code>sudo chmod go-w</code> when done. Alternatively, you can also build the binary\nand run that as root.</p>\n<p>Now the cluster is ready to create objects:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl create -f test/e2e/dra/test-driver/deploy/example/resourceclass.yaml\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">resourceclass.resource.k8s.io/example created\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"></span><span style=\"\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"\"></span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl create -f test/e2e/dra/test-driver/deploy/example/pod-inline.yaml\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">configmap/test-inline-claim-parameters created\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">resourceclaimtemplate.resource.k8s.io/test-inline-claim-template created\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">pod/test-inline-claim created\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"></span><span style=\"\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"\"></span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl get resourceclaims\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">NAME RESOURCECLASSNAME ALLOCATIONMODE STATE AGE\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">test-inline-claim-resource example WaitForFirstConsumer allocated,reserved 8s\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\"></span><span style=\"\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"\"></span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl get pods\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">NAME READY STATUS RESTARTS AGE\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">test-inline-claim 0/2 Completed 0 21s\n</span></span></span></code></pre></div><p>The test driver doesn't do much, it only sets environment variables as defined\nin the ConfigMap. The test pod dumps the environment, so the log can be checked\nto verify that everything worked:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-console\" data-lang=\"console\"><span style=\"display:flex;\"><span><span style=\"color:#000080;font-weight:bold\">$</span> kubectl logs test-inline-claim with-resource | grep user_a\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#888\">user_a=&#39;b&#39;\n</span></span></span></code></pre></div><h2 id=\"next-steps\">Next steps</h2>\n<ul>\n<li>See the\n<a href=\"https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/3063-dynamic-resource-allocation/README.md\">Dynamic Resource Allocation</a>\nKEP for more information on the design.</li>\n<li>Read <a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/dynamic-resource-allocation/\">Dynamic Resource Allocation</a>\nin the official Kubernetes documentation.</li>\n<li>You can participate in\n<a href=\"https://github.com/kubernetes/community/blob/master/sig-node/README.md\">SIG Node</a>\nand / or the <a href=\"https://github.com/cncf/tag-runtime/blob/master/wg/COD.md\">CNCF Container Orchestrated Device Working Group</a>.</li>\n<li>You can view or comment on the <a href=\"https://github.com/orgs/kubernetes/projects/95/views/1\">project board</a>\nfor dynamic resource allocation.</li>\n<li>In order to move this feature towards beta, we need feedback from hardware\nvendors, so here's a call to action: try out this feature, consider how it can help\nwith problems that your users are having, and write resource drivers…</li>\n</ul>","PublishedAt":"2022-12-15 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/12/15/dynamic-resource-allocation/","SourceName":"Kubernetes"}},{"node":{"ID":2569,"Title":"Elastic recognized as a Strong Performer in The Forrester Wave™: Artificial Intelligence for IT Operations (AIOps), Q4 2022","Description":"","PublishedAt":"2022-12-15 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/2022-forrester-aiops-wave-it-operations-elastic-observability","SourceName":"Elastic"}},{"node":{"ID":2554,"Title":"Hat’s out of the bag! Join us for Winter/Summer Bash 2022! ","Description":"<p>Grab a hot or cold beverage and join us in the Hat Cafe this year. It’s hat season yet again! </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2022/12/14/hats-out-of-the-bag-join-us-for-winter-summer-bash-2022/\">Hat’s out of the bag! Join us for Winter/Summer Bash 2022!&nbsp;</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2022-12-14 21:21:48+00:00","OriginURL":"https://stackoverflow.blog/2022/12/14/hats-out-of-the-bag-join-us-for-winter-summer-bash-2022/","SourceName":"Stack Overflow"}}]}},"pageContext":{"limit":30,"skip":3180,"numPages":193,"currentPage":107}},"staticQueryHashes":["3649515864"]}