{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/167","result":{"data":{"allPost":{"edges":[{"node":{"ID":1076,"Title":"Dynamic Service Routing using Istio","Description":"<p>This article is part of the Developer Productivity Engineering Camp blog series which will take you through one of the great features called Dynamic Service Routing. Using this feature we can route the traffic between different versions of each microservice. Let’s find out how this feature works, hope you will find it interesting. Introduction At [&hellip;]</p>\n","PublishedAt":"2022-02-18 11:13:31+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220218-dynamic-service-routing-using-istio/","SourceName":"Mercari"}},{"node":{"ID":220,"Title":"Leadership in 2022: Focus on Empathy","Description":"<p>Why leading with empathy is the key when working across cultures</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/leadership-in-2022-focus-on-empathy/\">Leadership in 2022: Focus on Empathy</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-02-18 11:00:05+00:00","OriginURL":"https://blog.cloudera.com/leadership-in-2022-focus-on-empathy/","SourceName":"Cloudera"}},{"node":{"ID":1026,"Title":"Accelerating the LinkedIn Experience with Azure Front Door","Description":"Co-authors: Samir Jafferali, Viranch Mehta, and Thanglalson Gangte We announced the completion of LinkedIn’s migration to Azure’s edge offering, Azure Front Door (AFD), in June of 2020 and since then we have seen numerous benefits from the switch. Microsoft has continued to aggressively expand the AFD footprint to new countries, giving us quick and direct access to our members’ ISPs, which has resulted in measurable latency improvements, especially in Africa. We also continue to ramp up additional LinkedIn web properties like Real-Time Bidding and the lnkd.in URL shortener. Being on [&#8230;]","PublishedAt":"2022-02-17 20:00:00+00:00","OriginURL":"https://engineering.linkedin.com/blog/2022/accelerating-the-linkedin-experience-with-azure-front-door","SourceName":"Linkedin"}},{"node":{"ID":221,"Title":"Upgrade Hortonworks Data Platform (HDP) to Cloudera Data Platform (CDP) Private Cloud Base","Description":"<p>A step by Step Guide</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/upgrade-hortonworks-data-platform-hdp-to-cloudera-data-platform-cdp-private-cloud-base/\">Upgrade Hortonworks Data Platform (HDP) to Cloudera Data Platform (CDP) Private Cloud Base</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-02-17 14:00:56+00:00","OriginURL":"https://blog.cloudera.com/upgrade-hortonworks-data-platform-hdp-to-cloudera-data-platform-cdp-private-cloud-base/","SourceName":"Cloudera"}},{"node":{"ID":1230,"Title":"Blog: Updated: Dockershim Removal FAQ","Description":"<p><strong>This supersedes the original\n<a href=\"https://kubernetes.io/blog/2020/12/02/dockershim-faq/\">Dockershim Deprecation FAQ</a> article,\npublished in late 2020. The article includes updates from the v1.24\nrelease of Kubernetes.</strong></p>\n<hr>\n<p>This document goes over some frequently asked questions regarding the\nremoval of <em>dockershim</em> from Kubernetes. The removal was originally\n<a href=\"https://kubernetes.io/blog/2020/12/08/kubernetes-1-20-release-announcement/\">announced</a>\nas a part of the Kubernetes v1.20 release. The Kubernetes\n<a href=\"https://kubernetes.io/releases/#release-v1-24\">v1.24 release</a> actually removed the dockershim\nfrom Kubernetes.</p>\n<p>For more on what that means, check out the blog post\n<a href=\"https://kubernetes.io/blog/2020/12/02/dont-panic-kubernetes-and-docker/\">Don't Panic: Kubernetes and Docker</a>.</p>\n<p>To determine the impact that the removal of dockershim would have for you or your organization,\nyou can read <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/migrating-from-dockershim/check-if-dockershim-removal-affects-you/\">Check whether dockershim removal affects you</a>.</p>\n<p>In the months and days leading up to the Kubernetes 1.24 release, Kubernetes contributors worked hard to try to make this a smooth transition.</p>\n<ul>\n<li>A blog post detailing our <a href=\"https://kubernetes.io/blog/2022/01/07/kubernetes-is-moving-on-from-dockershim/\">commitment and next steps</a>.</li>\n<li>Checking if there were major blockers to migration to <a href=\"https://kubernetes.io/docs/setup/production-environment/container-runtimes/#container-runtimes\">other container runtimes</a>.</li>\n<li>Adding a <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/migrating-from-dockershim/\">migrating from dockershim</a> guide.</li>\n<li>Creating a list of\n<a href=\"https://kubernetes.io/docs/reference/node/topics-on-dockershim-and-cri-compatible-runtimes/\">articles on dockershim removal and on using CRI-compatible runtimes</a>.\nThat list includes some of the already mentioned docs, and also covers selected external sources\n(including vendor guides).</li>\n</ul>\n<h3 id=\"why-was-the-dockershim-removed-from-kubernetes\">Why was the dockershim removed from Kubernetes?</h3>\n<p>Early versions of Kubernetes only worked with a specific container runtime:\nDocker Engine. Later, Kubernetes added support for working with other container runtimes.\nThe CRI standard was <a href=\"https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/\">created</a> to\nenable interoperability between orchestrators (like Kubernetes) and many different container\nruntimes.\nDocker Engine doesn't implement that interface (CRI), so the Kubernetes project created\nspecial code to help with the transition, and made that <em>dockershim</em> code part of Kubernetes\nitself.</p>\n<p>The dockershim code was always intended to be a temporary solution (hence the name: shim).\nYou can read more about the community discussion and planning in the\n<a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2221-remove-dockershim\">Dockershim Removal Kubernetes Enhancement Proposal</a>.\nIn fact, maintaining dockershim had become a heavy burden on the Kubernetes maintainers.</p>\n<p>Additionally, features that were largely incompatible with the dockershim, such\nas cgroups v2 and user namespaces are being implemented in these newer CRI\nruntimes. Removing the dockershim from Kubernetes allows further development in those areas.</p>\n<h3 id=\"are-docker-and-containers-the-same-thing\">Are Docker and containers the same thing?</h3>\n<p>Docker popularized the Linux containers pattern and has been instrumental in\ndeveloping the underlying technology, however containers in Linux have existed\nfor a long time. The container ecosystem has grown to be much broader than just\nDocker. Standards like OCI and CRI have helped many tools grow and thrive in our\necosystem, some replacing aspects of Docker while others enhance existing\nfunctionality.</p>\n<h3 id=\"will-my-existing-container-images-still-work\">Will my existing container images still work?</h3>\n<p>Yes, the images produced from <code>docker build</code> will work with all CRI implementations.\nAll your existing images will still work exactly the same.</p>\n<h4 id=\"what-about-private-images\">What about private images?</h4>\n<p>Yes. All CRI runtimes support the same pull secrets configuration used in\nKubernetes, either via the PodSpec or ServiceAccount.</p>\n<h3 id=\"can-i-still-use-docker-engine-in-kubernetes-1-23\">Can I still use Docker Engine in Kubernetes 1.23?</h3>\n<p>Yes, the only thing changed in 1.20 is a single warning log printed at <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/\">kubelet</a>\nstartup if using Docker Engine as the runtime. You'll see this warning in all versions up to 1.23. The dockershim removal occurred\nin Kubernetes 1.24.</p>\n<p>If you're running Kubernetes v1.24 or later, see <a href=\"#can-i-still-use-docker-engine-as-my-container-runtime\">Can I still use Docker Engine as my container runtime?</a>.\n(Remember, you can switch away from the dockershim if you're using any supported Kubernetes release; from release v1.24, you\n<strong>must</strong> switch as Kubernetes no longer includes the dockershim).</p>\n<h3 id=\"which-cri-implementation-should-i-use\">Which CRI implementation should I use?</h3>\n<p>That’s a complex question and it depends on a lot of factors. If Docker Engine is\nworking for you, moving to containerd should be a relatively easy swap and\nwill have strictly better performance and less overhead. However, we encourage you\nto explore all the options from the <a href=\"https://landscape.cncf.io/card-mode?category=container-runtime&amp;grouping=category\">CNCF landscape</a> in case another would be an\neven better fit for your environment.</p>\n<h4 id=\"can-i-still-use-docker-engine-as-my-container-runtime\">Can I still use Docker Engine as my container runtime?</h4>\n<p>First off, if you use Docker on your own PC to develop or test containers: nothing changes.\nYou can still use Docker locally no matter what container runtime(s) you use for your\nKubernetes clusters. Containers make this kind of interoperability possible.</p>\n<p>Mirantis and Docker have <a href=\"https://www.mirantis.com/blog/mirantis-to-take-over-support-of-kubernetes-dockershim-2/\">committed</a> to maintaining a replacement adapter for\nDocker Engine, and to maintain that adapter even after the in-tree dockershim is removed\nfrom Kubernetes. The replacement adapter is named <a href=\"https://github.com/Mirantis/cri-dockerd\"><code>cri-dockerd</code></a>.</p>\n<p>You can install <code>cri-dockerd</code> and use it to connect the kubelet to Docker Engine. Read <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/migrating-from-dockershim/migrate-dockershim-dockerd/\">Migrate Docker Engine nodes from dockershim to cri-dockerd</a> to learn more.</p>\n<h3 id=\"are-there-examples-of-folks-using-other-runtimes-in-production-today\">Are there examples of folks using other runtimes in production today?</h3>\n<p>All Kubernetes project produced artifacts (Kubernetes binaries) are validated\nwith each release.</p>\n<p>Additionally, the <a href=\"https://kind.sigs.k8s.io/\">kind</a> project has been using containerd for some time and has\nseen an improvement in stability for its use case. Kind and containerd are leveraged\nmultiple times every day to validate any changes to the Kubernetes codebase. Other\nrelated projects follow a similar pattern as well, demonstrating the stability and\nusability of other container runtimes. As an example, OpenShift 4.x has been\nusing the <a href=\"https://cri-o.io/\">CRI-O</a> runtime in production since June 2019.</p>\n<p>For other examples and references you can look at the adopters of containerd and\nCRI-O, two container runtimes under the Cloud Native Computing Foundation (<a href=\"https://cncf.io\">CNCF</a>).</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/blob/master/ADOPTERS.md\">containerd</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/blob/master/ADOPTERS.md\">CRI-O</a></li>\n</ul>\n<h3 id=\"people-keep-referencing-oci-what-is-that\">People keep referencing OCI, what is that?</h3>\n<p>OCI stands for the <a href=\"https://opencontainers.org/about/overview/\">Open Container Initiative</a>, which standardized many of the\ninterfaces between container tools and technologies. They maintain a standard\nspecification for packaging container images (OCI image-spec) and running containers\n(OCI runtime-spec). They also maintain an actual implementation of the runtime-spec\nin the form of <a href=\"https://github.com/opencontainers/runc\">runc</a>, which is the underlying default runtime for both\n<a href=\"https://containerd.io/\">containerd</a> and <a href=\"https://cri-o.io/\">CRI-O</a>. The CRI builds on these low-level specifications to\nprovide an end-to-end standard for managing containers.</p>\n<h3 id=\"what-should-i-look-out-for-when-changing-cri-implementations\">What should I look out for when changing CRI implementations?</h3>\n<p>While the underlying containerization code is the same between Docker and most\nCRIs (including containerd), there are a few differences around the edges. Some\ncommon things to consider when migrating are:</p>\n<ul>\n<li>Logging configuration</li>\n<li>Runtime resource limitations</li>\n<li>Node provisioning scripts that call docker or use Docker Engine via its control socket</li>\n<li>Plugins for <code>kubectl</code> that require the <code>docker</code> CLI or the Docker Engine control socket</li>\n<li>Tools from the Kubernetes project that require direct access to Docker Engine\n(for example: the deprecated <code>kube-imagepuller</code> tool)</li>\n<li>Configuration of functionality like <code>registry-mirrors</code> and insecure registries</li>\n<li>Other support scripts or daemons that expect Docker Engine to be available and are run\noutside of Kubernetes (for example, monitoring or security agents)</li>\n<li>GPUs or special hardware and how they integrate with your runtime and Kubernetes</li>\n</ul>\n<p>If you use Kubernetes resource requests/limits or file-based log collection\nDaemonSets then they will continue to work the same, but if you've customized\nyour <code>dockerd</code> configuration, you’ll need to adapt that for your new container\nruntime where possible.</p>\n<p>Another thing to look out for is anything expecting to run for system maintenance\nor nested inside a container when building images will no longer work. For the\nformer, you can use the <a href=\"https://github.com/kubernetes-sigs/cri-tools\"><code>crictl</code></a> tool as a drop-in replacement (see\n<a href=\"https://kubernetes.io/docs/tasks/debug/debug-cluster/crictl/#mapping-from-docker-cli-to-crictl\">mapping from docker cli to crictl</a>)\nand for the latter you can use newer container build options like <a href=\"https://github.com/genuinetools/img\">img</a>, <a href=\"https://github.com/containers/buildah\">buildah</a>,\n<a href=\"https://github.com/GoogleContainerTools/kaniko\">kaniko</a>, or <a href=\"https://github.com/vmware-tanzu/buildkit-cli-for-kubectl\">buildkit-cli-for-kubectl</a> that don’t require Docker.</p>\n<p>For containerd, you can start with their <a href=\"https://github.com/containerd/cri/blob/master/docs/registry.md\">documentation</a> to see what configuration\noptions are available as you migrate things over.</p>\n<p>For instructions on how to use containerd and CRI-O with Kubernetes, see the\nKubernetes documentation on <a href=\"https://kubernetes.io/docs/setup/production-environment/container-runtimes/\">Container Runtimes</a>.</p>\n<h3 id=\"what-if-i-have-more-questions\">What if I have more questions?</h3>\n<p>If you use a vendor-supported Kubernetes distribution, you can ask them about\nupgrade plans for their products. For end-user questions, please post them\nto our end user community forum: <a href=\"https://discuss.kubernetes.io/\">https://discuss.kubernetes.io/</a>.</p>\n<p>You can discuss the decision to remove dockershim via a dedicated\n<a href=\"https://github.com/kubernetes/kubernetes/issues/106917\">GitHub issue</a>.</p>\n<p>You can also check out the excellent blog post\n<a href=\"https://dev.to/inductor/wait-docker-is-deprecated-in-kubernetes-now-what-do-i-do-e4m\">Wait, Docker is deprecated in Kubernetes now?</a> a more in-depth technical\ndiscussion of the changes.</p>\n<h3 id=\"is-there-any-tooling-that-can-help-me-find-dockershim-in-use\">Is there any tooling that can help me find dockershim in use?</h3>\n<p>Yes! The <a href=\"https://github.com/aws-containers/kubectl-detector-for-docker-socket\">Detector for Docker Socket (DDS)</a> is a kubectl plugin that you can\ninstall and then use to check your cluster. DDS can detect if active Kubernetes workloads\nare mounting the Docker Engine socket (<code>docker.sock</code>) as a volume.\nFind more details and usage patterns in the DDS project's <a href=\"https://github.com/aws-containers/kubectl-detector-for-docker-socket\">README</a>.</p>\n<h3 id=\"can-i-have-a-hug\">Can I have a hug?</h3>\n<p>Yes, we're still giving hugs as requested. 🤗🤗🤗</p>","PublishedAt":"2022-02-17 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/02/17/dockershim-faq/","SourceName":"Kubernetes"}},{"node":{"ID":756,"Title":"Introducing Carbon Feed for Earners: The One-Stop Info Shop","Description":"<p><span style=\"font-weight: 400;\">After launching the Driver App in 2018 to over 2</span><span style=\"font-weight: 400;\"> million earners worldwide,</span><span style=\"font-weight: 400;\"> we added content and functionality at a rapid pace. Although this really bolstered the platform, allowing for high-density and high-frequency content, and provided drivers and couriers with </span>&#8230;</p>\n<p>The post <a rel=\"nofollow\" href=\"https://eng.uber.com/introducing-carbon-feed-for-earners-the-one-stop-info-shop/\">Introducing Carbon Feed for Earners: The One-Stop Info Shop</a> appeared first on <a rel=\"nofollow\" href=\"https://eng.uber.com\">Uber Engineering Blog</a>.</p>\n","PublishedAt":"2022-02-16 17:30:26+00:00","OriginURL":"https://eng.uber.com/introducing-carbon-feed-for-earners-the-one-stop-info-shop/","SourceName":"Uber"}},{"node":{"ID":222,"Title":"Of Muffins and Machine Learning Models","Description":"<p>A look at the five areas of machine Learning Model Governance with Cloudera Machine Learning (CML)</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/of-muffins-and-machine-learning-models/\">Of Muffins and Machine Learning Models</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-02-16 14:00:08+00:00","OriginURL":"https://blog.cloudera.com/of-muffins-and-machine-learning-models/","SourceName":"Cloudera"}},{"node":{"ID":458,"Title":"How we implemented data and analytics for product-led growth","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2022/02/MXP-Blog-MixpanelsOwnDataStack-1920x1080-1-1024x576.png\" class=\"type:primaryImage\" /></figure>\n<p>We adopted a product-led growth (PLG) strategy at Mixpanel in 2021. The idea behind PLG is that you want potential customers to try the product for free and realize the value it provides for themselves before starting a sales cycle. So as new free users sign up, you want to measure how far along they</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/data-analytics-product-led-growth/\">How we implemented data and analytics for product-led growth</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2022-02-16 05:05:37+00:00","OriginURL":"https://mixpanel.com/blog/data-analytics-product-led-growth/","SourceName":"Mixpanel"}},{"node":{"ID":1231,"Title":"Blog: SIG Node CI Subproject Celebrates Two Years of Test Improvements","Description":"<p><strong>Authors:</strong> Sergey Kanzhelev (Google), Elana Hashman (Red Hat)</p>\n<p>Ensuring the reliability of SIG Node upstream code is a continuous effort\nthat takes a lot of behind-the-scenes effort from many contributors.\nThere are frequent releases of Kubernetes, base operating systems,\ncontainer runtimes, and test infrastructure that result in a complex matrix that\nrequires attention and steady investment to &quot;keep the lights on.&quot;\nIn May 2020, the Kubernetes node special interest group (&quot;SIG Node&quot;) organized a new\nsubproject for continuous integration (CI) for node-related code and tests. Since its\ninauguration, the SIG Node CI subproject has run a weekly meeting, and even the full hour\nis often not enough to complete triage of all bugs, test-related PRs and issues, and discuss all\nrelated ongoing work within the subgroup.</p>\n<p>Over the past two years, we've fixed merge-blocking and release-blocking tests, reducing time to merge Kubernetes contributors' pull requests thanks to reduced test flakes. When we started, Node test jobs only passed 42% of the time, and through our efforts, we now ensure a consistent &gt;90% job pass rate. We've closed 144 test failure issues and merged 176 pull requests just in kubernetes/kubernetes. And we've helped subproject participants ascend the Kubernetes contributor ladder, with 3 new org members, 6 new reviewers, and 2 new approvers.</p>\n<p>The Node CI subproject is an approachable first stop to help new contributors\nget started with SIG Node. There is a low barrier to entry for new contributors\nto address high-impact bugs and test fixes, although there is a long\nroad before contributors can climb the entire contributor ladder:\nit took over a year to establish two new approvers for the group.\nThe complexity of all the different components that power Kubernetes nodes\nand its test infrastructure requires a sustained investment over a long period\nfor developers to deeply understand the entire system,\nboth at high and low levels of detail.</p>\n<p>We have several regular contributors at our meetings, however; our reviewers\nand approvers pool is still small. It is our goal to continue to grow\ncontributors to ensure a sustainable distribution of work\nthat does not just fall to a few key approvers.</p>\n<p>It's not always obvious how subprojects within SIGs are formed, operate,\nand work. Each is unique to its sponsoring SIG and tailored to the projects\nthat the group is intended to support. As a group that has welcomed many\nfirst-time SIG Node contributors, we'd like to share some of the details and\naccomplishments over the past two years,\nhelping to demystify our inner workings and celebrate the hard work\nof all our dedicated contributors!</p>\n<h2 id=\"timeline\">Timeline</h2>\n<p><em><strong>May 2020.</strong></em> SIG Node CI group was formed on May 11, 2020, with more than\n<a href=\"https://docs.google.com/document/d/1fb-ugvgdSVIkkuJ388_nhp2pBTy_4HEVg5848Xy7n5U/edit#bookmark=id.vsb8pqnf4gib\">30 volunteers</a>\nsigned up, to improve SIG Node CI signal and overall observability.\nVictor Pickard focused on getting\n<a href=\"https://testgrid.k8s.io/sig-node\">testgrid jobs</a> passing\nwhen Ning Liao suggested forming a group around this effort and came up with\nthe <a href=\"https://docs.google.com/document/d/1yS-XoUl6GjZdjrwxInEZVHhxxLXlTIX2CeWOARmD8tY/edit#heading=h.te6sgum6s8uf\">original group charter document</a>.\nThe SIG Node chairs sponsored group creation with Victor as a subproject lead.\nSergey Kanzhelev joined Victor shortly after as a co-lead.</p>\n<p>At the kick-off meeting, we discussed which tests to concentrate on fixing first\nand discussed merge-blocking and release-blocking tests, many of which were failing due\nto infrastructure issues or buggy test code.</p>\n<p>The subproject launched weekly hour-long meetings to discuss ongoing work\ndiscussion and triage.</p>\n<p><em><strong>June 2020.</strong></em> Morgan Bauer, Karan Goel, and Jorge Alarcon Ochoa were\nrecognized as reviewers for the SIG Node CI group for their contributions,\nhelping significantly with the early stages of the subproject.\nDavid Porter and Roy Yang also joined the SIG test failures GitHub team.</p>\n<p><em><strong>August 2020.</strong></em> All merge-blocking and release-blocking tests were passing,\nwith some flakes. However, only 42% of all SIG Node test jobs were green, as there\nwere many flakes and failing tests.</p>\n<p><em><strong>October 2020.</strong></em> Amim Knabben becomes a Kubernetes org member for his\ncontributions to the subproject.</p>\n<p><em><strong>January 2021.</strong></em> With healthy presubmit and critical periodic jobs passing,\nthe subproject discussed its goal for cleaning up the rest of periodic tests\nand ensuring they passed without flakes.</p>\n<p>Elana Hashman joined the subproject, stepping up to help lead it after\nVictor's departure.</p>\n<p><em><strong>February 2021.</strong></em> Artyom Lukianov becomes a Kubernetes org member for his\ncontributions to the subproject.</p>\n<p><em><strong>August 2021.</strong></em> After SIG Node successfully ran a <a href=\"https://groups.google.com/g/kubernetes-dev/c/w2ghO4ihje0/m/VeEql1LJBAAJ\">bug scrub</a>\nto clean up its bug backlog, the scope of the meeting was extended to\ninclude bug triage to increase overall reliability, anticipating issues\nbefore they affect the CI signal.</p>\n<p>Subproject leads Elana Hashman and Sergey Kanzhelev are both recognized as\napprovers on all node test code, supported by SIG Node and SIG Testing.</p>\n<p><em><strong>September 2021.</strong></em> After significant deflaking progress with serial tests in\nthe 1.22 release spearheaded by Francesco Romani, the subproject set a goal\nfor getting the serial job fully passing by the 1.23 release date.</p>\n<p>Mike Miranda becomes a Kubernetes org member for his contributions\nto the subproject.</p>\n<p><em><strong>November 2021.</strong></em> Throughout 2021, SIG Node had no merge or\nrelease-blocking test failures. Many flaky tests from past releases are removed\nfrom release-blocking dashboards as they had been fully cleaned up.</p>\n<p>Danielle Lancashire was recognized as a reviewer for SIG Node's subgroup, test code.</p>\n<p>The final node serial tests were completely fixed. The serial tests consist of\nmany disruptive and slow tests which tend to be flakey and are hard\nto troubleshoot. By the 1.23 release freeze, the last serial tests were\nfixed and the job was passing without flakes.</p>\n<p><a href=\"https://kubernetes.slack.com/archives/C0BP8PW9G/p1638211041322900\"><img src=\"serial-tests-green.png\" alt=\"Slack announcement that Serial tests are green\"></a></p>\n<p>The 1.23 release got a special shout out for the tests quality and CI signal.\nThe SIG Node CI subproject was proud to have helped contribute to such\na high-quality release, in part due to our efforts in identifying\nand fixing flakes in Node and beyond.</p>\n<p><a href=\"https://kubernetes.slack.com/archives/C92G08FGD/p1637175755023200\"><img src=\"release-mostly-green.png\" alt=\"Slack shoutout that release was mostly green\"></a></p>\n<p><em><strong>December 2021.</strong></em> An estimated 90% of test jobs were passing at the time of\nthe 1.23 release (up from 42% in August 2020).</p>\n<p>Dockershim code was removed from Kubernetes. This affected nearly half of SIG Node's\ntest jobs and the SIG Node CI subproject reacted quickly and retargeted all the\ntests. SIG Node was the first SIG to complete test migrations off dockershim,\nproviding examples for other affected SIGs. The vast majority of new jobs passed\nat the time of introduction without further fixes required. The <a href=\"https://k8s.io/dockershim\">effort of\nremoving dockershim</a>) from Kubernetes is ongoing.\nThere are still some wrinkles from the dockershim removal as we uncover more\ndependencies on dockershim, but we plan to stabilize all test jobs\nby the 1.24 release.</p>\n<h2 id=\"statistics\">Statistics</h2>\n<p>Our regular meeting attendees and subproject participants for the past few months:</p>\n<ul>\n<li>Aditi Sharma</li>\n<li>Artyom Lukianov</li>\n<li>Arnaud Meukam</li>\n<li>Danielle Lancashire</li>\n<li>David Porter</li>\n<li>Davanum Srinivas</li>\n<li>Elana Hashman</li>\n<li>Francesco Romani</li>\n<li>Matthias Bertschy</li>\n<li>Mike Miranda</li>\n<li>Paco Xu</li>\n<li>Peter Hunt</li>\n<li>Ruiwen Zhao</li>\n<li>Ryan Phillips</li>\n<li>Sergey Kanzhelev</li>\n<li>Skyler Clark</li>\n<li>Swati Sehgal</li>\n<li>Wenjun Wu</li>\n</ul>\n<p>The <a href=\"https://github.com/kubernetes/test-infra/\">kubernetes/test-infra</a> source code repository contains test definitions. The number of\nNode PRs just in that repository:</p>\n<ul>\n<li>2020 PRs (since May): <a href=\"https://github.com/kubernetes/test-infra/pulls?q=is%3Apr+is%3Aclosed+label%3Asig%2Fnode+created%3A2020-05-01..2020-12-31+-author%3Ak8s-infra-ci-robot+\">183</a></li>\n<li>2021 PRs: <a href=\"https://github.com/kubernetes/test-infra/pulls?q=is%3Apr+is%3Aclosed+label%3Asig%2Fnode+created%3A2021-01-01..2021-12-31+-author%3Ak8s-infra-ci-robot+\">264</a></li>\n</ul>\n<p>Triaged issues and PRs on CI board (including triaging away from the subgroup scope):</p>\n<ul>\n<li>2020 (since May): <a href=\"https://github.com/issues?q=project%3Akubernetes%2F43+created%3A2020-05-01..2020-12-31\">132</a></li>\n<li>2021: <a href=\"https://github.com/issues?q=project%3Akubernetes%2F43+created%3A2021-01-01..2021-12-31+\">532</a></li>\n</ul>\n<h2 id=\"future\">Future</h2>\n<p>Just &quot;keeping the lights on&quot; is a bold task and we are committed to improving this experience.\nWe are working to simplify the triage and review processes for SIG Node.</p>\n<p>Specifically, we are working on better test organization, naming,\nand tracking:</p>\n<ul>\n<li><a href=\"https://github.com/kubernetes/enhancements/pull/3042\">https://github.com/kubernetes/enhancements/pull/3042</a></li>\n<li><a href=\"https://github.com/kubernetes/test-infra/issues/24641\">https://github.com/kubernetes/test-infra/issues/24641</a></li>\n<li><a href=\"https://docs.google.com/spreadsheets/d/1IwONkeXSc2SG_EQMYGRSkfiSWNk8yWLpVhPm-LOTbGM/edit#gid=0\">Kubernetes SIG-Node CI Testgrid Tracker</a></li>\n</ul>\n<p>We are also constantly making progress on improved tests debuggability and de-flaking.</p>\n<p>If any of this interests you, we'd love for you to join us!\nThere's plenty to learn in debugging test failures, and it will help you gain\nfamiliarity with the code that SIG Node maintains.</p>\n<p>You can always find information about the group on the\n<a href=\"https://github.com/kubernetes/community/tree/master/sig-node\">SIG Node</a> page.\nWe give group updates at our maintainer track sessions, such as\n<a href=\"https://kccnceu2021.sched.com/event/iE8E/kubernetes-sig-node-intro-and-deep-dive-elana-hashman-red-hat-sergey-kanzhelev-google\">KubeCon + CloudNativeCon Europe 2021</a> and\n<a href=\"https://kccncna2021.sched.com/event/lV9D/kubenetes-sig-node-intro-and-deep-dive-elana-hashman-derek-carr-red-hat-sergey-kanzhelev-dawn-chen-google?iframe=no&amp;w=100%25&amp;sidebar=yes&amp;bg=no\">KubeCon + CloudNative North America 2021</a>.\nJoin us in our mission to keep the kubelet and other SIG Node components reliable and ensure smooth and uneventful releases!</p>","PublishedAt":"2022-02-16 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/02/16/sig-node-ci-subproject-celebrates/","SourceName":"Kubernetes"}},{"node":{"ID":1077,"Title":"Merpay Code Payment Team—Supporting Robustness and Availability Through Its Efforts and Creative Solutions #TeamInterview","Description":"<p>The Mercari Group offers various applications and services, all of which are based on the Group’s payment infrastructure. This infrastructure is provided by Merpay. We interviewed backend engineers at Merpay, responsible for the company&#8217;s QR code payment and other payment services, and asked them about their experiences and creative solutions to issues that have arisen [&hellip;]</p>\n","PublishedAt":"2022-02-15 16:21:30+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220121-9e083be116/","SourceName":"Mercari"}},{"node":{"ID":223,"Title":"Make the leap to Hybrid with Cloudera Data Engineering","Description":"<p>Introducing Cloudera Data Engineering in CDP Private Cloud 1.3</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/introducing-cloudera-data-engineering-in-cdp-private-cloud-1-3/\">Make the leap to Hybrid with Cloudera Data Engineering</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-02-14 14:00:59+00:00","OriginURL":"https://blog.cloudera.com/introducing-cloudera-data-engineering-in-cdp-private-cloud-1-3/","SourceName":"Cloudera"}},{"node":{"ID":1078,"Title":"Managing Network Policies for namespaces isolation on a multi-tenant Kubernetes cluster","Description":"<p>This article is part of the Developer Productivity Engineering Camp blog series, brought to you by Yohei Kanemaru from the Network team. At Mercari, we&#8217;ve been using a multi-tenant Kubernetes cluster that runs 300+ microservices for various products such as Mercari JP, Merpay, NFT, and so on. In this kind of situation, it&#8217;s essential to [&hellip;]</p>\n","PublishedAt":"2022-02-14 11:17:27+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220214-managing-network-policies/","SourceName":"Mercari"}},{"node":{"ID":224,"Title":"Getting Started with Machine Learning","Description":"<p>An introduction to Machine Learning and the Data Science Lifecycle</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/getting-started-with-machine-learning/\">Getting Started with Machine Learning</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-02-11 14:00:08+00:00","OriginURL":"https://blog.cloudera.com/getting-started-with-machine-learning/","SourceName":"Cloudera"}},{"node":{"ID":128,"Title":"CLS: Treading into the Unknown (Vol. 2)","Description":"","PublishedAt":"2022-02-11 11:33:18+00:00","OriginURL":"https://medium.com/engineering-housing/cls-treading-into-the-unknown-vol-2-33ef3229498?source=rss----3a69e32e2594---4","SourceName":"Housing.com"}},{"node":{"ID":757,"Title":"DeepETA: How Uber Predicts Arrival Times Using Deep Learning","Description":"<p><span style=\"font-weight: 400;\">At Uber, magical customer experiences depend on accurate arrival time predictions (ETAs). We use ETAs to calculate fares, estimate pickup times, match riders to drivers, plan deliveries, and more. Traditional routing engines compute ETAs by dividing up the road network </span>&#8230;</p>\n<p>The post <a rel=\"nofollow\" href=\"https://eng.uber.com/deepeta-how-uber-predicts-arrival-times/\">DeepETA: How Uber Predicts Arrival Times Using Deep Learning</a> appeared first on <a rel=\"nofollow\" href=\"https://eng.uber.com\">Uber Engineering Blog</a>.</p>\n","PublishedAt":"2022-02-10 17:30:21+00:00","OriginURL":"https://eng.uber.com/deepeta-how-uber-predicts-arrival-times/","SourceName":"Uber"}},{"node":{"ID":1079,"Title":"How Istio solved our problems","Description":"<p>This article is part of the Developer Productivity Engineering Camp blog series, brought to you by @hatappi from the Microservices Network team. Introduction Microservices Network team maintains Istio as one of the components. At Mercari, we have started a project to replace existing systems with microservices since 2017, and the number of microservices is still [&hellip;]</p>\n","PublishedAt":"2022-02-10 16:34:50+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220210-how-istio-solved-our-problems/","SourceName":"Mercari"}},{"node":{"ID":225,"Title":"Announcing the GA of Cloudera DataFlow for the Public Cloud on Microsoft Azure","Description":"<p>After the launch of Cloudera DataFlow for the Public Cloud (CDF-PC) on AWS a few months ago, we are thrilled to announce that CDF-PC is now generally available on Microsoft Azure, allowing NiFi users on Azure to run their data flows in a cloud-native runtime.  With CDF-PC, NiFi users can import their existing data flows [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/announcing-the-ga-of-cloudera-dataflow-for-the-public-cloud-on-microsoft-azure/\">Announcing the GA of Cloudera DataFlow for the Public Cloud on Microsoft Azure</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-02-10 14:00:58+00:00","OriginURL":"https://blog.cloudera.com/announcing-the-ga-of-cloudera-dataflow-for-the-public-cloud-on-microsoft-azure/","SourceName":"Cloudera"}},{"node":{"ID":1080,"Title":"Introduction of the Network team","Description":"<p>This article is part of the Developer Productivity Engineering Camp blog series. Introduction Hi everyone, my name is Raphael Fraysse, Tech Lead for the Network team in Mercari. In this article, I will briefly introduce the team by explaining what we want to achieve (our mission) and by which means (our strategy). Mission Our team’s [&hellip;]</p>\n","PublishedAt":"2022-02-09 20:26:09+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220209-introduction-of-the-network-team/","SourceName":"Mercari"}},{"node":{"ID":520,"Title":"Data pipeline asset management with Dataflow","Description":"","PublishedAt":"2022-02-09 17:33:22+00:00","OriginURL":"https://netflixtechblog.com/data-pipeline-asset-management-with-dataflow-86525b3e21ca?source=rss----2615bd06b42e---4","SourceName":"Netflix"}},{"node":{"ID":226,"Title":"#ClouderaLife Spotlight: Marque Blackman, Director of Global Workplace","Description":"<p>Using creativity to find solutions for the global workplace, employee diversity, and beyond</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/clouderalife-spotlight-marque-blackman-director-of-global-workplace/\">#ClouderaLife Spotlight: Marque Blackman, Director of Global Workplace</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-02-09 14:01:42+00:00","OriginURL":"https://blog.cloudera.com/clouderalife-spotlight-marque-blackman-director-of-global-workplace/","SourceName":"Cloudera"}},{"node":{"ID":227,"Title":"Gartner® Recognizes Cloudera in Critical Capabilities for Cloud Database Management Systems for Operational Use Cases","Description":"<p>Cloudera has been recognized as a Visionary in 2021 Gartner® Magic Quadrant™  for Cloud Database Management Systems (DBMS) and for the first time, evaluated CDP Operational Database (COD) against the 12 critical capabilities for Operational Databases.  Overall, Gartner recognized 20 vendors for the Magic Quadrant of which 16 were evaluated in the 2021 Gartner Critical [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/gartner-recognizes-cloudera-in-critical-capabilities-for-cloud-database-management-systems-for-operational-use-cases/\">Gartner® Recognizes Cloudera in Critical Capabilities for Cloud Database Management Systems for Operational Use Cases</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-02-08 14:13:32+00:00","OriginURL":"https://blog.cloudera.com/gartner-recognizes-cloudera-in-critical-capabilities-for-cloud-database-management-systems-for-operational-use-cases/","SourceName":"Cloudera"}},{"node":{"ID":1027,"Title":"Career stories: Dream big and work hard","Description":"Originally from South India, Mounika relocated from our parent company in Seattle, Washington to Sunnyvale, California, to help improve LinkedIn’s business platform as a backend engineer. She shares how her female engineering mentors here have been an invaluable support system amidst her transition, and how she’s paying it forward to the next generation of female technologists. My career journey started in my childhood — during my upbringing in Miryalaguda, South India, my parents, a civil engineer and a biology teacher, always taught me to dream big and work hard. From South India  [&#8230;]","PublishedAt":"2022-02-07 22:45:00+00:00","OriginURL":"https://engineering.linkedin.com/blog/2022/career-stories--dream-big-and-work-hard","SourceName":"Linkedin"}},{"node":{"ID":1081,"Title":"Mercari CTO, VP, and directors look back on 2021: Enhancing personalization, handling incidents across multiple groups, and promoting D&#038;I","Description":"<p>* This article is a translation of the Japanese article written on Dec. 25th, 2021. 2021 is nearly over. Looking back over the last year has shown that a lot has happened with the Mercari engineering organization; that also includes taking on some new challenges. Before getting to the meat of this article, let’s review [&hellip;]</p>\n","PublishedAt":"2022-02-07 18:04:19+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20211224-look-back-2021/","SourceName":"Mercari"}},{"node":{"ID":607,"Title":"A preview of CSS Container Queries","Description":"The still experimental feature of CSS container queries allows us to make child elements listen on the current layout state of their parent element via pure CSS declarations. With the recent implementation of Google Chrome's experimental flag for CSS container queries we're now able to play around with this upcoming feature and already get some insights into it.","PublishedAt":"2022-02-07 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2022-02-07-css-container-queries/","SourceName":"Trivago"}},{"node":{"ID":1232,"Title":"Blog: Spotlight on SIG Multicluster","Description":"<p><strong>Authors:</strong> Dewan Ahmed (Aiven) and Chris Short (AWS)</p>\n<h2 id=\"introduction\">Introduction</h2>\n<p><a href=\"https://github.com/kubernetes/community/tree/master/sig-multicluster\">SIG Multicluster</a> is the SIG focused on how Kubernetes concepts are expanded and used beyond the cluster boundary. Historically, Kubernetes resources only interacted within that boundary - KRU or Kubernetes Resource Universe (not an actual Kubernetes concept). Kubernetes clusters, even now, don't really know anything about themselves or, about other clusters. Absence of cluster identifiers is a case in point. With the growing adoption of multicloud and multicluster deployments, the work SIG Multicluster doing is gaining a lot of attention. In this blog, <a href=\"https://twitter.com/jeremyot\">Jeremy Olmsted-Thompson, Google</a> and <a href=\"https://twitter.com/ChrisShort\">Chris Short, AWS</a> discuss the interesting problems SIG Multicluster is solving and how you can get involved. Their initials <strong>JOT</strong> and <strong>CS</strong> will be used for brevity.</p>\n<h2 id=\"a-summary-of-their-conversation\">A summary of their conversation</h2>\n<p><strong>CS</strong>: How long has the SIG Multicluster existed and how was the SIG in its infancy? How long have you been with this SIG?</p>\n<p><strong>JOT</strong>: I've been around for almost two years in the SIG Multicluster. All I know about the infancy years is from the lore but even in the early days, it was always about solving this same problem. Early efforts have been things like <a href=\"https://github.com/kubernetes-sigs/kubefed\">KubeFed</a>. I think there are still folks using KubeFed but it's a smaller slice. Back then, I think people out there deploying large numbers of Kubernetes clusters were really not at a point where we had a ton of real concrete use cases. Projects like KubeFed and <a href=\"https://github.com/kubernetes-retired/cluster-registry\">Cluster Registry</a> were developed around that time and the need back then can be associated to these projects. The motivation for these projects were how do we solve the problems that we think people are <strong>going to have</strong>, when they start expanding to multiple clusters. Honestly, in some ways, it was trying to do too much at that time.</p>\n<p><strong>CS</strong>: How does KubeFed differ from the current state of SIG Multicluster? How does the <strong>lore</strong> differ from the <strong>now</strong>?</p>\n<p><strong>JOT</strong>: Yeah, it was like trying to get ahead of potential problems instead of addressing specific problems. I think towards the end of 2019, there was a slow down in SIG multicluster work and we kind of picked it back up with one of the most active recent projects that is the <a href=\"https://github.com/kubernetes-sigs/mcs-api\">SIG Multicluster services (MCS)</a>.</p>\n<p>Now this is the shift to solving real specific problems. For example,</p>\n<blockquote>\n<p>I've got workloads that are spread across multiple clusters and I need them to talk to each other.</p>\n</blockquote>\n<p>Okay, that's very straightforward and we know that we need to solve that. To get started, let's make sure that these projects can work together on a common API so you get the same kind of portability that you get with Kubernetes.</p>\n<p>There's a few implementations of the MCS API out there and more are being developed. But, we didn't build an implementation because depending on how you're deploying things there could be hundreds of implementations. As long as you only need the basic Multicluster service functionality, it'll just work on whatever background you want, whether it's Submariner, GKE, or a service mesh.</p>\n<p>My favorite example of &quot;then vs. now&quot; is cluster ID. A few years ago, there was an effort to define a cluster ID. A lot of really good thought went into this concept, for example, how do we make a cluster ID is unique across multiple clusters. How do we make this ID globally unique so it'll work in every contact? Let's say, there's an acquisition or merger of teams - does the cluster IDs still remain unique for those teams?</p>\n<p>With Multicluster services, we found the need for an actual cluster ID, and it has a very specific need. To address this specific need, we're no longer considering every single Kubernetes cluster out there rather the ClusterSets - a grouping of clusters that work together in some kind of bounds. That's a much narrower scope than considering clusters everywhere in time and space. It also leaves flexibility for an implementer to define the boundary (a ClusterSet) beyond which this cluster ID will no longer be unique.</p>\n<p><strong>CS</strong>: How do you feel about the current state of SIG Multicluster versus where you're hoping to be in future?</p>\n<p><strong>JOT</strong>: There's a few projects that are kind of getting started, for example, Work API. In the future, I think that some common practices around how do we deploy things across clusters are going to develop.</p>\n<blockquote>\n<p>If I have clusters deployed in a bunch of different regions; what's the best way to actually do that?</p>\n</blockquote>\n<p>The answer is, almost always, &quot;it depends&quot;. Why are you doing this? Is it because there's some kind of compliance that makes you care about locality? Is it performance? Is it availability?</p>\n<p>I think revisiting registry patterns will probably be a natural step after we have cluster IDs, that is, how do you actually associate these clusters together? Maybe you've got a distributed deployment that you run in your own data centers all over the world. I imagine that expanding the API in that space is going to be important as more multi cluster features develop. It really depends on what the community starts doing with these tools.</p>\n<p><strong>CS</strong>: In the early days of Kubernetes, we used to have a few large Kubernetes clusters and now we're dealing with many small Kubernetes clusters - even multiple clusters for our own dev environments. How has this shift from a few large clusters to many small clusters affected the SIG? Has it accelerated the work or make it challenging in any way?</p>\n<p><strong>JOT</strong>: I think that it has created a lot of ambiguity that needs solving. Originally, you'd have a dev cluster, a staging cluster, and a prod cluster. When the multi region thing came in, we started needing dev/staging/prod clusters, per region. And then, sometimes clusters really need more isolation due to compliance or some regulations issues. Thus, we're ending up with a lot of clusters. I think figuring out the right balance on how many clusters should you actually have is important. The power of Kubernetes is being able to deploy a lot of things managed by a single control plane. So, it's not like every single workload that gets deployed should be in its own cluster. But I think it's pretty clear that we can't put every single workload in a single cluster.</p>\n<p><strong>CS</strong>: What are some of your favorite things about this SIG?</p>\n<p><strong>JOT</strong>: The complexity of the problems, the people and the newness of the space. We don't have right answers and we have to figure this out. At the beginning, we couldn't even think about multi clusters because there was no way to connect services across clusters. Now there is and we're starting to go tackle those problems, I think that this is a really fun place to be in because I expect that the SIG is going to get a lot busier the next couple of years. It's a very collaborative group and we definitely would like more people to come join us, get involved, raise their problems and bring their ideas.</p>\n<p><strong>CS</strong>: What do you think keeps people in this group? How has the pandemic affected you?</p>\n<p><strong>JOT</strong>: I think it definitely got a little bit quieter during the pandemic. But for the most part; it's a very distributed group so whether you're calling in to our weekly meetings from a conference room or from your home, it doesn't make that huge of a difference. During the pandemic, a lot of people had time to focus on what's next for their scale and growth. I think that's what keeps people in the group - we have real problems that need to be solved which are very new in this space. And it's fun :)</p>\n<h2 id=\"wrap-up\">Wrap up</h2>\n<p><strong>CS</strong>: That's all we have for today. Thanks Jeremy for your time.</p>\n<p><strong>JOT</strong>: Thanks Chris. Everybody is welcome at our <a href=\"https://github.com/kubernetes/community/tree/master/sig-multicluster#meetings\">bi-weekly meetings</a>. We love as many people to come as possible and welcome all questions and all ideas. It's a new space and it'd be great to grow the community.</p>","PublishedAt":"2022-02-07 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/02/07/sig-multicluster-spotlight-2022/","SourceName":"Kubernetes"}},{"node":{"ID":1028,"Title":"Using Bayesian optimization for balancing metrics in recommendation systems","Description":"Co-authors: Yunbo Ouyang,Viral Gupta, Kinjal Basu, Cyrus Diciccio, Brendan Gavin, and Lin Guo. Most large-scale recommender systems like newsfeed ranking, people recommendations, job recommendations, etc., have multiple objectives that need to be simultaneously optimized. These objectives may include things like user engagement, diversity, novelty, freshness, or fairness. These objectives can sometimes be conflicting, so there is a need to balance them. Multi-objective optimization (MOO) is used for many products at LinkedIn (such as the homepage feed) to help balance different [&#8230;]","PublishedAt":"2022-02-04 21:00:00+00:00","OriginURL":"https://engineering.linkedin.com/blog/2022/using-bayesian-optimization-for-balancing-metrics-in-recommendat","SourceName":"Linkedin"}},{"node":{"ID":228,"Title":"HBase to CDP Operational Database Migration Overview","Description":"<p>An Overview of the HBase to CDP Operational Database (COD) Migration Process</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/hbase-to-cdp-operational-database-migration-overview/\">HBase to CDP Operational Database Migration Overview</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-02-04 16:43:44+00:00","OriginURL":"https://blog.cloudera.com/hbase-to-cdp-operational-database-migration-overview/","SourceName":"Cloudera"}},{"node":{"ID":1082,"Title":"Introduction of Search","Description":"<p>Author: Reggie Lai, Engineering manager of Search Feature &amp; Infra Search is one of the common and important functions of online services. It provides an efficient way for users to find what they are looking for. As an online marketplace, Mercari leverages and optimizes our search capability to delight our users in their item discovery [&hellip;]</p>\n","PublishedAt":"2022-02-04 14:20:40+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220204-introduction-of-search/","SourceName":"Mercari"}},{"node":{"ID":459,"Title":"Why it’s never too early to add product analytics to your app","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2022/02/MXP-Blog-NewFoundersNeedAnalyticsDay1-1920x1080-1-1024x576.png\" class=\"type:primaryImage\" /></figure>\n<p>When you’re in the early stages of launching a new app, you’ve already got an enormous number of challenges with little time and resources to get it all done. So it’s tempting to think the additional add-on of measuring user events in your code (i.e., implementing product analytics) is something that can wait until your</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/add-product-analytics-app-launch/\">Why it’s never too early to add product analytics to your app</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2022-02-03 20:20:53+00:00","OriginURL":"https://mixpanel.com/blog/add-product-analytics-app-launch/","SourceName":"Mixpanel"}},{"node":{"ID":1083,"Title":"Defense Against Novel Threats: Redesigning CI at Mercari","Description":"<p>This article is part of the Developer Productivity Engineering Camp blog series, brought to you by Michael Findlater (@michaelfindlater) from the CI/CD team. Introduction This article discusses the effort to build Mercari’s next generation CI system and some of our engineering solutions towards this effort. It also explores supply chain security as an increasingly important [&hellip;]</p>\n","PublishedAt":"2022-02-03 20:10:06+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220203-defense-against-novel-threats-redesigning-ci-at-mercari/","SourceName":"Mercari"}}]}},"pageContext":{"limit":30,"skip":4980,"numPages":193,"currentPage":167}},"staticQueryHashes":["3649515864"]}