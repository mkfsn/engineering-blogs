{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/81","result":{"data":{"allPost":{"edges":[{"node":{"ID":3368,"Title":"The Overflow #172: The path to async work","Description":"<p>The next-gen browser, energy from gravity, and image optimization</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/04/07/the-overflow-172-the-path-to-async-work/\">The Overflow #172: The path to async work</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-04-07 12:57:00+00:00","OriginURL":"https://stackoverflow.blog/2023/04/07/the-overflow-172-the-path-to-async-work/","SourceName":"Stack Overflow"}},{"node":{"ID":3366,"Title":"Building an API is half the battle (Ep. 552)","Description":"<p>Marco Palladino, CTO and cofounder of Kong, joins Ryan to talk about the evolution of API protocols over time and why building the API is only half the battle.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/04/07/building-an-api-is-half-the-battle-ep-552/\">Building an API is half the battle (Ep. 552)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-04-07 04:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/04/07/building-an-api-is-half-the-battle-ep-552/","SourceName":"Stack Overflow"}},{"node":{"ID":3364,"Title":"Our Learnings from the Early Days of Generative AI","Description":"It’s been an exciting few months at LinkedIn, as our engineering and product teams have been working hard to build some new and advanced AI-powered experiences for our members and customers. I have the opportunity to sit at such a unique vantage point where I get to see first hand the work that went into setting the technology foundations - from the technical resources, tools, engineering playgrounds and guidelines - to make it all possible. We recently shared some big moments around new AI-powered experiences, specifically leveraging generative AI in our products. We introduced [&#8230;]","PublishedAt":"2023-04-06 20:00:00+00:00","OriginURL":"https://engineering.linkedin.com/blog/2023/our-learnings-from-the-early-days-of-generative-ai","SourceName":"Linkedin"}},{"node":{"ID":3502,"Title":"Our Learnings from the Early Days of Generative AI","Description":"It’s been an exciting few months at LinkedIn, as our engineering and product teams have been working hard to build some new and advanced AI-powered experiences for our members and customers. I have the opportunity to sit at such a unique vantage point where I get to see first hand the work that went into setting the technology foundations - from the technical resources, tools, engineering playgrounds and guidelines - to make it all possible. We recently shared some big moments around new AI-powered experiences, specifically leveraging generative AI in our products. We introduced [&#8230;]","PublishedAt":"2023-04-06 20:00:00+00:00","OriginURL":"https://engineering.linkedin.com/content/engineering/en-us/blog/2023/our-learnings-from-the-early-days-of-generative-ai","SourceName":"Linkedin"}},{"node":{"ID":3362,"Title":"Building GitHub with Ruby and Rails","Description":"Since the beginning, GitHub.com has been a Ruby on Rails monolith. Today, the application is nearly two million lines of code and more than 1,000 engineers collaborate on it daily. We deploy as often as 20 times a day, and nearly every week one of those deploys is a Rails upgrade. Upgrading Rails weekly Every [&#8230;]","PublishedAt":"2023-04-06 18:05:43+00:00","OriginURL":"https://github.blog/2023-04-06-building-github-with-ruby-and-rails/","SourceName":"GitHub"}},{"node":{"ID":3361,"Title":"Build faster with Buck2: Our open source build system","Description":"<p>Buck2, our new open source, large-scale build system, is now available on GitHub. Buck2 is an extensible and performant build system written in Rust and designed to make your build experience faster and more efficient.  In our internal tests at Meta, we observed that Buck2 completed builds 2x as fast as Buck1. Buck2, Meta’s open [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2023/04/06/open-source/buck2-open-source-large-scale-build-system/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2023/04/06/open-source/buck2-open-source-large-scale-build-system/\">Build faster with Buck2: Our open source build system</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n","PublishedAt":"2023-04-06 16:00:52+00:00","OriginURL":"https://engineering.fb.com/2023/04/06/open-source/buck2-open-source-large-scale-build-system/","SourceName":"Facebook"}},{"node":{"ID":3360,"Title":"Protect your domain with Zone Holds","Description":"Protect against accidental additions of your domain, subdomain, or custom hostnames in other accounts with Zone Holds. Available by default for all enterprise customers","PublishedAt":"2023-04-06 16:00:00+00:00","OriginURL":"https://blog.cloudflare.com/protect-your-domain-with-zone-holds/","SourceName":"Cloudflare"}},{"node":{"ID":3557,"Title":"Protect your domain with Zone Holds","Description":"Protect against accidental additions of your domain, subdomain, or custom hostnames in other accounts with Zone Holds. Available by default for all enterprise customers","PublishedAt":"2023-04-06 16:00:00+00:00","OriginURL":"http://blog.cloudflare.com/protect-your-domain-with-zone-holds/","SourceName":"Cloudflare"}},{"node":{"ID":3365,"Title":"Adding free and open Elastic APM as part of your Elastic Observability deployment","Description":"<p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">In a recent post, we showed you </span><a href=\"https://www.elastic.co/blog/getting-started-with-free-and-open-elastic-observability\" target=\"_self\"><span style=\"font-size: 12pt;\">how to get started with the free and open tier of Elastic Observability</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">. Below, we'll walk through what you need to do to expand your deployment so you can start gathering metrics from application performance monitoring (APM) or \"tracing\" data in your observability cluster, for free.</span></p><h2>What is APM?</h2><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Application performance monitoring lets you see where your applications spend their time, what they are doing, what other applications or services they are calling, and what errors or exceptions they are encountering.</span></p><p><img alt=\"distributed-trace.png\" src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt4f2c901a48e81d2f/6090052af6a831100b5deb25/distributed-trace.png\" data-sys-asset-uid=\"blt4f2c901a48e81d2f\"/></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">In addition, APM also lets you see history and trends for key performance indicators, such as latency and throughput, as well as transaction and dependency information:</span></p><p><img alt=\"ruby-overview.png\" src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt0aee881105724120/609005407cc444103417ec49/ruby-overview.png\" data-sys-asset-uid=\"blt0aee881105724120\"/></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Whether you're setting up alerts for SLA breaches, trying to gauge the impact of your latest release, or deciding where to make the next improvement, APM can help with your root-cause analysis to help improve your users' experience and drive your mean time to resolution (MTTR) toward zero.</span></p><h2>Logical architecture</h2><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Elastic APM relies on the APM Integration inside Elastic Agent, which forwards application trace and metric data from applications instrumented with APM agents to an Elastic Observability cluster. Elastic APM supports multiple agent flavors:</span></p><ul><li><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Native Elastic APM Agents, available for </span><a href=\"https://www.elastic.co/guide/en/apm/agent/index.html\" target=\"_self\"><span style=\"font-size: 12pt;\">multiple languages</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">, including Java, .NET, Go, Ruby, Python, Node.js,&nbsp; PHP, and client-side JavaScript</span></li><li><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Code instrumented with </span><a href=\"https://www.elastic.co/guide/en/apm/get-started/current/open-telemetry-elastic.html\" target=\"_self\"><span style=\"font-size: 12pt;\">OpenTelemetry</span></a></li><li><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Code instrumented with </span><a href=\"https://www.elastic.co/guide/en/apm/get-started/current/opentracing.html\" target=\"_self\"><span style=\"font-size: 12pt;\">OpenTracing</span></a></li><li><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Code instrumented with </span><a href=\"https://www.elastic.co/guide/en/apm/server/current/jaeger.html\" target=\"_self\"><span style=\"font-size: 12pt;\">Jaeger</span></a></li></ul><p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt530d9030ca5005ff/642f342ab2ef0d11ece9fa69/blog-elastic-observability-instrumented-services.png\" height=\"auto\"/></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">In this blog, we'll provide a quick example of how to instrument code with the native Elastic APM Python agent, but the overall steps are similar for other languages.</span></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"></span></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Please note that there is a strong distinction between the </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong>Elastic APM Agent </strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">and the</span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong> Elastic Agent</strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">. These are very different components, as you can see in the diagram above, so it’s important not to confuse them.</span></p><h2>Install the Elastic Agent</h2><p><span style=\"font-size: 12pt;\">The first step is to install the Elastic Agent. You either need Fleet </span><a href=\"https://www.elastic.co/guide/en/fleet/current/add-a-fleet-server.html\" target=\"_self\"><span style=\"font-size: 12pt;\">installed first</span></a><span style=\"font-size: 12pt;\">, or you can install the Elastic Agent standalone. Install the Elastic Agent somewhere by </span><a href=\"https://www.elastic.co/guide/en/fleet/master/elastic-agent-installation.html\" target=\"_self\"><span style=\"font-size: 12pt;\">following this guide</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">. </span><span style=\"font-size: 12pt;\">This will give you an APM Integration endpoint you can hit. Note that this step is not necessary in Elastic Cloud, as we host the APM Integration for you. Check Elastic Agent is up by running:</span></p><pre class=\"prettyprint\"><span style='color:rgb(252, 194, 140);font-size: 12pt;'>curl</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'> </span><span style='color:rgb(252, 194, 140);font-size: 12pt;'>&lt;ELASTIC_AGENT_HOSTNAME&gt;</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>:8200</span></pre><h2>Instrumenting sample code with an Elastic APM agent</h2><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">The instructions for the various language agents differ based on the programming language, but at a high level they have a similar flow. First, you add the dependency for the agent in the language's native spec, then you configure the agent to let it know how to find the APM Integration.</span></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">You can try out any flavor you'd like, but I am going to walk through the Python instructions using this Python example that </span><a href=\"https://github.com/davidgeorgehope/PythonElasticAPMExample\" target=\"_self\"><span style=\"font-size: 12pt;\">I created</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">.</span></p><h3>Get the sample code (or use your own)</h3><p><span style=\"font-size: 12pt;\">To get started, I clone the GitHub repository then change to the directory:</span></p><pre><span style='color:rgb(255, 255, 255);font-size: 11.5pt;'>git </span><span style='color:rgb(252, 194, 140);font-size: 11.5pt;'>clone</span><span style='color:rgb(255, 255, 255);font-size: 11.5pt;'> </span><span style='color:rgb(255, 255, 170);font-size: 11.5pt;'>https://github.com/davidgeorgehope/PythonElasticAPMExample</span><br/><span style='color:rgb(255, 255, 255);font-size: 11.5pt;'>cd </span><span style='color:rgb(255, 255, 170);font-size: 11.5pt;'>PythonElasticAPMExample</span></pre><h3>How to add the dependency</h3><p><span style=\"font-size: 12pt;\">Adding the Elastic APM Dependency is simple — check the app.py file from</span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> </span><a href=\"https://github.com/davidgeorgehope/PythonElasticAPMExample/blob/main/app.py\" target=\"_self\"><span style=\"font-size: 12pt;\">the github repo</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> </span><span style=\"font-size: 12pt;\">and you will notice the following lines of code.</span></p><p><pre class=\"prettyprint\"><span style='color:rgb(255, 255, 255);font-size: 12pt;'>import elasticapm</span><br/><span style='color:rgb(252, 194, 140);font-size: 12pt;'>from</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'> elasticapm import</span><span style='color:rgb(255, 255, 170);font-size: 12pt;'> Client</span><br/><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>app = Flask(__name__)</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>app.config[</span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"ELASTIC_APM\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>] = {&nbsp; &nbsp; </span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"SERVICE_NAME\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>: os.environ.</span><span style='color:rgb(255, 255, 170);font-size: 12pt;'>get</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>(</span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"APM_SERVICE_NAME\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>, </span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"flask-app\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>),&nbsp; &nbsp; </span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"SECRET_TOKEN\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>: os.environ.</span><span style='color:rgb(255, 255, 170);font-size: 12pt;'>get</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>(</span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"APM_SECRET_TOKEN\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>, </span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>),&nbsp; &nbsp; </span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"SERVER_URL\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>: os.environ.</span><span style='color:rgb(255, 255, 170);font-size: 12pt;'>get</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>(</span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"APM_SERVER_URL\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>, </span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"http://localhost:8200\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>),}</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>elasticapm.instrumentation.control.instrument()</span><br/><span style='color:rgb(255, 255, 170);font-size: 12pt;'>client </span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>= Client(app.config[</span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"ELASTIC_APM\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>])</span></pre></p><p><span style=\"font-size: 12pt;\">The Python library for Flask is capable of auto detecting transactions, but you can also start transactions in code as per the following, as we have done in this example:</span></p><p><pre><span style='color:rgb(255, 255, 255);font-size: 12pt;'>@app.route(</span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"/\"</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>)</span><br/><span style='color:rgb(252, 194, 140);font-size: 12pt;'>def</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'> </span><span style='color:rgb(255, 255, 170);font-size: 12pt;'>hello</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>():</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; client.begin_transaction(</span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>'demo-transaction'</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>)</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; client.end_transaction(</span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>'demo-transaction'</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>, </span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>'success'</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>)</span></pre></p><h3>Configure the agent</h3><p><span style=\"font-size: 12pt;\">The agents need to send application trace data to the APM Integration, and to do this it has to be reachable. I configured the Elastic Agent to listen on my local host's IP, so anything in my subnet can send data to it. As you can see from the code below, we use docker-compose.yml to pass in the config via environment variables. Please edit these variables for your own Elastic installation.</span></p><p><pre class=\"prettyprint\"><span style='color:rgb(136, 136, 136);font-size: 12pt;'># docker-compose.yml</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>version: </span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"3.9\"</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>services:</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; flask_app:</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; build: .</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; ports:</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; &nbsp; - </span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"5001:5001\"</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; environment:</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; &nbsp; - </span><span style='color:rgb(255, 255, 170);font-size: 12pt;'>PORT</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>=5001</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; &nbsp; - </span><span style='color:rgb(255, 255, 170);font-size: 12pt;'>APM_SERVICE_NAME</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>=flask-app</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; &nbsp; - </span><span style='color:rgb(255, 255, 170);font-size: 12pt;'>APM_SECRET_TOKEN</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>=your_secret_token</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; &nbsp; &nbsp; - </span><span style='color:rgb(255, 255, 170);font-size: 12pt;'>APM_SERVER_URL</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'>=http://host.docker.internal:8200</span></pre></p><p><span style=\"font-size: 12pt;\">Some commentary on the above:</span></p><ul><li><span style=\"font-size: 12pt;\"><strong>service_name:</strong></span><span style=\"font-size: 12pt;\"> If you leave this out it will just default to the application's name, but you can override that here.</span></li><li><span style=\"font-size: 12pt;\"><strong>secret_token:</strong></span><span style=\"font-size: 12pt;\"> </span><a href=\"https://www.elastic.co/guide/en/apm/server/current/secret-token.html\" target=\"_self\"><span style=\"font-size: 12pt;\">Secret tokens</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> </span><span style=\"font-size: 12pt;\">allow you to authorize requests to the APM Server, but they require that the APM Server is set up with SSL/TLS and that a secret token has been set up. We're not using HTTPS between the agents and the APM Server, so we'll comment this one out.</span></li><li><span style=\"font-size: 12pt;\"><strong>server_url:</strong></span><span style=\"font-size: 12pt;\"> This is how the agent can reach the APM Integration inside Elastic Agent. Replace this with the name or IP of your host running Elastic Agent.</span></li></ul><p><span style=\"font-size: 12pt;\">Now that the Elastic APM side of the configuration is done, we simply follow the steps from the</span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> </span><a href=\"https://github.com/davidgeorgehope/PythonElasticAPMExample/blob/main/README.md\" target=\"_self\"><span style=\"font-size: 12pt;\">README</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> </span><span style=\"font-size: 12pt;\">to start up.</span></p><p><pre class=\"prettyprint\"><span style='color:rgb(255, 255, 255);font-size: 11.5pt;'>docker-compose up --build -d</span></pre></p><p><span style=\"font-size: 12pt;\">The build step will take several minutes.</span></p><p><span style=\"font-size: 12pt;\">You can navigate to the running sample application by visiting</span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> http://localhost:5001. </span><span style=\"font-size: 12pt;\">There's not a lot to the sample, but it does generate some APM data. To generate a bit of a load, you can reload them a few times or run a quick little script:</span></p><p><pre class=\"prettyprint\"><span style='color:rgb(252, 155, 155);font-size: 12pt;'>#!/bin/bash</span><br/><span style='color:rgb(136, 136, 136);font-size: 12pt;'># load_test.sh</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>url=</span><span style='color:rgb(162, 252, 162);font-size: 12pt;'>\"http://localhost:5001\"</span><br/><span style='color:rgb(252, 194, 140);font-size: 12pt;'>for</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'> i </span><span style='color:rgb(252, 194, 140);font-size: 12pt;'>in</span><span style='color:rgb(255, 255, 255);font-size: 12pt;'> {1..1000}</span><br/><span style='color:rgb(252, 194, 140);font-size: 12pt;'>do</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; curl -s -o /dev/null </span><span style='color:rgb(173, 229, 252);font-size: 12pt;'>$url</span><br/><span style='color:rgb(255, 255, 255);font-size: 12pt;'>&nbsp; sleep 1</span><br/><span style='color:rgb(252, 194, 140);font-size: 12pt;'>done</span></pre></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">This will just reload the pages every second.</span></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Back in Kibana, navigate back to the APM app (hamburger icon, then select </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong>APM</strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">) and you should see our new </span><span style=\"color: rgb(232, 62, 140);font-size: 10.5pt;\">flask-app</span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> service (I let mine run so it shows a bit more history):</span></p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blta80c86e303ef20b3/642f3644aa312f114ba7db97/blog-elastic-observability-services.png\" height=\"auto\"/><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">The Service Overview page provides an at-a-glance summary of the health of a service in one place. If you’re a developer or an SRE, this is the page that will help you answer questions like:&nbsp;</span></p><ul><li><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">How did a new deployment impact performance?</span></li><li><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">What are the top impacted transactions?</span></li><li><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">How does performance correlate with underlying infrastructure?</span></li></ul><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">This view provides a list of all of the applications that have sent application trace data to Elastic APM in the specified period of time (in this case, the last 15 minutes). There are also sparklines showing mini graphs of latency, throughput, and error rate. Clicking on </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong>flask-app</strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> takes us to the </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong>service overview</strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> page, which shows the various transactions within the service (recall that my script is hitting the </span><span style=\"color: rgb(232, 62, 140);font-size: 10.5pt;\">/</span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> endpoint, as seen in the </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong>Transactions</strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> section). We get bigger graphs for </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong>Latency</strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">, </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong>Throughput</strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">, </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong>Errors</strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">, and </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"><strong>Error Rates</strong></span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">.</span></p><p><em></em></p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/bltafb9661f0d131b68/642f36788f121010dc4c9c6e/blog-elastic-observability-flask-app.png\" height=\"auto\"/><p></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">When you're instrumenting real applications, under real load, you'll see a lot more connectivity (and errors!)</span><br/></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Clicking on a transaction in the transaction view, in this case, our sample app's </span><span style=\"color: rgb(232, 62, 140);font-size: 10.5pt;\">demo-transaction </span><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">transaction, we can see exactly what operations were called:</span></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"></span></p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt8431598b808dfd3c/642f3696c3a87d1213a8757d/blog-elastic-observability-flask-app-demo-transaction.png\" height=\"auto\"/><p></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">This includes detailed information about calls to external services, such as database queries:</span></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"></span></p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/bltf1121f3017de2dc3/642f36a7b2ef0d11ece9fa79/blog-elastic-observability-span-details.png\" height=\"auto\"/><h2>What's next?</h2><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">Now that you've got your Elastic Observability cluster up and running and collecting out-of-the-box application trace data, explore the public APIs for the languages that your applications are using, which allow you to take your APM data to the next level. The APIs allow you to add custom metadata, define business transactions, create custom spans, and more. You can find the public API specs for the various APM agents (such as </span><a href=\"https://www.elastic.co/guide/en/apm/agent/java/current/public-api.html\" target=\"_self\"><span style=\"font-size: 12pt;\">Java</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">, </span><a href=\"https://www.elastic.co/guide/en/apm/agent/ruby/current/api.html\" target=\"_self\"><span style=\"font-size: 12pt;\">Ruby</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">, </span><a href=\"https://www.elastic.co/guide/en/apm/agent/python/current/index.html\" target=\"_self\"><span style=\"font-size: 12pt;\">Python</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">, and more) on the APM agent </span><a href=\"https://www.elastic.co/guide/en/apm/agent/index.html\" target=\"_self\"><span style=\"font-size: 12pt;\">documentation pages</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">.&nbsp;</span></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">If you'd like to learn more about Elastic APM, check out </span><a href=\"https://www.elastic.co/webinars/intro-to-elastic-apm-in-the-shift-to-cloud-native\" target=\"_self\"><span style=\"font-size: 12pt;\">our webinar on Elastic APM in the shift to cloud native</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> to see other ways that Elastic APM can help you in your ecosystem.</span></p><p><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\">If you decide that you'd rather have us host your observability cluster, you can sign up for a free trial of the </span><a href=\"https://www.elastic.co/cloud/\" target=\"_self\"><span style=\"font-size: 12pt;\">Elasticsearch Service on Elastic Cloud</span></a><span style=\"color: rgb(52, 55, 65);font-size: 12pt;\"> and change your agents to point to your new cluster.</span></p><p><em>Originally published May 5, 2021; updated April 6, 2023.</em></p>","PublishedAt":"2023-04-06 14:00:00+00:00","OriginURL":"https://www.elastic.co/blog/adding-free-and-open-elastic-apm-as-part-of-your-elastic-observability-deployment","SourceName":"Elastic"}},{"node":{"ID":3363,"Title":"Timing out synchronous functions with regex","Description":"The Snyk Container team had this challenge: Given a tag, parse its parts to be able to compare it to other similar tags. It was a fun problem to solve, and we'd love to share how we got to our final solution involving timing out synchronous functions with regex!","PublishedAt":"2023-04-06 05:00:00+00:00","OriginURL":"https://snyk.io/blog/timing-out-synchronous-functions-with-regex","SourceName":"Snyk"}},{"node":{"ID":3354,"Title":"Blog: Keeping Kubernetes Secure with Updated Go Versions","Description":"<p><strong>Author</strong>: <a href=\"https://github.com/liggitt\">Jordan Liggitt</a> (Google)</p>\n<h3 id=\"the-problem\">The problem</h3>\n<p>Since v1.19 (released in 2020), the Kubernetes project provides 12-14 months of patch releases for each minor version.\nThis enables users to qualify and adopt Kubernetes versions in an annual upgrade cycle and receive security fixes for a year.</p>\n<p>The <a href=\"https://github.com/golang/go/wiki/Go-Release-Cycle#release-maintenance\">Go project</a> releases new minor versions twice a year,\nand provides security fixes for the last two minor versions, resulting in about a year of support for each Go version.\nEven though each new Kubernetes minor version is built with a supported Go version when it is first released,\nthat Go version falls out of support before the Kubernetes minor version does,\nand the lengthened Kubernetes patch support since v1.19 only widened that gap.</p>\n<p>At the time this was written, just over half of all <a href=\"https://go.dev/doc/devel/release\">Go patch releases</a> (88/171) have contained fixes for issues with possible security implications.\nEven though many of these issues were not relevant to Kubernetes, some were, so it remained important to use supported Go versions that received those fixes.</p>\n<p>An obvious solution would be to simply update Kubernetes release branches to new minor versions of Go.\nHowever, Kubernetes avoids <a href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/sig-release/cherry-picks.md#what-kind-of-prs-are-good-for-cherry-picks\">destabilizing changes in patch releases</a>,\nand historically, this prevented updating existing release branches to new minor versions of Go, due to changes that were considered prohibitively complex, risky, or breaking to include in a patch release.\nExamples include:</p>\n<ul>\n<li>Go 1.6: enabling http/2 by default</li>\n<li>Go 1.14: EINTR handling issues</li>\n<li>Go 1.17: dropping x509 CN support, ParseIP changes</li>\n<li>Go 1.18: disabling x509 SHA-1 certificate support by default</li>\n<li>Go 1.19: dropping current-dir LookPath behavior</li>\n</ul>\n<p>Some of these changes could be easily mitigated in Kubernetes code,\nsome could only be opted out of via a user-specified <code>GODEBUG</code> envvar,\nand others required invasive code changes or could not be avoided at all.\nBecause of this inconsistency, Kubernetes release branches have typically remained on a single Go minor version,\nand risked being unable to pick up relevant Go security fixes for the last several months of each Kubernetes minor version's support lifetime.</p>\n<p>When a relevant Go security fix was only available in newer Kubernetes minor versions,\nusers would have to upgrade away from older Kubernetes minor versions before their 12-14 month support period ended, just to pick up those fixes.\nIf a user was not prepared to do that upgrade, it could result in vulnerable Kubernetes clusters.\nEven if a user could accommodate the unexpected upgrade, the uncertainty made Kubernetes' annual support less reliable for planning.</p>\n<h3 id=\"the-solution\">The solution</h3>\n<p>We're happy to announce that the gap between supported Kubernetes versions and supported Go versions has been resolved as of January 2023.</p>\n<p>We worked closely with the Go team over the past year to address the difficulties adopting new Go versions.\nThis prompted a <a href=\"https://github.com/golang/go/discussions/55090\">discussion</a>, <a href=\"https://github.com/golang/go/issues/56986\">proposal</a>,\n<a href=\"https://www.youtube.com/watch?v=v24wrd3RwGo\">talk at GopherCon</a>, and a <a href=\"https://go.dev/design/56986-godebug\">design</a> for improving backward compatibility in Go,\nensuring new Go versions can maintain compatible runtime behavior with previous Go versions for a minimum of two years (four Go releases).\nThis allows projects like Kubernetes to update release branches to supported Go versions without exposing users to behavior changes.</p>\n<p>The proposed improvements are on track to be <a href=\"https://tip.golang.org/doc/godebug\">included in Go 1.21</a>, and the Go team already delivered targeted compatibility improvements in a Go 1.19 patch release in late 2022.\nThose changes enabled Kubernetes 1.23+ to update to Go 1.19 in January of 2023, while avoiding any user-facing configuration or behavior changes.\nAll supported Kubernetes release branches now use supported Go versions, and can pick up new Go patch releases with available security fixes.</p>\n<p>Going forward, Kubernetes maintainers remain committed to making Kubernetes patch releases as safe and non-disruptive as possible,\nso there are several requirements a new Go minor version must meet before existing Kubernetes release branches will update to use it:</p>\n<ol>\n<li>The new Go version must be available for at least 3 months.\nThis gives time for adoption by the Go community, and for reports of issues or regressions.</li>\n<li>The new Go version must be used in a new Kubernetes minor release for at least 1 month.\nThis ensures all Kubernetes release-blocking tests pass on the new Go version,\nand gives time for feedback from the Kubernetes community on release candidates and early adoption of the new minor release.</li>\n<li>There must be no regressions from the previous Go version known to impact Kubernetes.</li>\n<li>Runtime behavior must be preserved by default, without requiring any action by Kubernetes users / administrators.</li>\n<li>Kubernetes libraries like <code>k8s.io/client-go</code> must remain compatible with the original Go version used for each minor release,\nso consumers won't <em>have</em> to update Go versions to pick up a library patch release (though they are encouraged to build with supported Go versions,\nwhich is made even easier with the <a href=\"https://go.dev/design/56986-godebug\">compatibility improvements</a> planned in Go 1.21).</li>\n</ol>\n<p>The goal of all of this work is to unobtrusively make Kubernetes patch releases safer and more secure,\nand to make Kubernetes minor versions safe to use for the entire duration of their support lifetime.</p>\n<p>Many thanks to the Go team, especially Russ Cox, for helping drive these improvements in ways that will benefit all Go users, not just Kubernetes.</p>","PublishedAt":"2023-04-06 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/04/06/keeping-kubernetes-secure-with-updated-go-versions/","SourceName":"Kubernetes"}},{"node":{"ID":3353,"Title":"HashiCorp Consul Service (HCS) on Azure End of Life","Description":"HCS on Azure has been deprecated. HCP Consul on Azure is the preferred way to run your HashiCorp Consul clusters on Microsoft Azure.","PublishedAt":"2023-04-05 19:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/hashicorp-consul-service-hcs-on-azure-end-of-life","SourceName":"HashiCorp"}},{"node":{"ID":3349,"Title":"GitHub Availability Report: March 2023","Description":"In March, we experienced six incidents that resulted in degraded performance across GitHub services. This report also sheds light into a February incident that resulted in degraded performance for GitHub Codespaces.","PublishedAt":"2023-04-05 16:00:48+00:00","OriginURL":"https://github.blog/2023-04-05-github-availability-report-march-2023/","SourceName":"GitHub"}},{"node":{"ID":3350,"Title":"Announcing the new Terraform Associate 003 Certification exam","Description":"Learn how HashiCorp’s updated Terraform Associate certification impacts your current and future Terraform Associate credentials.","PublishedAt":"2023-04-05 16:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/announcing-the-new-terraform-associate-003-certification-exam","SourceName":"HashiCorp"}},{"node":{"ID":3351,"Title":"Debugging Kibana Dashboards","Description":"<p>Kibana dashboards allow you to build visualizations quickly and easily on top of data indexed within Elasticsearch. However, the UI abstraction over Elasticsearch can make it tricky to diagnose performance issues in individual panels — especially for developers used to diving into the detail of implementations using debuggers and other profiling tools.</p>\n<p>This blog introduces four approaches to help investigate and diagnose performance issues with Kibana dashboards. Specifically, we'll cover the use of Elastic application performance monitoring (APM), debugging via Chrome Developer Tools and profiling, inspecting individual panels via the Inspector, and the Elasticsearch Slow Log to identify the cause of dashboard slowness.</p>\n<h2 id=\"apm\">APM</h2>\n<p>When faced with a slow dashboard, ruling out slow performance caused by the overall dashboard loading in Kibana itself is recommended. It may be a particular service or plugin that is causing the underlying issue. This can be achieved either using the <a href=\"https://github.com/elastic/kibana/blob/main/dev_docs/tutorials/debugging.mdx\">Chrome DevTools debugging</a> or using Elastic APM Node.js Agent, which is built into Kibana for debugging purposes. Follow the steps to set up a locally running Kibana and APM configuration using the <a href=\"https://www.elastic.co/guide/en/kibana/current/kibana-debugging.html#kibana-debugging\">Debugging Kibana section within the Developer guide</a>.\n&nbsp;\nFollowing these steps will set up a locally running Elasticsearch instance and APM server using Docker:</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blta9212a064b903f0e/642c6e360c498f10e8dbcb20/running-docker-images.png\" alt=\"Local APM and Elasticsearch Instances\" /></p>\n<p>To ensure Kibana starts successfully, please ensure you check out branches from each repo that hold compatible Elasticsearch and Kibana versions, and that <code>kibana.dev.yml</code> configuration points to your locally running Elasticsearch cluster and APM server. Sample user credentials for Kibana including <code>admin</code> can be used to log in as outlined in the <a href=\"https://github.com/elastic/apm-integration-testing/blob/171f6ab86ec1ae88591658e315d332db73d3cc3f/README.md?plain=1#L50\">@elastic/apm-integration-testing readme</a>. Using the <code>yarn start</code> command on the Kibana repo will give you a running Kibana instance. \n&nbsp;\nIncluding the non-performance dashboard can be achieved by exporting the dashboard from the Saved Objects screen in Kibana and importing it into the locally running instance via the same screen. Be sure to export dependent objects so individual controls and indices are exported with the dashboard:</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/bltdf7a0a83046bc293/642d29c266181410a5732903/kibana-saved-objects-export-with-related-objects.png\" alt=\"kibana saved objects export with related onjects\" /></p>\n<p>&nbsp;</p>\n<p>Accessing your dashboard locally will allow the APM Node.js Agent to capture any errors and traces in the dashboard navigation. You will see the <code>/dashboard</code> endpoint triggered to access your dashboard. APM will capture these requests in the <strong>kibana-frontend</strong> service.</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/bltcfac9747f4d462c7/642d2a237ae71310d19e1ec4/kibana-debugging-dashboard-trace.png\" alt=\"kibana debugging dashboard trace\" /></p>\n<p>&nbsp;</p>\n<p>Selecting this trace will present you with key trace information for your dashboard. A trace breakdown, as shown in the below screenshot, enabled you to scrutinize the execution time of your dashboard execution.</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt8292f00d706859fa/642d2a7d0afb1c108e793398/kibana-frontend-dashboards-trace.png\" alt=\"kibana frontend dashboards trace\" /></p>\n<p>The breakdown will show the loading time and percentage proportion of the total execution time for JavaScript file loading, such as Kibana plugins, or response times for key Kibana API calls. This makes the APM information useful for identifying plugins slowing your dashboard down, particularly if you are making use of custom or community-developed plugins. It can also help find delays in key calls such as Kibana security. Or, via runtime fields on the APM indices, it can help answer usage questions such as which space is most used or which dashboard has the most page loads.</p>\n<p>A key limitation of using APM against Kibana is that captured traces only cover key calls for a given logical unit at a <code>page</code> level. From the <em>Metadata</em> tab, the label information shows that these traces are captured at a dashboard level and doesn't give information for each individual visualization as shown in the metadata for the trace depicted below. </p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt3fe6cb16179461f7/642d2add214c3211e18de672/kibana-dashboards-trace-metadata.png\" alt=\"![Kibana APM Trace Metadata](./images/kibana-dashboards-trace-metadata.png)\" /></p>\n<p>&nbsp;</p>\n<h2 id=\"chromedevelopertools\">Chrome Developer Tools</h2>\n<p>With a locally running version of Kibana, you can also step through the code using Chrome Developer Tools. This is more useful in tracing errors or unexpected behavior in Kibana. After following the same local setup steps as used with Elastic APM, you need to start Kibana using Node inspect support, as per the <a href=\"https://github.com/elastic/kibana/blob/main/dev_docs/tutorials/debugging.mdx#debugging-using-chrome-devtools\">Kibana tutorial documentation</a>:</p>\n<pre><code class=\"console language-console\">node --inspect-brk scripts/kibana\n</code></pre>\n<p>Navigating to <code>chrome://inspect</code> within the Chrome browser will allow you connect the native Node.js debugging tools to your running Kibana process:</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/bltb8d2b4de2c2e2ca8/642d2bc6c6373410f683f940/chome-inspect.png\" alt=\"![Chrome Inspect](./images/chome-inspect.png)\" /></p>\n<p>Inspecting the Kibana process opens the DevTools, giving access to all the best loved developer tools such as the debugger. Setting breakpoints within the <code>bulk_resolve</code> POST method found in the APM traces allows you to capture the dashboard object. This call can also be examined using the Chrome DevTools <em>Network</em> tab. </p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/bltbab62542ac664b9f/642d2c0b7ae71310d19e1ed9/kibana-node-debugging.png\" alt=\"![Chrome Inspect](./images/kibana-node-debugging.png)\" /></p>\n<p>Although the <code>VEGA_DEBUG.view</code> global variable gives us the ability to inspect the state of any Vega charts via Chrome Developer tools as outlined in the <a href=\"https://www.elastic.co/guide/en/kibana/current/vega.html#vega-browser-debugging-console\">documentation</a>, we need to be able to see the detail of other visualizations, too. The above screenshot shows the details of each panel in the dashboard, including the unique ID and type of the control. This recursive call will also allow you to see the resulting object for individual panels, such as this map control where we see the JSON objects for distinct layers:</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt543ee43321a3216f/642d2c588f121010dc4c955b/kibana-node-debug-map.png\" alt=\"![Chrome Inspect](./images/kibana-node-debug-map.png)\" /></p>\n<p>&nbsp;</p>\n<h2 id=\"identifyslowqueriesviathesearchslowlog\">Identify slow queries via the Search Slow Log</h2>\n<p>Expensive queries from dashboards can have a negative impact on the Elasticsearch server. Elasticsearch provides the search slow log to capture slow search queries into a dedicated log file. Locating slow searches to the originating visualization could help identify which particular control in your dashboard is impacting Elasticsearch performance. </p>\n<p>Queries logged to the slow log are determined per index by thresholds set for the query and fetch phases. Check out this <a href=\"https://www.elastic.co/blog/understanding-query-then-fetch-vs-dfs-query-then-fetch\">useful blog</a> and the <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html#search-type\"><code>search_type</code></a> option in the Elasticsearch documentation for details on the default Query Then Fetch algorithm. </p>\n<p>Thresholds are set for query and fetch phases at four different log levels: <code>warn</code>, <code>info</code>, <code>debug</code> and <code>trace</code>. Thresholds are disabled using a value of -1 and can be changed at an index level in the Developer Console using the <code>_settings</code> API endpoint:</p>\n<pre><code class=\"console language-console\">PUT /kibana_sample_data_logs/_settings\n{\n  \"index.search.slowlog.threshold.query.warn\": \"10s\",\n  \"index.search.slowlog.threshold.query.info\": \"5s\",\n  \"index.search.slowlog.threshold.query.debug\": \"2s\",\n  \"index.search.slowlog.threshold.query.trace\": \"500ms\",\n  \"index.search.slowlog.threshold.fetch.warn\": \"1s\",\n  \"index.search.slowlog.threshold.fetch.info\": \"800ms\",\n  \"index.search.slowlog.threshold.fetch.debug\": \"500ms\",\n  \"index.search.slowlog.threshold.fetch.trace\": \"200ms\"\n}\n</code></pre>\n<p>Once the thresholds have been configured, the logs for the configured levels will be sent to the slow log location. The search log location depends on whether you are using an on-prem Elasticsearch installation or Elastic Cloud. For on-prem installs, the slow log is located in the logs folder, which defaults to <code>/var/log/elasticsearch/</code> unless you have overridden the logs location within your <code>elasticsearch.yml</code> configuration. Elastic Cloud deployments require logs and metrics to be enabled on your cluster by following the <a href=\"https://www.elastic.co/guide/en/cloud/current/ec-enable-logging-and-monitoring.html#ec-enable-logging-and-monitoring-steps\">Enable logging and monitoring steps within the documentation</a>. Logs and metrics will be sent to the specified cluster.</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt62d8c997f68e18f4/642d2cf737ecbf10cadce167/elastic-cloud-console-logs-and-metrics-select-deployment.png\" alt=\"![Elastic Cloud Ship Logs and Metrics](./images/elastic-cloud-console-logs-and-metrics-select-deployment.png)\" /></p>\n<p>Irrespective of where your logs live, the slow log will show messages similar to the following: </p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blte4220ef58cd65ae1/642d2d10884f2510c389391f/kibana-slowlog-highlight.png\" alt=\"![Elasticsearch Slow Log in Kibana](./images/kibana-slowlog-highlight.png)\" /></p>\n<p>Looking at messages in <em>Logs</em>, it's difficult to tie this source message back to an individual dashboard control. Each numbered item corresponds to the following entity. Element 1 contains the unique ID for the Kibana dashboard. Of more interest is segment 2 containing colon-separated information about the specific visualization:</p>\n<p><code>agg_based:gauge:69a34b00-9ee8-11e7-8711-e7a007dcef99</code></p>\n<p>This example has three key pieces of information:</p>\n<ol>\n<li>Visualization type, in this case, <code>Lens</code></li>\n<li>The type of control, which here is the <code>Legacy Metric</code> control</li>\n<li>The unique ID of the visualization that has generated the slow query</li>\n</ol>\n<p>As of Elastic Stack 8.x, these IDs are unique to the global space, unlike prior versions where they were unique within the Kibana space they reside. Further details are given in the <a href=\"https://www.elastic.co/guide/en/kibana/current/saved-object-ids.html\">documentation</a>. </p>\n<p>A more human-friendly format can be obtained by cross-referencing the visualization ID from <code>elasticsearch.slowlog</code> with <code>kibana.log</code>. The <code>kibana.log</code> message for the above gauge control shows the <code>description</code> highlighted in blue:</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/bltb12b7091c70b9ce5/642d2d6ecfb44c109a1d760e/kibana-logs-highlight.png\" alt=\"![Elasticsearch Kibana Log in Kibana](./images/kibana-logs-highlight.png)\" /></p>\n<p>The <code>description</code> can be matched against the title in the dashboard itself if the title is visible, or in the Saved Objects screen:</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt9c9eac6e2bb8e6dc/642d2da2c6373410f683f944/kibana-saved-objects-screen.png\" alt=\"![Elasticsearch Saved Objects Kibana](./images/kibana-saved-objects-screen.png)\" /></p>\n<p>The <em>Inspect</em> panel within Saved Objects can also be used to cross-reference the ID:</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt3859e664d1c4e2b4/642d2dcd7ae71310d19e1ee4/kibana-inspect-action.png\" alt=\"![Kibana Saved Objects Inspect Action](./images/kibana-inspect-action.png)\" /></p>\n<p>&nbsp;</p>\n<h2 id=\"inspectorandsearchprofiler\">Inspector and Search Profiler</h2>\n<p>Once the offending visualization has been identified, the <em>Inspector</em> will help you access the query. Within edit mode on a dashboard, the submenu for each control will have this option: </p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blt92a4505ed4aa2958/642d2e24200d461080821aea/kibana-inspect-submenu.png\" alt=\"![Kibana](./images/kibana-inspect-submenu.png)\" /></p>\n<p>Selecting the <em>Request</em> view initially shows <a href=\"https://www.elastic.co/guide/en/observability/current/inspect.html#inspect-flyout\">key statistics</a> for the underlying query, including the query time, the number of hits returned and the number of documents matching the query. Hits returned versus hits match is not the same, not just because by default Elasticsearch queries return 10 hits, but also because many aggregations will not return documents for inclusion in their views as we will be interested in visualizing the aggregation results.</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blta646c9f56fc22141/642d2e3eaa312f114ba7d3c9/kibana-inspect-panel.png\" alt=\"![Kibana](./images/kibana-inspect-panel.png)\" /></p>\n<p>The Request tab shows the query executed by this particular control. There are also options to copy the query to run in the Developer Console, or use the <a href=\"https://www.elastic.co/guide/en/kibana/current/xpack-profiler.html\">Search Profiler</a> to identify slow stages of both the search and aggregation profiles of your query.</p>\n<p><img src=\"https://static-www.elastic.co/v3/assets/bltefdd0b53724fa2ce/blta4de9dc02d77d594/642d2e5c66181410a573290b/search-profiler.png\" alt=\"![Kibana](./images/search-profiler.png)\" /></p>\n<p>The capabilities of each Inspect panel depend on the type of visualization used to give appropriate debugging options. The <a href=\"https://www.elastic.co/guide/en/kibana/current/maps-troubleshooting.html#_inspect_elasticsearch_requests\">Inspect panel for maps</a> allows you to see queries for each layer. Vega charts <a href=\"https://www.elastic.co/guide/en/kibana/current/vega.html#vega-debugging\">show the values of datasets and key signals for debugging</a>. These are useful for a birds-eye glance at the values within the chart. For more advanced debugging of Vega charts using Google Chrome Developer Tools, inspect the view object <a href=\"https://www.elastic.co/guide/en/kibana/current/vega.html#vega-browser-debugging-console\">as per this guide</a>.</p>\n<p>&nbsp;</p>\n<h1 id=\"summary\">Summary</h1>\n<p>Elastic APM, the Kibana Inspector and Search Profiler, and the Elasticsearch Slow Log are powerful tools in diagnosing dashboard performance issues. After using these techniques and optimizing your queries, if you are still struggling with poor performance, try configuring Kibana to load dashboard panels as they become visible as presented in the <a href=\"https://www.elastic.co/guide/en/kibana/8.6/dashboard-troubleshooting.html\">Improve dashboard loading time documentation</a>.</p>\n<p>Happy debugging!</p>\n<h2 id=\"resources\">Resources</h2>\n<ol>\n<li><a href=\"https://www.elastic.co/guide/en/kibana/current/kibana-debugging.html#_instrumenting_with_elastic_apm\">Instrumenting Kibana with Elastic APM</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/kibana/8.6/xpack-profiler.html\">Profile queries and aggregations</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/kibana/current/vega.html#vega-debugging\">Vega Debugging</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/kibana/current/maps-troubleshooting.html#_inspect_elasticsearch_requests\">Maps Troubleshooting</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/kibana/current/kibana-troubleshooting-trace-query.html\">Trace Elasticsearch query to the origin in Kibana</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-slowlog.html#search-slow-log\">Elasticsearch Slow Log</a></li>\n<li><a href=\"https://www.elastic.co/blog/understanding-query-then-fetch-vs-dfs-query-then-fetch\">Understanding \"Query Then Fetch\" vs \"DFS Query Then Fetch\"</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html#search-type\">Elasticsearch <code>search_type</code></a></li>\n<li><a href=\"https://www.elastic.co/guide/en/kibana/8.6/dashboard-troubleshooting.html\">Kibana: Improve dashboard loading time</a></li>\n</ol>","PublishedAt":"2023-04-05 13:00:00+00:00","OriginURL":"https://www.elastic.co/blog/debugging-kibana-dashboards","SourceName":"Elastic"}},{"node":{"ID":3347,"Title":"From cryptography to consensus: Q&A with CTO David Schwartz on building blockchain apps","Description":"<p>Imagine a world where you're owning your digital purchases instead of licensing them. </p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/04/05/from-cryptography-to-consensus-qa-with-cto-david-schwartz-on-building-blockchain-apps/\">From cryptography to consensus: Q&#038;A with CTO David Schwartz on building blockchain apps</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-04-05 04:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/04/05/from-cryptography-to-consensus-qa-with-cto-david-schwartz-on-building-blockchain-apps/","SourceName":"Stack Overflow"}},{"node":{"ID":3348,"Title":"Someone Like Me: Diana Zuniga on finding a job after graduation, being a Latina in tech, and her role as a sales development representative","Description":"","PublishedAt":"2023-04-05 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/culture-elastigrad-sales-development-representative","SourceName":"Elastic"}},{"node":{"ID":3352,"Title":"Demystifying Elastic Security for Cloud and its capabilities","Description":"","PublishedAt":"2023-04-05 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/march-2023-launch-elastic-security-for-cloud-capabilities","SourceName":"Elastic"}},{"node":{"ID":3344,"Title":"Cloudflare’s view of the Virgin Media outage in the UK","Description":"UK ISP Virgin Media (AS5089) experienced several outages on April 4, 2023. We examine the impact to Internet traffic, availability of Virgin Media web properties, and how BGP activity may provide insights into the underlying cause","PublishedAt":"2023-04-04 18:57:46+00:00","OriginURL":"https://blog.cloudflare.com/virgin-media-outage-april-4-2023/","SourceName":"Cloudflare"}},{"node":{"ID":3346,"Title":"DevEx improvements in HashiCorp Sentinel","Description":"Recent releases of Sentinel have targeted improvements to the developer experience.","PublishedAt":"2023-04-04 16:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/devex-improvements-in-hashicorp-sentinel","SourceName":"HashiCorp"}},{"node":{"ID":3345,"Title":"Inside Look: Measuring Developer Productivity and Happiness at LinkedIn","Description":"Authors:Viktoras Truchanovicius and Selina Zhang At LinkedIn, developer productivity and happiness has always been a priority. It is critical for our engineering leaders to understand how efficiently and effectively their teams are operating to continuously deliver value-added features for our members and build an industry-leading engineering culture. Over the years we’ve created several metrics and dashboards for measuring developer productivity. They were owned by teams building developer tools and focused on tool performance rather than measuring the developer experience of those [&#8230;]","PublishedAt":"2023-04-04 15:00:00+00:00","OriginURL":"https://engineering.linkedin.com/blog/2023/inside-look--measuring-developer-productivity-and-happiness-at-l","SourceName":"Linkedin"}},{"node":{"ID":3503,"Title":"Inside Look: Measuring Developer Productivity and Happiness at LinkedIn","Description":"Authors:Viktoras Truchanovicius and Selina Zhang At LinkedIn, developer productivity and happiness has always been a priority. It is critical for our engineering leaders to understand how efficiently and effectively their teams are operating to continuously deliver value-added features for our members and build an industry-leading engineering culture. Over the years we’ve created several metrics and dashboards for measuring developer productivity. They were owned by teams building developer tools and focused on tool performance rather than measuring the developer experience of those [&#8230;]","PublishedAt":"2023-04-04 15:00:00+00:00","OriginURL":"https://engineering.linkedin.com/content/engineering/en-us/blog/2023/inside-look--measuring-developer-productivity-and-happiness-at-l","SourceName":"Linkedin"}},{"node":{"ID":3343,"Title":"From Smalltalk to smart contracts, reflecting on 50 years of programming (Ep. 551)","Description":"<p>We chat with Dean Tribble about his journey from Xerox PARC to blockchain  CEO.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/04/04/from-smalltalk-to-smart-contracts-reflecting-on-50-years-of-programming-ep-511/\">From Smalltalk to smart contracts, reflecting on 50 years of programming (Ep. 551)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-04-04 14:10:14+00:00","OriginURL":"https://stackoverflow.blog/2023/04/04/from-smalltalk-to-smart-contracts-reflecting-on-50-years-of-programming-ep-511/","SourceName":"Stack Overflow"}},{"node":{"ID":3339,"Title":"Oxy: the journey of graceful restarts","Description":"Deploying new versions of long-lived server software while maintaining a reliable experience is challenging. For oxy, we established several development and operational patterns to increase reliability and reduce friction in deployments","PublishedAt":"2023-04-04 13:00:00+00:00","OriginURL":"https://blog.cloudflare.com/oxy-the-journey-of-graceful-restarts/","SourceName":"Cloudflare"}},{"node":{"ID":3338,"Title":"Tracing Notifications","Description":"<p>Notifications are a key aspect of the Slack user experience. Users rely on timely notifications of mentions and DMs to keep on top of important information. Poor notification completeness erodes the trust of all Slack users.  Notifications flow through almost all the systems in our infrastructure. As illustrated in Figure 1 below, a notification request [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://slack.engineering/tracing-notifications/\">Tracing Notifications</a> appeared first on <a rel=\"nofollow\" href=\"https://slack.engineering\">Slack Engineering</a>.</p>\n","PublishedAt":"2023-04-04 08:00:50+00:00","OriginURL":"https://slack.engineering/tracing-notifications/","SourceName":"Slack"}},{"node":{"ID":3337,"Title":"Meet Miro Engineering: Yolanda Robla Discusses Service Meshes","Description":"","PublishedAt":"2023-04-04 06:59:30+00:00","OriginURL":"https://medium.com/miro-engineering/meet-miro-engineering-yolanda-robla-discusses-service-meshes-4f61cef7d7ea?source=rss----555f7fd62a50---4","SourceName":"Miro Engineering"}},{"node":{"ID":3355,"Title":"Snyk brings developer-first AppSec approach to C/C++","Description":"We’re excited to announce the Open Beta of C/C++ for Snyk Code and licenses for Snyk Open Source.\n","PublishedAt":"2023-04-04 05:00:00+00:00","OriginURL":"https://snyk.io/blog/snyklaunch-developer-first-appsec-c-cpp","SourceName":"Snyk"}},{"node":{"ID":3356,"Title":"Fix cloud security issues faster  and at the source with Snyk Cloud","Description":"Today, we’re thrilled to introduce a new feature of Snyk Cloud that enables you to \"fix cloud issues in IaC\" (infrastructure as code), making Snyk Cloud the first solution to secure the cloud through code with remediation paths in IaC.","PublishedAt":"2023-04-04 05:00:00+00:00","OriginURL":"https://snyk.io/blog/fix-cloud-security-issues-with-snyk-cloud","SourceName":"Snyk"}},{"node":{"ID":3357,"Title":"SnykLaunch recap: Custom Base Image Recommendations","Description":"One of the exciting new features discussed at SnykLaunch today was Custom Base Image Recommendations (CBIR). Read on for all the details.","PublishedAt":"2023-04-04 05:00:00+00:00","OriginURL":"https://snyk.io/blog/snyklaunch-recap-custom-base-image-recommendations","SourceName":"Snyk"}},{"node":{"ID":3358,"Title":"How Snyk uses AI in developer security","Description":"Today, we want to provide a glimpse at how Snyk currently uses AI and data science, as well as a sneak peek at what’s to come.","PublishedAt":"2023-04-04 05:00:00+00:00","OriginURL":"https://snyk.io/blog/ai-in-developer-security","SourceName":"Snyk"}}]}},"pageContext":{"limit":30,"skip":2400,"numPages":193,"currentPage":81}},"staticQueryHashes":["3649515864"]}