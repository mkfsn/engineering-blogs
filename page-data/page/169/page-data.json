{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/169","result":{"data":{"allPost":{"edges":[{"node":{"ID":1094,"Title":"Introducing Platform Infra Team at Mercari","Description":"<p>@Vishal Banthia, Engineering Manager, Platform Infra Team The Platform Infra team falls under the Developer Productivity Engineering Camp with a major focus on two domains – Cloud Infrastructure and Observability. In this blog post, I will introduce the Platform Infra team’s mission, key responsibilities, and future initiatives. Mission and key goals The Platform Infra team [&hellip;]</p>\n","PublishedAt":"2022-01-21 15:10:50+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220121-introducing-platform-infra-team-at-mercari/","SourceName":"Mercari"}},{"node":{"ID":38,"Title":"How we built Asana’s Marketing Measurement Capabilities to power global customer growth","Description":"<img width=\"1024\" height=\"655\" src=\"https://blog.asana.com/wp-content/post-images/05-Distributed-Teams-01-1-1024x655.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"\" loading=\"lazy\" style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://blog.asana.com/wp-content/post-images/05-Distributed-Teams-01-1-1024x655.png 1024w, https://blog.asana.com/wp-content/post-images/05-Distributed-Teams-01-1-520x333.png 520w, https://blog.asana.com/wp-content/post-images/05-Distributed-Teams-01-1-1536x983.png 1536w, https://blog.asana.com/wp-content/post-images/05-Distributed-Teams-01-1.png 1607w, https://blog.asana.com/wp-content/post-images/05-Distributed-Teams-01-1-520x333@2x.png 1040w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /><p>Growing a customer base at scale effectively and efficiently through paid advertising is challenging in the modern digital world. It requires robust and holistic marketing measurement to give marketers visibility into how their campaigns perform at different granularities in a timely manner.&#160; Paid acquisition plays an essential role in helping Asana reach our potential customers [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.asana.com/2022/01/marketing-measurement-capabilities/\">How we built Asana’s Marketing Measurement Capabilities to power global customer&nbsp;growth</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.asana.com\">The Asana Blog</a>.</p>\n","PublishedAt":"2022-01-21 06:29:16+00:00","OriginURL":"https://blog.asana.com/2022/01/marketing-measurement-capabilities/","SourceName":"Asana"}},{"node":{"ID":460,"Title":"Machine learning and product analytics: Navigating the hype","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2022/01/MXP-Blog-MachineLearningProductAnalysis-1920x1080-copy-1024x576.png\" class=\"type:primaryImage\" /></figure>\n<p>Machine learning and artificial intelligence have seen an explosion of real-world applications in the last decade. Applications such as targeting personalized content to users in real time have demonstrated impressive results. And more and more we are even seeing ML/AI features deployed in product analytics contexts. Indeed, Mixpanel was very early in building ML features</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/machine-learning-and-product-analytics/\">Machine learning and product analytics: Navigating the hype</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2022-01-20 17:59:34+00:00","OriginURL":"https://mixpanel.com/blog/machine-learning-and-product-analytics/","SourceName":"Mixpanel"}},{"node":{"ID":1095,"Title":"Introduction of Web Auth Service","Description":"<p>Web authentication micro-service provides the &quot;Mercari Login&quot; feature for web products. It includes a web frontend service providing authentication screens like sign-in, sign-up, and related features. The frontend service has a web server that is implemented by Go and a SPA that is implemented by React and Typescript. It also includes a backend service that [&hellip;]</p>\n","PublishedAt":"2022-01-20 16:24:48+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220120-introduction-of-web-auth-service/","SourceName":"Mercari"}},{"node":{"ID":1265,"Title":"Optimize SPA bundle size to speed up application loading","Description":"","PublishedAt":"2022-01-20 12:27:45+00:00","OriginURL":"https://medium.com/miro-engineering/optimize-spa-bundle-size-to-speed-up-application-loading-c988cef57257?source=rss----555f7fd62a50---4","SourceName":"Miro Engineering"}},{"node":{"ID":1096,"Title":"Trying to run DML with Priority specified in Cloud Spanner","Description":"<p>This article is a translation of the Japanese article written on September 28, 2021. Hello all, this is @iwata, a backend engineer at Merpay. This article is for day 18 of Merpay Tech Openness Month 2021. All of the microservices I’ve been developing use Cloud Spanner as their data store, so I’ve been playing around [&hellip;]</p>\n","PublishedAt":"2022-01-20 12:08:11+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20210924-cloud-spanner-priority/","SourceName":"Mercari"}},{"node":{"ID":236,"Title":"Gartner® Magic Quadrant™ for Cloud Database Report Recognizes Cloudera as a Visionary","Description":"<p>Gartner® recognized Cloudera in three recent reports – Magic Quadrant™ for Cloud Database Management Systems (DBMS), Critical Capabilities for Cloud Database Management Systems for Analytical Use Cases and Critical Capabilities for Cloud Database Management Systems for Operational Use Cases. Our position as a Visionary in the Gartner Magic Quadrant for Cloud DBMS market speaks to [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/gartner-magic-quadrant-for-cloud-database-report-recognizes-cloudera-as-a-visionary/\">Gartner® Magic Quadrant™ for Cloud Database Report Recognizes Cloudera as a Visionary</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-01-20 02:00:47+00:00","OriginURL":"https://blog.cloudera.com/gartner-magic-quadrant-for-cloud-database-report-recognizes-cloudera-as-a-visionary/","SourceName":"Cloudera"}},{"node":{"ID":760,"Title":"Capacity Recommendation Engine: Throughput and Utilization Based Predictive Scaling","Description":"<h1>Introduction</h1>\n<p><span style=\"font-weight: 400;\">Capacity is a key component of reliability. Uber&#8217;s services require enough resources in order to handle daily peak traffic and to support our different kinds of business units. These services are deployed across different cloud platforms and data centers </span>&#8230;</p>\n<p>The post <a rel=\"nofollow\" href=\"https://eng.uber.com/capacity-recommendation-engine/\">Capacity Recommendation Engine: Throughput and Utilization Based Predictive Scaling</a> appeared first on <a rel=\"nofollow\" href=\"https://eng.uber.com\">Uber Engineering Blog</a>.</p>\n","PublishedAt":"2022-01-19 17:43:42+00:00","OriginURL":"https://eng.uber.com/capacity-recommendation-engine/","SourceName":"Uber"}},{"node":{"ID":350,"Title":"The Adventures of Rendezvous in Heroku’s New Architecture","Description":"<p><em>This article was originally authored by Srinath Ananthakrishnan, an engineer on the Heroku Runtime Networking Team</em> </p>\n<h2 class=\"anchored\">\n  <a name=\"summary\" href=\"#summary\">Summary</a>\n</h2>\n\n<p>This following story outlines a recent issue we saw with migrating one of our internal systems over to a new EC2 substrate and in the process breaking one of our customer’s use cases. We also outline how we went about discovering the root of the issue, how we fixed it, and how we enjoyed solving a complex problem that helped keep the Heroku customer experience as simple and straightforward as possible!</p>\n<h2 class=\"anchored\">\n  <a name=\"history\" href=\"#history\">History 📖</a>\n</h2>\n\n<p>Heroku has been leveraging AWS and EC2 since the very early days. All these years, the <a href=\"https://devcenter.heroku.com/articles/dyno-runtime#common-runtime\">Common Runtime</a> has been running on <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html\">EC2 Classic</a> and while there have always been talks about moving to the more performant and feature rich VPC architecture that AWS offers, we hadn’t had the time and personnel investment to make it a reality until very recently. The results of that effort were captured in a previous blog post titled <a href=\"https://blog.heroku.com/faster-dynos-for-all\">Faster Dynos for All</a></p>\n\n<p>While our Common Runtime contains many critical components, including our instance fleet to run app containers, our routers and several other control plane components, one of the often overlooked but yet critical components is Rendezvous, our bidirectional proxy server that enables <a href=\"https://devcenter.heroku.com/articles/one-off-dynos\">Heroku Run</a> sessions to containers. This is the component that lets customers run what are called one-off dynos that are used for a wide range of use-cases ranging from a simple prompt to execute/test a piece of code to complex CI scenarios.</p>\n<h2 class=\"anchored\">\n  <a name=\"architecture-of-rendezvous\" href=\"#architecture-of-rendezvous\">Architecture of Rendezvous 💪</a>\n</h2>\n\n<p>Rendezvous has been a single-instance server from time immemorial. It is a sub-200 line Ruby script that runs on an EC2 instance with an EIP attached to it. The ruby process receives TLS connections directly, performs TLS termination and proxies bidirectional connections that match a given hash.</p>\n\n<p><img src=\"https://heroku-blog-files.s3.amazonaws.com/posts/1642548509-Screen%20Shot%202021-12-07%20at%2011.16.39%20AM.png\" alt=\"Screen Shot 2021-12-07 at 11\"></p>\n\n<p>Every Heroku Run/One-off dyno invocation involves two parties - the client which is usually the Heroku CLI or custom implementations that use the <a href=\"https://devcenter.heroku.com/articles/platform-api-reference\">Heroku API</a> and the dyno on one of Heroku’s instances deep in the cloud. The existence of Rendezvous is necessitated by one of the painful yet essential warts of the Internet - NATs.</p>\n\n<p>Both the client and the dyno are behind NATs and there’s no means for them to talk to each other through these pesky devices. To combat this, the Heroku API returns an <code>attach_url</code> as part of the <code>create_dyno</code> <a href=\"https://devcenter.heroku.com/articles/platform-api-reference#dyno-create\">request</a> which lets the client reach the dyno. The <code>attach_url</code> also contains a 64 bit hash to identify this specific session in Rendezvous. The same <code>attach_url</code> with the exact hash is passed on by our dyno management system to an agent that runs on our EC2 instance fleet which is responsible for the lifecycle of dynos.</p>\n\n<p><img src=\"https://heroku-blog-files.s3.amazonaws.com/posts/1642548531-Screen%20Shot%202021-12-07%20at%2011.57.32%20AM.png\" alt=\"Screen Shot 2021-12-07 at 11\"></p>\n\n<p>Once both the systems receive the <code>attach_url</code> with the same hash, they make a TLS request to the host, which is a specific instance of Rendezvous. Once the TLS session is established, both sides send the hash as the first message which lets Rendezvous identify which session the connection belongs to. Once the two sides of the session are established, Rendezvous splices them together, thus creating a bi-directional session between the CLI/user and the dyno.</p>\n<h2 class=\"anchored\">\n  <a name=\"a-unique-use-case-of-rendezvous\" href=\"#a-unique-use-case-of-rendezvous\">A unique use-case of Rendezvous 💡</a>\n</h2>\n\n<p>While the majority of customers use Rendezvous via <code>heroku run</code> commands executed via the CLI, some clients have more sophisticated ways of needing containers to be started arbitrarily via the <a href=\"https://devcenter.heroku.com/articles/platform-api-reference#dyno-create\">Heroku API</a>. These clients programmatically create a dyno via the API and also establish a session to the <code>attach_url</code>.</p>\n\n<p>One of our customers utilized Rendezvous in a very unique way by running an app in a Private Space that received client HTTP requests and within the context of a request, issued another request to the Heroku API and to Rendezvous. They had a requirement to support requests across multiple customers and to ensure isolation between them, they opted to run each of their individual customer’s requests inside <a href=\"https://devcenter.heroku.com/articles/one-off-dynos#one-off-dynos\">one-off dynos</a>. The tasks in the one-off dyno runs are expected to take a few seconds and were usually well within the expected maximum response time limit of <a href=\"https://devcenter.heroku.com/articles/limits#http-timeouts\">30s by the Heroku router</a>.</p>\n<h2 class=\"anchored\">\n  <a name=\"oh-something-s-broken\" href=\"#oh-something-s-broken\">Oh! Something’s broken!</a>\n</h2>\n\n<p>In July 2021, we moved Rendezvous into AWS VPCs as part of our effort to evacuate EC2 classic. We chose similar generation instances for this as our instance in classic. As part of this effort, we also wanted to remove a few of the architectural shortcomings of rendezvous - having a single EIP ingress and also manual certificate management for terminating TLS.</p>\n\n<p><img src=\"https://heroku-blog-files.s3.amazonaws.com/posts/1642548541-Screen%20Shot%202022-01-07%20at%201.36.18%20PM.png\" alt=\"Screen Shot 2022-01-07 at 1\"></p>\n\n<p>Based on experience with other routing projects, we decided to leverage <a href=\"https://docs.aws.amazon.com/elasticloadbalancing/latest/network/introduction.html\">Network Load Balancers</a> that AWS offers. From a performance perspective, these were also significantly better - our internal tests revealed that NLBs offered 5-7x more throughput in comparison to the EIP approach. We also decided to leverage the NLB’s TLS termination capabilities which allowed us to stop managing our own certificate and private key manually and rely on AWS ACM to take care of renewals in the future.</p>\n\n<p>While the move was largely a success and most customers didn’t notice this and their <code>heroku run</code> sessions continued to work after the transition, our unique customer immediately hit <a href=\"https://devcenter.heroku.com/articles/error-codes#h12-request-timeout\">H12s</a> on their app that spawns one-off dynos. Almost immediately, we identified this issue to Rendezvous sessions taking longer than the 30s limit imposed by the Heroku Router. We temporarily switched their app to use the classic path and sat down to investigate.</p>\n<h2 class=\"anchored\">\n  <a name=\"where-s-the-problem\" href=\"#where-s-the-problem\">Where’s the problem! 😱</a>\n</h2>\n\n<p>Our first hunch was that the TLS termination on the NLB wasn’t happening as expected but our investigations revealed that TLS was appropriately terminated and the client was able to make progress following that. The next line of investigation was in Rendezvous itself. The new VPC-based instances were supposed to be faster, so the slowdown was something of a mystery. We even tried out an instance type that supported 100Gbps networking but the issue persisted. As part of this effort, we also had upgraded the Ruby version that Rendezvous was running on - and you guessed it right - we attempted a downgrade as well. This proved to be inconclusive as well.</p>\n\n<p>All along we also suspected this could possibly be a problem in the language runtime of the recipient of the connection, where the bytes were available in the userspace buffer of the runtime but the API call was not notified or there is a race condition. We attempted to mimic the data pattern between the client and the process in the one-off dyno by writing our own sample applications. We actually built sample applications in two different languages with very different runtimes. Both these ended up having the same issues in the new environment as well. 🤔</p>\n\n<p>We even briefly considered altering the Heroku Router’s timeout from 30s, but it largely felt like spinning a roulette wheel since we weren’t absolutely sure where the problem was.</p>\n<h2 class=\"anchored\">\n  <a name=\"nailing-it-down\" href=\"#nailing-it-down\">Nailing it down! 🔍</a>\n</h2>\n\n<p>As part of the troubleshooting effort, we also added some more logging on the agent that runs on every EC2 instance that is responsible for maintaining a connection with Rendezvous and the dyno. This agent negotiates TLS with Rendezvous and establishes a connection and sets up a <code>pty</code> terminal connection on the dyno side and sets up stdin/stdout/stderr channels with the same. The client would send requests in a set-size byte chunks which would be streamed by this agent to the dyno. The same agent would also receive bytes from the dyno and stream it back to Rendezvous to send it back to the client. Through the logs on the agent, we determined that there were logs back and forth indicating traffic between the dyno and Rendezvous when connections worked. However, for the abnormal case, there were no logs indicating traffic coming from the dyno after a while and the last log was bytes being sent to the dyno.</p>\n\n<p>Digging more, we identified two issues with this piece of code:</p>\n\n<ol>\n<li>This piece of code was single threaded - i.e. a single thread was performing an <code>IO.select</code> on the TCP socket on the Rendezvous side and the terminal reader on the dyno.</li>\n<li>While #1 itself is not a terrible problem, it became a problem with the use of NLBs which are more performant and have different TLS frame characteristics.</li>\n</ol>\n\n<p>#2 meant that the NLB could potentially send much larger TLS frames than the classic setup where the Rendezvous ruby process would have performed TLS.</p>\n\n<p>The snippet of code that had the bug was as follows.</p>\n\n<pre><code># tcp_socket can be used with IO.select\n# ssl_socket is after openssl has its say\n# pty_reader and pty_writer are towards the dyno\ndef rendezvous_channel(tcp_socket, ssl_socket, pty_reader, pty_writer)\n    if o = IO.select([tcp_socket, pty_reader], nil, nil, IDLE_TIMEOUT)\n        if o.first.first == pty_reader\n\n            # read from the pty_reader and write to ssl_socket\n\n        elsif o.first.first == tcp_socket\n\n            # read from the ssl_socket and write to pty_writer\n\n        end\n    end\nend\n</code></pre>\n\n<p>Since the majority of the bytes were from the client, this thread would have read from the <code>ssl_socket</code> and written them to the <code>pty_writer</code>. With classic, these would have been small TLS frames which would mean that an <code>IO.select</code> readability notification would correspond to a single read from the SSL socket which would in-turn read from the TCP socket.</p>\n\n<p>However, with the shards, the TLS frames from the NLB end up being larger, and a previous read from the <code>ssl_socket</code> could end up reading more bytes off of the <code>tcp_socket</code> which could potentially block <code>IO.select</code> till the <code>IDLE_TIMEOUT</code> has passed. It’s not a problem if the <code>IDLE_TIMEOUT</code> is a relatively smaller number but since this was larger than the 30s limit imposed by the Heroku Router, <code>IO.select</code> blocking here resulted in that timer elapsing resulting in H12s.</p>\n\n<p>In fact, the <a href=\"https://www.rubydoc.info/stdlib/core/IO.select\">Ruby docs</a> for <code>IO.select</code> specifically talk about this <a href=\"https://www.rubydoc.info/stdlib/core/IO.select#:%7E:text=The%20most%20likely%20situation%20is%20that%20OpenSSL%3A%3ASSL%3A%3ASSLSocket%20buffers%20some%20data.%20IO.select%20doesn%27t%20see%20the%20buffer.%20So%20IO.select%20can%20block%20when%20OpenSSL%3A%3ASSL%3A%3ASSLSocket%23readpartial%20doesn%27t%20block.\">issue</a>.</p>\n\n<blockquote>\n<p>The most likely situation is that OpenSSL::SSL::SSLSocket buffers some data. IO.select doesn't see the buffer. So IO.select can block when OpenSSL::SSL::SSLSocket#readpartial doesn't block.</p>\n</blockquote>\n\n<p>According to the Linux kernel on the instance, there were no bytes to be read from the <code>tcp_socket</code> while there were still bytes being left to read from the buffers in openssl since we only read partially the last time around.</p>\n<h2 class=\"anchored\">\n  <a name=\"the-fix\" href=\"#the-fix\">The fix 💜</a>\n</h2>\n\n<p>Once we had identified the issue, it was rather straightforward for us to fix this. We made the code dual threaded - one each for one side of the connection and also fixed the way we read from the sockets and did an <code>IO.select</code>. With this code change, we ensured that we wouldn’t perennially block where there are bytes lying around to be read.</p>\n\n<p>We deployed this fix to our staging environments and after thorough testing we moved the customer over to the VPC-based rendezvous. The customer subsequently confirmed that the issue was resolved and all our remote offices erupted in roars of cheer after that. It was 🍰 time.</p>\n<h2 class=\"anchored\">\n  <a name=\"conclusion\" href=\"#conclusion\">Conclusion</a>\n</h2>\n\n<blockquote>\n<p>Computers are fun, computers are hard!</p>\n\n<p>Try to run a platform and you’ll often say, oh my god!</p>\n\n<p>Gratifying and inspiring it is, to run our stack</p>\n\n<p>For if you lose their trust, it’s hard to get it back ...</p>\n</blockquote>\n\n<p>Running a platform makes you appreciate more of <a href=\"https://www.hyrumslaw.com/\">Hyrum’s Law</a>, every day. Customers find interesting ways to use your platform and they sure do keep you on your toes to ensure you provide the best in class service. At Heroku we have always taken pride in our mission to make life easy for customers and we are grateful to have got the opportunity to demonstrate that yet again as part of this endeavor.</p>\n\n<p>Thanks are in order for all the folks who tirelessly worked on identifying this issue and fixing it. In alphabetical order - David Murray, Elizabeth Cox, Marcus Blankenship, Srinath Ananthakrishnan, Thomas Holmes, Tilman Holschuh and Will Farrington.</p>","PublishedAt":"2022-01-19 17:00:00+00:00","OriginURL":"https://blog.heroku.com/adventures-of-rendevous","SourceName":"Heroku"}},{"node":{"ID":237,"Title":"Cloudera Streaming Analytics 1.6 Release Notes","Description":"<p>We are excited to announce the release of Cloudera Streaming Analytics (CSA) 1.6 for CDP Private Cloud Base. With this release, we build on the foundation on 1.4 and 1.5 &#8211; with a number of fixes, enhancements, and features. Starting with this release, we now have an aligned release cycle for CSA Community Edition (CE). [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/cloudera-streaming-analytics-1-6-release-notes/\">Cloudera Streaming Analytics 1.6 Release Notes</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-01-19 14:02:39+00:00","OriginURL":"https://blog.cloudera.com/cloudera-streaming-analytics-1-6-release-notes/","SourceName":"Cloudera"}},{"node":{"ID":1097,"Title":"Implement the dynamic rendering service","Description":"<p>Implement the dynamic rendering service Here is awesome article written by the Google search team: https://developers.google.com/search/docs/advanced/javascript/dynamic-rendering To put it simply: Dynamic rendering means switching between client-side rendered and pre-rendered content for specific user agents. As the article suggests, we use Rendertron to implement our dynamic rendering service called Prerender. In this article, I am going [&hellip;]</p>\n","PublishedAt":"2022-01-19 12:34:12+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220119-implement-the-dynamic-rendering-service/","SourceName":"Mercari"}},{"node":{"ID":1233,"Title":"Blog: Securing Admission Controllers","Description":"<p><strong>Author:</strong> Rory McCune (Aqua Security)</p>\n<p><a href=\"https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/\">Admission control</a> is a key part of Kubernetes security, alongside authentication and authorization. Webhook admission controllers are extensively used to help improve the security of Kubernetes clusters in a variety of ways including restricting the privileges of workloads and ensuring that images deployed to the cluster meet organization’s security requirements.</p>\n<p>However, as with any additional component added to a cluster, security risks can present themselves. A security risk example is if the deployment and management of the admission controller are not handled correctly. To help admission controller users and designers manage these risks appropriately, the <a href=\"https://github.com/kubernetes/community/tree/master/sig-security#security-docs\">security documentation</a> subgroup of SIG Security has spent some time developing a <a href=\"https://github.com/kubernetes/sig-security/tree/main/sig-security-docs/papers/admission-control\">threat model for admission controllers</a>. This threat model looks at likely risks which may arise from the incorrect use of admission controllers, which could allow security policies to be bypassed, or even allow an attacker to get unauthorised access to the cluster.</p>\n<p>From the threat model, we developed a set of security best practices that should be adopted to ensure that cluster operators can get the security benefits of admission controllers whilst avoiding any risks from using them.</p>\n<h2 id=\"admission-controllers-and-good-practices-for-security\">Admission controllers and good practices for security</h2>\n<p>From the threat model, a couple of themes emerged around how to ensure the security of admission controllers.</p>\n<h3 id=\"secure-webhook-configuration\">Secure webhook configuration</h3>\n<p>It’s important to ensure that any security component in a cluster is well configured and admission controllers are no different here. There are a couple of security best practices to consider when using admission controllers</p>\n<ul>\n<li><strong>Correctly configured TLS for all webhook traffic</strong>. Communications between the API server and the admission controller webhook should be authenticated and encrypted to ensure that attackers who may be in a network position to view or modify this traffic cannot do so. To achieve this access the API server and webhook must be using certificates from a trusted certificate authority so that they can validate their mutual identities</li>\n<li><strong>Only authenticated access allowed</strong>. If an attacker can send an admission controller large numbers of requests, they may be able to overwhelm the service causing it to fail. Ensuring all access requires strong authentication should mitigate that risk.</li>\n<li><strong>Admission controller fails closed</strong>. This is a security practice that has a tradeoff, so whether a cluster operator wants to configure it will depend on the cluster’s threat model. If an admission controller fails closed, when the API server can’t get a response from it, all deployments will fail. This stops attackers bypassing the admission controller by disabling it, but, can disrupt the cluster’s operation. As clusters can have multiple webhooks, one approach to hit a middle ground might be to have critical controls on a fail closed setups and less critical controls allowed to fail open.</li>\n<li><strong>Regular reviews of webhook configuration</strong>. Configuration mistakes can lead to security issues, so it’s important that the admission controller webhook configuration is checked to make sure the settings are correct. This kind of review could be done automatically by an Infrastructure As Code scanner or manually by an administrator.</li>\n</ul>\n<h3 id=\"secure-cluster-configuration-for-admission-control\">Secure cluster configuration for admission control</h3>\n<p>In most cases, the admission controller webhook used by a cluster will be installed as a workload in the cluster. As a result, it’s important to ensure that Kubernetes' security features that could impact its operation are well configured.</p>\n<ul>\n<li><strong>Restrict <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/rbac/\">RBAC</a> rights</strong>. Any user who has rights which would allow them to modify the configuration of the webhook objects or the workload that the admission controller uses could disrupt its operation. So it’s important to make sure that only cluster administrators have those rights.</li>\n<li><strong>Prevent privileged workloads</strong>. One of the realities of container systems is that if a workload is given certain privileges, it will be possible to break out to the underlying cluster node and impact other containers on that node. Where admission controller services run in the cluster they’re protecting, it’s important to ensure that any requirement for privileged workloads is carefully reviewed and restricted as much as possible.</li>\n<li><strong>Strictly control external system access</strong>. As a security service in a cluster admission controller systems will have access to sensitive information like credentials. To reduce the risk of this information being sent outside the cluster, <a href=\"https://kubernetes.io/docs/concepts/services-networking/network-policies/\">network policies</a> should be used to restrict the admission controller services access to external networks.</li>\n<li><strong>Each cluster has a dedicated webhook</strong>. Whilst it may be possible to have admission controller webhooks that serve multiple clusters, there is a risk when using that model that an attack on the webhook service would have a larger impact where it’s shared. Also where multiple clusters use an admission controller there will be increased complexity and access requirements, making it harder to secure.</li>\n</ul>\n<h3 id=\"admission-controller-rules\">Admission controller rules</h3>\n<p>A key element of any admission controller used for Kubernetes security is the rulebase it uses. The rules need to be able to accurately meet their goals avoiding false positive and false negative results.</p>\n<ul>\n<li><strong>Regularly test and review rules</strong>. Admission controller rules need to be tested to ensure their accuracy. They also need to be regularly reviewed as the Kubernetes API will change with each new version, and rules need to be assessed with each Kubernetes release to understand any changes that may be required to keep them up to date.</li>\n</ul>","PublishedAt":"2022-01-19 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/01/19/secure-your-admission-controllers-and-webhooks/","SourceName":"Kubernetes"}},{"node":{"ID":1098,"Title":"Introduction of Web Platform","Description":"<p>Author: @urahiroshi, Engineering manager of Web Platform team The mission of Web Platform team Web Platform team was originally created to maintain network infrastructure and session management service for Mercari JP web app. But we’re changing our mission to &quot;Providing web microservice platform as a service for web products in mercari group&quot;. Let me clarify [&hellip;]</p>\n","PublishedAt":"2022-01-18 15:44:24+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220118-introduction-of-web-platform/","SourceName":"Mercari"}},{"node":{"ID":238,"Title":"How Data is Helping Organizations to Improve the Employee Lifecycle","Description":"<p>Key uses cases showing how data can help drive societal change</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/how-data-is-helping-organizations-to-improve-the-employee-lifecycle/\">How Data is Helping Organizations to Improve the Employee Lifecycle</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2022-01-18 13:54:39+00:00","OriginURL":"https://blog.cloudera.com/how-data-is-helping-organizations-to-improve-the-employee-lifecycle/","SourceName":"Cloudera"}},{"node":{"ID":1099,"Title":"Blog Series of Introduction of Developer Productivity Engineering at Mercari","Description":"<p>Author: @deeeeeet, Engineering head of Developer Productivity Engineering Developer Productivity Engineering Camp (“Camp” is a unit and a term we use internally at Mercari to logically group the related teams) is a division which is mainly responsible for the entire Mercari group’s base infrastructure and DevOps toolings and services. It consists of multiple teams and [&hellip;]</p>\n","PublishedAt":"2022-01-17 08:58:05+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20220116-blog-series-of-introduction-of-developer-productivity-engineering-at-mercari/","SourceName":"Mercari"}},{"node":{"ID":1210,"Title":"Two New Tutorials for 1.18","Description":"Two new tutorials have been published in preparation for the release of Go 1.18.","PublishedAt":"2022-01-14 00:00:00+00:00","OriginURL":"https://go.dev/blog/tutorials-go1.18","SourceName":"The Go Blog"}},{"node":{"ID":1031,"Title":"A closer look at how LinkedIn integrates fairness into its AI products","Description":"Co-authors: Heloise Logan, Preetam Nandy, Kinjal Basu, and Sakshi Jain At LinkedIn, we work constantly to improve our platform with evolving AI models and systems. Delivering fair and equitable experiences for each of our nearly 800M members is paramount to this work, and we have designed our AI systems in ways that help us provide the right protections, mitigate unintended consequences, and ultimately better serve our members, customers, and society. As part of our ongoing journey to build on our Responsible AI program, we wanted to share more insight into how we think about [&#8230;]","PublishedAt":"2022-01-13 22:11:00+00:00","OriginURL":"https://engineering.linkedin.com/blog/2022/a-closer-look-at-how-linkedin-integrates-fairness-into-its-ai-pr","SourceName":"Linkedin"}},{"node":{"ID":461,"Title":"Debugging with product analytics","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2022/01/20220105_BlogHero_Insights_Debugging-1024x577.png\" class=\"type:primaryImage\" /></figure>\n<p>As a product manager, deep-diving into problems like high churn, bugs, and crashes is part of the job. Over the years, I’ve learned that finding solutions to these kinds of problems is a lot like debugging software code: You always want to start with trying to isolate the issue as much as possible by breaking</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/insights-debugging-with-product-analytics/\">Debugging with product analytics</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2022-01-13 21:41:00+00:00","OriginURL":"https://mixpanel.com/blog/insights-debugging-with-product-analytics/","SourceName":"Mixpanel"}},{"node":{"ID":396,"Title":"Building for Balance","Description":"","PublishedAt":"2022-01-12 19:12:45+00:00","OriginURL":"https://tech.instacart.com/building-for-balance-e61fb9511893?source=rss----587883b5d2ee---4","SourceName":"Instacart"}},{"node":{"ID":529,"Title":"Automated code generation from GraphQL operations","Description":"","PublishedAt":"2022-01-12 15:03:13+00:00","OriginURL":"https://engblog.nextdoor.com/automated-code-generation-from-graphql-operations-181293dec4df?source=rss----5e54f11cdfdf---4","SourceName":"Nextdoor"}},{"node":{"ID":608,"Title":"Being on-call as a software engineer - a challenging and fast learning experience","Description":"","PublishedAt":"2022-01-12 00:00:00+00:00","OriginURL":"https://tech.trivago.com/post/2022-01-12-engineeroncall/","SourceName":"Trivago"}},{"node":{"ID":761,"Title":"The New Version of Orbit (v1.1) is Released: The Improvements, Design Changes, and Exciting Collaborations","Description":"<h1>Introduction</h1>\n<p><span style=\"font-weight: 400;\">The previous </span><a href=\"https://eng.uber.com/orbit/\"><span style=\"font-weight: 400;\">post</span></a><span style=\"font-weight: 400;\"> gave an overview of </span><a href=\"https://github.com/uber/orbit\"><span style=\"font-weight: 400;\">Orbit</span></a><span style=\"font-weight: 400;\">, a Python package developed by Uber in order to perform Bayesian time-series analysis and forecasting. This post provides the details of the version 1.1 updates—in particular, changes in syntax of </span>&#8230;</p>\n<p>The post <a rel=\"nofollow\" href=\"https://eng.uber.com/the-new-version-of-orbit-v1-1-is-released/\">The New Version of Orbit (v1.1) is Released: The Improvements, Design Changes, and Exciting Collaborations</a> appeared first on <a rel=\"nofollow\" href=\"https://eng.uber.com\">Uber Engineering Blog</a>.</p>\n","PublishedAt":"2022-01-11 17:30:50+00:00","OriginURL":"https://eng.uber.com/the-new-version-of-orbit-v1-1-is-released/","SourceName":"Uber"}},{"node":{"ID":462,"Title":"3 updates we’ve made to Dashboards to improve workflows across teams","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2022/01/Blog-Hero-Image@2x-1024x576.png\" class=\"type:primaryImage\" /></figure>\n<p>After 10 years of working alongside product teams, we&#8217;ve found the most successful teams are constantly—and collectively—questioning their assumptions, iterating, and sharing their findings cross-functionally. Because of all this, two things product teams prioritize today are workflow and accessibility: &#8220;How easily can the various members of my team get all the data and analysis they</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/3-updates-weve-made-to-dashboards-to-improve-workflows-across-teams/\">3 updates we’ve made to Dashboards to improve workflows across teams</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2022-01-10 16:01:00+00:00","OriginURL":"https://mixpanel.com/blog/3-updates-weve-made-to-dashboards-to-improve-workflows-across-teams/","SourceName":"Mixpanel"}},{"node":{"ID":1234,"Title":"Blog: Meet Our Contributors - APAC (India region)","Description":"<p><strong>Authors &amp; Interviewers:</strong> <a href=\"https://github.com/anubha-v-ardhan\">Anubhav Vardhan</a>, <a href=\"https://github.com/Atharva-Shinde\">Atharva Shinde</a>, <a href=\"https://github.com/AvineshTripathi\">Avinesh Tripathi</a>, <a href=\"https://github.com/Debanitrkl\">Debabrata Panigrahi</a>, <a href=\"https://github.com/verma-kunal\">Kunal Verma</a>, <a href=\"https://github.com/PranshuSrivastava\">Pranshu Srivastava</a>, <a href=\"https://github.com/CIPHERTron\">Pritish Samal</a>, <a href=\"https://github.com/PurneswarPrasad\">Purneswar Prasad</a>, <a href=\"https://github.com/vedant-kakde\">Vedant Kakde</a></p>\n<p><strong>Editor:</strong> <a href=\"https://psaggu.com\">Priyanka Saggu</a></p>\n<hr>\n<p>Good day, everyone 👋</p>\n<p>Welcome to the first episode of the APAC edition of the &quot;Meet Our Contributors&quot; blog post series.</p>\n<p>In this post, we'll introduce you to five amazing folks from the India region who have been actively contributing to the upstream Kubernetes projects in a variety of ways, as well as being the leaders or maintainers of numerous community initiatives.</p>\n<p>💫 <em>Let's get started, so without further ado…</em></p>\n<h2 id=\"arsh-sharma-https-github-com-rinkiyakedad\"><a href=\"https://github.com/RinkiyaKeDad\">Arsh Sharma</a></h2>\n<p>Arsh is currently employed with Okteto as a Developer Experience engineer. As a new contributor, he realised that 1:1 mentorship opportunities were quite beneficial in getting him started with the upstream project.</p>\n<p>He is presently a CI Signal shadow on the Kubernetes 1.23 release team. He is also contributing to the SIG Testing and SIG Docs projects, as well as to the <a href=\"https://github.com/cert-manager/infrastructure\">cert-manager</a> tools development work that is being done under the aegis of SIG Architecture.</p>\n<p>To the newcomers, Arsh helps plan their early contributions sustainably.</p>\n<blockquote>\n<p><em>I would encourage folks to contribute in a way that's sustainable. What I mean by that\nis that it's easy to be very enthusiastic early on and take up more stuff than one can\nactually handle. This can often lead to burnout in later stages. It's much more sustainable\nto work on things iteratively.</em></p>\n</blockquote>\n<h2 id=\"kunal-kushwaha-https-github-com-kunal-kushwaha\"><a href=\"https://github.com/kunal-kushwaha\">Kunal Kushwaha</a></h2>\n<p>Kunal Kushwaha is a core member of the Kubernetes marketing council. He is also a CNCF ambassador and one of the founders of the <a href=\"https://community.cncf.io/cloud-native-students/\">CNCF Students Program</a>.. He also served as a Communications role shadow during the 1.22 release cycle.</p>\n<p>At the end of his first year, Kunal began contributing to the <a href=\"https://github.com/fabric8io/kubernetes-client\">fabric8io kubernetes-client</a> project. He was then selected to work on the same project as part of Google Summer of Code. Kunal mentored people on the same project, first through Google Summer of Code then through Google Code-in.</p>\n<p>As an open-source enthusiast, he believes that diverse participation in the community is beneficial since it introduces new perspectives and opinions and respect for one's peers. He has worked on various open-source projects, and his participation in communities has considerably assisted his development as a developer.</p>\n<blockquote>\n<p><em>I believe if you find yourself in a place where you do not know much about the\nproject, that's a good thing because now you can learn while contributing and the\ncommunity is there to help you. It has helped me a lot in gaining skills, meeting\npeople from around the world and also helping them. You can learn on the go,\nyou don't have to be an expert. Make sure to also check out no code contributions\nbecause being a beginner is a skill and you can bring new perspectives to the\norganisation.</em></p>\n</blockquote>\n<h2 id=\"madhav-jivarajani-https-github-com-madhavjivrajani\"><a href=\"https://github.com/MadhavJivrajani\">Madhav Jivarajani</a></h2>\n<p>Madhav Jivarajani works on the VMware Upstream Kubernetes stability team. He began contributing to the Kubernetes project in January 2021 and has since made significant contributions to several areas of work under SIG Architecture, SIG API Machinery, and SIG ContribEx (contributor experience).</p>\n<p>Among several significant contributions are his recent efforts toward the Archival of <a href=\"https://github.com/kubernetes/community/issues/6055\">design proposals</a>, refactoring the <a href=\"https://github.com/kubernetes/k8s.io/pull/2713\">&quot;groups&quot; codebase</a> under k8s-infra repository to make it mockable and testable, and improving the functionality of the <a href=\"https://github.com/kubernetes/test-infra/issues/23129\">GitHub k8s bot</a>.</p>\n<p>In addition to his technical efforts, Madhav oversees many projects aimed at assisting new contributors. He organises bi-weekly &quot;KEP reading club&quot; sessions to help newcomers understand the process of adding new features, deprecating old ones, and making other key changes to the upstream project. He has also worked on developing <a href=\"https://github.com/kubernetes-sigs/contributor-katacoda\">Katacoda scenarios</a> to assist new contributors to become acquainted with the process of contributing to k/k. In addition to his current efforts to meet with community members every week, he has organised several <a href=\"https://www.youtube.com/watch?v=FgsXbHBRYIc\">new contributors workshops (NCW)</a>.</p>\n<blockquote>\n<p><em>I initially did not know much about Kubernetes. I joined because the community was\nsuper friendly. But what made me stay was not just the people, but the project itself.\nMy solution to not feeling overwhelmed in the community was to gain as much context\nand knowledge into the topics that I was interested in and were being discussed. And\nas a result I continued to dig deeper into Kubernetes and the design of it.\nI am a systems nut &amp; thus Kubernetes was an absolute goldmine for me.</em></p>\n</blockquote>\n<h2 id=\"rajas-kakodkar-https-github-com-rajaskakodkar\"><a href=\"https://github.com/rajaskakodkar\">Rajas Kakodkar</a></h2>\n<p>Rajas Kakodkar currently works at VMware as a Member of Technical Staff. He has been engaged in many aspects of the upstream Kubernetes project since 2019.</p>\n<p>He is now a key contributor to the Testing special interest group. He is also active in the SIG Network community. Lately, Rajas has contributed significantly to the <a href=\"https://docs.google.com/document/d/1AtWQy2fNa4qXRag9cCp5_HsefD7bxKe3ea2RPn8jnSs/\">NetworkPolicy++</a> and <a href=\"https://github.com/kubernetes-sigs/kpng\"><code>kpng</code></a> sub-projects.</p>\n<p>One of the first challenges he ran across was that he was in a different time zone than the upstream project's regular meeting hours. However, async interactions on community forums progressively corrected that problem.</p>\n<blockquote>\n<p><em>I enjoy contributing to Kubernetes not just because I get to work on\ncutting edge tech but more importantly because I get to work with\nawesome people and help in solving real world problems.</em></p>\n</blockquote>\n<h2 id=\"rajula-vineet-reddy-https-github-com-rajula96reddy\"><a href=\"https://github.com/rajula96reddy\">Rajula Vineet Reddy</a></h2>\n<p>Rajula Vineet Reddy, a Junior Engineer at CERN, is a member of the Marketing Council team under SIG ContribEx . He also served as a release shadow for SIG Release during the 1.22 and 1.23 Kubernetes release cycles.</p>\n<p>He started looking at the Kubernetes project as part of a university project with the help of one of his professors. Over time, he spent a significant amount of time reading the project's documentation, Slack discussions, GitHub issues, and blogs, which helped him better grasp the Kubernetes project and piqued his interest in contributing upstream. One of his key contributions was his assistance with automation in the SIG ContribEx Upstream Marketing subproject.</p>\n<p>According to Rajula, attending project meetings and shadowing various project roles are vital for learning about the community.</p>\n<blockquote>\n<p><em>I find the community very helpful and it's always</em>\n“you get back as much as you contribute”.\n<em>The more involved you are, the more you will understand, get to learn and\ncontribute new things.</em></p>\n<p><em>The first step to</em> “come forward and start” <em>is hard. But it's all gonna be\nsmooth after that. Just take that jump.</em></p>\n</blockquote>\n<hr>\n<p>If you have any recommendations/suggestions for who we should interview next, please let us know in #sig-contribex. We're thrilled to have other folks assisting us in reaching out to even more wonderful individuals of the community. Your suggestions would be much appreciated.</p>\n<p>We'll see you all in the next one. Everyone, till then, have a happy contributing! 👋</p>","PublishedAt":"2022-01-10 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/01/10/meet-our-contributors-india-ep-01/","SourceName":"Kubernetes"}},{"node":{"ID":1235,"Title":"Blog: Kubernetes is Moving on From Dockershim: Commitments and Next Steps","Description":"<p><strong>Authors:</strong> Sergey Kanzhelev (Google), Jim Angel (Google), Davanum Srinivas (VMware), Shannon Kularathna (Google), Chris Short (AWS), Dawn Chen (Google)</p>\n<p>Kubernetes is removing dockershim in the upcoming v1.24 release. We're excited\nto reaffirm our community values by supporting open source container runtimes,\nenabling a smaller kubelet, and increasing engineering velocity for teams using\nKubernetes. If you <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/migrating-from-dockershim/find-out-runtime-you-use/\">use Docker Engine as a container runtime</a>\nfor your Kubernetes cluster, get ready to migrate in 1.24! To check if you're\naffected, refer to <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/migrating-from-dockershim/check-if-dockershim-removal-affects-you/\">Check whether dockershim removal affects you</a>.</p>\n<h2 id=\"why-we-re-moving-away-from-dockershim\">Why we’re moving away from dockershim</h2>\n<p>Docker was the first container runtime used by Kubernetes. This is one of the\nreasons why Docker is so familiar to many Kubernetes users and enthusiasts.\nDocker support was hardcoded into Kubernetes – a component the project refers to\nas dockershim.\nAs containerization became an industry standard, the Kubernetes project added support\nfor additional runtimes. This culminated in the implementation of the\ncontainer runtime interface (CRI), letting system components (like the kubelet)\ntalk to container runtimes in a standardized way. As a result, dockershim became\nan anomaly in the Kubernetes project.\nDependencies on Docker and dockershim have crept into various tools\nand projects in the CNCF ecosystem ecosystem, resulting in fragile code.</p>\n<p>By removing the\ndockershim CRI, we're embracing the first value of CNCF: &quot;<a href=\"https://github.com/cncf/foundation/blob/master/charter.md#3-values\">Fast is better than\nslow</a>&quot;.\nStay tuned for future communications on the topic!</p>\n<h2 id=\"deprecation-timeline\">Deprecation timeline</h2>\n<p>We <a href=\"https://kubernetes.io/blog/2020/12/08/kubernetes-1-20-release-announcement/\">formally announced</a> the dockershim deprecation in December 2020. Full removal is targeted\nin Kubernetes 1.24, in April 2022. This timeline\naligns with our <a href=\"https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-a-feature-or-behavior\">deprecation policy</a>,\nwhich states that deprecated behaviors must function for at least 1 year\nafter their announced deprecation.</p>\n<p>We'll support Kubernetes version 1.23, which includes\ndockershim, for another year in the Kubernetes project. For managed\nKubernetes providers, vendor support is likely to last even longer, but this is\ndependent on the companies themselves. Regardless, we're confident all cluster operations will have\ntime to migrate. If you have more questions about the dockershim removal, refer\nto the <a href=\"https://kubernetes.io/dockershim\">Dockershim Deprecation FAQ</a>.</p>\n<p>We asked you whether you feel prepared for the migration from dockershim in this\nsurvey: <a href=\"https://kubernetes.io/blog/2021/11/12/are-you-ready-for-dockershim-removal/\">Are you ready for Dockershim removal</a>.\nWe had over 600 responses. To everybody who took time filling out the survey,\nthank you.</p>\n<p>The results show that we still have a lot of ground to cover to help you to\nmigrate smoothly. Other container runtimes exist, and have been promoted\nextensively. However, many users told us they still rely on dockershim,\nand sometimes have dependencies that need to be re-worked. Some of these\ndependencies are outside of your control. Based on your feedback, here are some\nof the steps we are taking to help.</p>\n<h2 id=\"our-next-steps\">Our next steps</h2>\n<p>Based on the feedback you provided:</p>\n<ul>\n<li>CNCF and the 1.24 release team are committed to delivering documentation in\ntime for the 1.24 release. This includes more informative blog posts like this\none, updating existing code samples, tutorials, and tasks, and producing a\nmigration guide for cluster operators.</li>\n<li>We are reaching out to the rest of the CNCF community to help prepare them for\nthis change.</li>\n</ul>\n<p>If you're part of a project with dependencies on dockershim, or if you're\ninterested in helping with the migration effort, please join us! There's always\nroom for more contributors, whether to our transition tools or to our\ndocumentation. To get started, say hello in the\n<a href=\"https://kubernetes.slack.com/archives/C0BP8PW9G\">#sig-node</a>\nchannel on <a href=\"https://slack.kubernetes.io/\">Kubernetes Slack</a>!</p>\n<h2 id=\"final-thoughts\">Final thoughts</h2>\n<p>As a project, we've already seen cluster operators increasingly adopt other\ncontainer runtimes through 2021.\nWe believe there are no major blockers to migration. The steps we're taking to\nimprove the migration experience will light the path more clearly for you.</p>\n<p>We understand that migration from dockershim is yet another action you may need to\ndo to keep your Kubernetes infrastructure up to date. For most of you, this step\nwill be straightforward and transparent. In some cases, you will encounter\nhiccups or issues. The community has discussed at length whether postponing the\ndockershim removal would be helpful. For example, we recently talked about it in\nthe <a href=\"https://docs.google.com/document/d/1Ne57gvidMEWXR70OxxnRkYquAoMpt56o75oZtg-OeBg/edit#bookmark=id.r77y11bgzid\">SIG Node discussion on November 11th</a>\nand in the <a href=\"https://docs.google.com/document/d/1qazwMIHGeF3iUh5xMJIJ6PDr-S3bNkT8tNLRkSiOkOU/edit#bookmark=id.m0ir406av7jx\">Kubernetes Steering committee meeting held on December 6th</a>.\nWe already <a href=\"https://github.com/kubernetes/enhancements/pull/2481/\">postponed</a> it\nonce in 2021 because the adoption rate of other\nruntimes was lower than we wanted, which also gave us more time to identify\npotential blocking issues.</p>\n<p>At this point, we believe that the value that you (and Kubernetes) gain from\ndockershim removal makes up for the migration effort you'll have. Start planning\nnow to avoid surprises. We'll have more updates and guides before Kubernetes\n1.24 is released.</p>","PublishedAt":"2022-01-07 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2022/01/07/kubernetes-is-moving-on-from-dockershim/","SourceName":"Kubernetes"}},{"node":{"ID":783,"Title":"Obvious Ownership: A Sensible Humane Registry","Description":"Imagine yourself as an engineer who just joined SoundCloud. Besides meeting your colleagues and getting your new laptop, badge, and that…","PublishedAt":"2022-01-06 00:00:00+00:00","OriginURL":"https://developers.soundcloud.com/blog/obvious-ownership-humane-registry","SourceName":"Soundcloud"}},{"node":{"ID":463,"Title":"How to be the go-to engineer for product analytics","Description":"<figure><img src=\"https://mixpanel.com/wp-content/uploads/2022/01/MXP-Blog-GoToEngineerProductAnalytics-1920x1080-1-1024x576.png\" class=\"type:primaryImage\" /></figure>\n<p>Engineers are always looking for ways to differentiate themselves. Not only can niche expertise lock down employability, but it can also catapult one&#8217;s career in entirely unforeseen ways. One of those niches that&#8217;s become more valuable in recent years: product analytics. As data-driven product development continues to balloon in popularity, so does the need for</p>\n<p>The post <a rel=\"nofollow\" href=\"https://mixpanel.com/blog/how-to-be-the-go-to-engineer-for-product-analytics/\">How to be the go-to engineer for product analytics</a> appeared first on <a rel=\"nofollow\" href=\"https://mixpanel.com\">Mixpanel</a>.</p>\n","PublishedAt":"2022-01-03 22:54:00+00:00","OriginURL":"https://mixpanel.com/blog/how-to-be-the-go-to-engineer-for-product-analytics/","SourceName":"Mixpanel"}},{"node":{"ID":1100,"Title":"(Career) Change is the only constant","Description":"<p>This post is for Day 24 of Mercari Advent Calendar 2021, brought to you by @kaustubh from the Mercari Metadata Ecosystem team. I recently changed teams at Mercari, and I wanted to share some realizations I discovered along the way. We will briefly discuss the Great Resignation and also how to retain talent, for companies [&hellip;]</p>\n","PublishedAt":"2021-12-24 10:00:57+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20211224-career-change-is-the-only-constant/","SourceName":"Mercari"}},{"node":{"ID":1101,"Title":"Migrating a monolithic service under the bed (part 3 of 3)","Description":"<p>In the previous article, we covered the most challenging milestone of the Kauru migration project. We also introduced the PoC approach that the Product Catalog team adopted, and finally solved the schedule and management issue. Following that, this part 3 of 3 covers the final milestones of the migration project and concludes it by sharing [&hellip;]</p>\n","PublishedAt":"2021-12-23 16:36:17+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20211223-migrating-a-monolithic-service-under-the-bed-part-3-of-3/","SourceName":"Mercari"}},{"node":{"ID":1102,"Title":"Migrating a monolithic service under the bed (part 2 of 3)","Description":"<p>In the previous article, we covered what the Kauru monolithic service was, why Mercari decided to migrate it to microservices, and how the Product Catalog team achieved the first milestone of the migration project. Following that, this part 2 of 3 covers the most difficult milestone of the migration project. Milestone 2: Kauru as a [&hellip;]</p>\n","PublishedAt":"2021-12-23 16:36:14+00:00","OriginURL":"https://engineering.mercari.com/en/blog/entry/20211223-migrating-a-monolithic-service-under-the-bed-part-2-of-3/","SourceName":"Mercari"}}]}},"pageContext":{"limit":30,"skip":5040,"numPages":193,"currentPage":169}},"staticQueryHashes":["3649515864"]}