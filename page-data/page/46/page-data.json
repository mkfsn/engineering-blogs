{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/46","result":{"data":{"allPost":{"edges":[{"node":{"ID":4403,"Title":"Future-proofing Evernote’s foundations","Description":"<p>An update from product lead Federico Simionato on Evernote's tech upgrades, user experience, and a glimpse into what's next.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://evernote.com/blog/future-proofing-evernotes-foundations/\">Future-proofing Evernote’s foundations</a> appeared first on <a rel=\"nofollow\" href=\"https://evernote.com/blog\"></a>.</p>\n","PublishedAt":"2023-08-21 14:56:04+00:00","OriginURL":"https://evernote.com/blog/future-proofing-evernotes-foundations/","SourceName":"Evernote"}},{"node":{"ID":4400,"Title":"Application Security Report: Q2 2023","Description":"We are back with a quarterly update of our Application Security report. Read on to learn about new attack trends and insights visible from Cloudflare’s global network","PublishedAt":"2023-08-21 14:15:46+00:00","OriginURL":"http://blog.cloudflare.com/application-security-report-q2-2023/","SourceName":"Cloudflare"}},{"node":{"ID":4398,"Title":"An August reading list about online security and 2023 attacks landscape","Description":"Here is a reading list with 2023 trends, what you need to know about attacks, and a guide on how to stay protected using Cloudflare","PublishedAt":"2023-08-21 13:00:57+00:00","OriginURL":"http://blog.cloudflare.com/an-august-reading-list-about-online-security-and-2023-attacks-landscape/","SourceName":"Cloudflare"}},{"node":{"ID":4397,"Title":"Blog: Kubernetes 1.28: Improved failure handling for Jobs","Description":"<p><strong>Authors:</strong> Kevin Hannon (G-Research), Michał Woźniak (Google)</p>\n<p>This blog discusses two new features in Kubernetes 1.28 to improve Jobs for batch\nusers: <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-replacement-policy\">Pod replacement policy</a>\nand <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#backoff-limit-per-index\">Backoff limit per index</a>.</p>\n<p>These features continue the effort started by the\n<a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-failure-policy\">Pod failure policy</a>\nto improve the handling of Pod failures in a Job.</p>\n<h2 id=\"pod-replacement-policy\">Pod replacement policy</h2>\n<p>By default, when a pod enters a terminating state (e.g. due to preemption or\neviction), Kubernetes immediately creates a replacement Pod. Therefore, both Pods are running\nat the same time. In API terms, a pod is considered terminating when it has a\n<code>deletionTimestamp</code> and it has a phase <code>Pending</code> or <code>Running</code>.</p>\n<p>The scenario when two Pods are running at a given time is problematic for\nsome popular machine learning frameworks, such as\nTensorFlow and <a href=\"https://jax.readthedocs.io/en/latest/\">JAX</a>, which require at most one Pod running at the same time,\nfor a given index.\nTensorflow gives the following error if two pods are running for a given index.</p>\n<pre tabindex=\"0\"><code> /job:worker/task:4: Duplicate task registration with task_name=/job:worker/replica:0/task:4\n</code></pre><p>See more details in the (<a href=\"https://github.com/kubernetes/kubernetes/issues/115844\">issue</a>).</p>\n<p>Creating the replacement Pod before the previous one fully terminates can also\ncause problems in clusters with scarce resources or with tight budgets, such as:</p>\n<ul>\n<li>cluster resources can be difficult to obtain for Pods pending to be scheduled,\nas Kubernetes might take a long time to find available nodes until the existing\nPods are fully terminated.</li>\n<li>if cluster autoscaler is enabled, the replacement Pods might produce undesired\nscale ups.</li>\n</ul>\n<h3 id=\"pod-replacement-policy-how-to-use\">How can you use it?</h3>\n<p>This is an alpha feature, which you can enable by turning on <code>JobPodReplacementPolicy</code>\n<a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gate</a> in\nyour cluster.</p>\n<p>Once the feature is enabled in your cluster, you can use it by creating a new Job that specifies a\n<code>podReplacementPolicy</code> field as shown here:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Job<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>new<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>...<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">podReplacementPolicy</span>:<span style=\"color:#bbb\"> </span>Failed<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>...<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>In that Job, the Pods would only be replaced once they reached the <code>Failed</code> phase,\nand not when they are terminating.</p>\n<p>Additionally, you can inspect the <code>.status.terminating</code> field of a Job. The value\nof the field is the number of Pods owned by the Job that are currently terminating.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-shell\" data-lang=\"shell\"><span style=\"display:flex;\"><span>kubectl get jobs/myjob -o<span style=\"color:#666\">=</span><span style=\"color:#b8860b\">jsonpath</span><span style=\"color:#666\">=</span><span style=\"color:#b44\">&#39;{.items[*].status.terminating}&#39;</span>\n</span></span></code></pre></div><pre tabindex=\"0\"><code>3 # three Pods are terminating and have not yet reached the Failed phase\n</code></pre><p>This can be particularly useful for external queueing controllers, such as\n<a href=\"https://github.com/kubernetes-sigs/kueue\">Kueue</a>, that tracks quota\nfrom running Pods of a Job until the resources are reclaimed from\nthe currently terminating Job.</p>\n<p>Note that the <code>podReplacementPolicy: Failed</code> is the default when using a custom\n<a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-failure-policy\">Pod failure policy</a>.</p>\n<h2 id=\"backoff-limit-per-index\">Backoff limit per index</h2>\n<p>By default, Pod failures for <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#completion-mode\">Indexed Jobs</a>\nare counted towards the global limit of retries, represented by <code>.spec.backoffLimit</code>.\nThis means, that if there is a consistently failing index, it is restarted\nrepeatedly until it exhausts the limit. Once the limit is reached the entire\nJob is marked failed and some indexes may never be even started.</p>\n<p>This is problematic for use cases where you want to handle Pod failures for\nevery index independently. For example, if you use Indexed Jobs for running\nintegration tests where each index corresponds to a testing suite. In that case,\nyou may want to account for possible flake tests allowing for 1 or 2 retries per\nsuite. There might be some buggy suites, making the corresponding\nindexes fail consistently. In that case you may prefer to limit retries for\nthe buggy suites, yet allowing other suites to complete.</p>\n<p>The feature allows you to:</p>\n<ul>\n<li>complete execution of all indexes, despite some indexes failing.</li>\n<li>better utilize the computational resources by avoiding unnecessary retries of consistently failing indexes.</li>\n</ul>\n<h3 id=\"backoff-limit-per-index-how-to-use\">How can you use it?</h3>\n<p>This is an alpha feature, which you can enable by turning on the\n<code>JobBackoffLimitPerIndex</code>\n<a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gate</a>\nin your cluster.</p>\n<p>Once the feature is enabled in your cluster, you can create an Indexed Job with the\n<code>.spec.backoffLimitPerIndex</code> field specified.</p>\n<h4 id=\"example\">Example</h4>\n<p>The following example demonstrates how to use this feature to make sure the\nJob executes all indexes (provided there is no other reason for the early Job\ntermination, such as reaching the <code>activeDeadlineSeconds</code> timeout, or being\nmanually deleted by the user), and the number of failures is controlled per index.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>batch/v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Job<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>job-backoff-limit-per-index-execute-all<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">completions</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">8</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">parallelism</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">2</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">completionMode</span>:<span style=\"color:#bbb\"> </span>Indexed<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">backoffLimitPerIndex</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">1</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">template</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">restartPolicy</span>:<span style=\"color:#bbb\"> </span>Never<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">containers</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>example<span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># this example container returns an error, and fails,</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># when it is run as the second or third index in any Job</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#080;font-style:italic\"># (even after a retry) </span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">image</span>:<span style=\"color:#bbb\"> </span>python<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">command</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- python3<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- -c<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- |<span style=\"color:#b44;font-style:italic\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44;font-style:italic\"> import os, sys, time\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44;font-style:italic\"> id = int(os.environ.get(&#34;JOB_COMPLETION_INDEX&#34;))\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44;font-style:italic\"> if id == 1 or id == 2:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44;font-style:italic\"> sys.exit(1)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#b44;font-style:italic\"> time.sleep(1)</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>Now, inspect the Pods after the job is finished:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-sh\" data-lang=\"sh\"><span style=\"display:flex;\"><span>kubectl get pods -l job-name<span style=\"color:#666\">=</span>job-backoff-limit-per-index-execute-all\n</span></span></code></pre></div><p>Returns output similar to this:</p>\n<pre tabindex=\"0\"><code>NAME READY STATUS RESTARTS AGE\njob-backoff-limit-per-index-execute-all-0-b26vc 0/1 Completed 0 49s\njob-backoff-limit-per-index-execute-all-1-6j5gd 0/1 Error 0 49s\njob-backoff-limit-per-index-execute-all-1-6wd82 0/1 Error 0 37s\njob-backoff-limit-per-index-execute-all-2-c66hg 0/1 Error 0 32s\njob-backoff-limit-per-index-execute-all-2-nf982 0/1 Error 0 43s\njob-backoff-limit-per-index-execute-all-3-cxmhf 0/1 Completed 0 33s\njob-backoff-limit-per-index-execute-all-4-9q6kq 0/1 Completed 0 28s\njob-backoff-limit-per-index-execute-all-5-z9hqf 0/1 Completed 0 28s\njob-backoff-limit-per-index-execute-all-6-tbkr8 0/1 Completed 0 23s\njob-backoff-limit-per-index-execute-all-7-hxjsq 0/1 Completed 0 22s\n</code></pre><p>Additionally, you can take a look at the status for that Job:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-sh\" data-lang=\"sh\"><span style=\"display:flex;\"><span>kubectl get <span style=\"color:#a2f\">jobs</span> job-backoff-limit-per-index-fail-index -o yaml\n</span></span></code></pre></div><p>The output ends with a <code>status</code> similar to:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">status</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">completedIndexes</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">0</span>,<span style=\"color:#666\">3-7</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">failedIndexes</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">1</span>,<span style=\"color:#666\">2</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">succeeded</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">6</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">failed</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">4</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">conditions</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">message</span>:<span style=\"color:#bbb\"> </span>Job has failed indexes<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">reason</span>:<span style=\"color:#bbb\"> </span>FailedIndexes<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">status</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;True&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">type</span>:<span style=\"color:#bbb\"> </span>Failed<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>Here, indexes <code>1</code> and <code>2</code> were both retried once. After the second failure,\nin each of them, the specified <code>.spec.backoffLimitPerIndex</code> was exceeded, so\nthe retries were stopped. For comparison, if the per-index backoff was disabled,\nthen the buggy indexes would retry until the global <code>backoffLimit</code> was exceeded,\nand then the entire Job would be marked failed, before some of the higher\nindexes are started.</p>\n<h2 id=\"how-can-you-learn-more\">How can you learn more?</h2>\n<ul>\n<li>Read the user-facing documentation for <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-replacement-policy\">Pod replacement policy</a>,\n<a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#backoff-limit-per-index\">Backoff limit per index</a>, and\n<a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-failure-policy\">Pod failure policy</a></li>\n<li>Read the KEPs for <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/3939-allow-replacement-when-fully-terminated\">Pod Replacement Policy</a>,\n<a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/3850-backoff-limits-per-index-for-indexed-jobs\">Backoff limit per index</a>, and\n<a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/3329-retriable-and-non-retriable-failures\">Pod failure policy</a>.</li>\n</ul>\n<h2 id=\"getting-involved\">Getting Involved</h2>\n<p>These features were sponsored by <a href=\"https://github.com/kubernetes/community/tree/master/sig-apps\">SIG Apps</a>. Batch use cases are actively\nbeing improved for Kubernetes users in the\n<a href=\"https://github.com/kubernetes/community/tree/master/wg-batch\">batch working group</a>.\nWorking groups are relatively short-lived initiatives focused on specific goals.\nThe goal of the WG Batch is to improve experience for batch workload users, offer support for\nbatch processing use cases, and enhance the\nJob API for common use cases. If that interests you, please join the working\ngroup either by subscriping to our\n<a href=\"https://groups.google.com/a/kubernetes.io/g/wg-batch\">mailing list</a> or on\n<a href=\"https://kubernetes.slack.com/messages/wg-batch\">Slack</a>.</p>\n<h2 id=\"acknowledgments\">Acknowledgments</h2>\n<p>As with any Kubernetes feature, multiple people contributed to getting this\ndone, from testing and filing bugs to reviewing code.</p>\n<p>We would not have been able to achieve either of these features without Aldo\nCulquicondor (Google) providing excellent domain knowledge and expertise\nthroughout the Kubernetes ecosystem.</p>","PublishedAt":"2023-08-21 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/08/21/kubernetes-1-28-jobapi-update/","SourceName":"Kubernetes"}},{"node":{"ID":4399,"Title":"Generative AI could change the healthcare industry faster than you think","Description":"","PublishedAt":"2023-08-21 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/generative-ai-healthcare-industry","SourceName":"Elastic"}},{"node":{"ID":4402,"Title":"Run Atomic Red Team detection tests in container environments with Datadog’s Workload Security Evaluator","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/workload-security-evaluator/evaluator-hero.png\" width=\"100%\"/>Ensuring your threat detection rules work as intended and provide sufficient coverage for major threats is a critical component of a security program. Red Canary’s Atomic Red Team—an open source library of detection tests that help teams validate the effectiveness of their security measures—has historically been the tool of choice for detection testing. But while the methods in Atomic Red Team are tried and true for traditional Windows and Linux hosts, evaluating detection coverage for containers and cloud environments can be more difficult and often requires extensive manual work.","PublishedAt":"2023-08-21 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/workload-security-evaluator/","SourceName":"Datadog"}},{"node":{"ID":4406,"Title":"Integrate Sigma detection rules with Datadog Cloud SIEM","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/sigma-rules-datadog-cloud-siem/dd_cloud_siem_open_source_sigma_support_blog_integration_230818_final.png\" width=\"100%\"/>As organizations grow, they naturally need to analyze logs from more data sources. But as these data sources expand in number and type, it becomes more difficult for teams to scale their security detection rules to keep up with the ever-changing threat landscape. Sigma is an open source project that aims to address this challenge. By leveraging the expertise of the open source community, Sigma enables security teams to implement out-of-the-box rules that cover a wide range of threat scenarios.","PublishedAt":"2023-08-21 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/sigma-rules-datadog-cloud-siem/","SourceName":"Datadog"}},{"node":{"ID":4396,"Title":"The Overflow #191: Between product and engineering","Description":"<p>Understanding SRE, LLM courtesy, and AI drift.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/08/18/the-overflow-191-between-product-and-engineering/\">The Overflow #191: Between product and engineering</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-08-18 13:00:00+00:00","OriginURL":"https://stackoverflow.blog/2023/08/18/the-overflow-191-between-product-and-engineering/","SourceName":"Stack Overflow"}},{"node":{"ID":4395,"Title":"Developing Open GPT for Miro: Bringing the power of ChatGPT to your board","Description":"","PublishedAt":"2023-08-18 11:39:26+00:00","OriginURL":"https://medium.com/miro-engineering/developing-open-gpt-for-miro-bringing-the-power-of-chatgpt-to-your-board-b0516b517760?source=rss----555f7fd62a50---4","SourceName":"Miro Engineering"}},{"node":{"ID":4392,"Title":"Semantic search without the napalm grandma exploit (Ep. 600)","Description":"<p>Ben and senior software engineer Kyle Mitofsky are joined by two people who worked on the launch of Overflow AI: director of data science and data platform Michael Foree and senior software developer Alex Warren. They talk about how and why Stack Overflow launched semantic search, how to ensure a knowledge base is trustworthy, and why user prompts can make LLMs vulnerable to exploits.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/08/18/semantic-search-without-the-napalm-grandma-exploit-ep-600/\">Semantic search without the napalm grandma exploit (Ep. 600)</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-08-18 04:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/08/18/semantic-search-without-the-napalm-grandma-exploit-ep-600/","SourceName":"Stack Overflow"}},{"node":{"ID":4389,"Title":"Blog: Kubernetes v1.28: Retroactive Default StorageClass move to GA","Description":"<p><strong>Author:</strong> Roman Bednář (Red Hat)</p>\n<p>Announcing graduation to General Availability (GA) - Retroactive Default StorageClass Assignment in Kubernetes v1.28!</p>\n<p>Kubernetes SIG Storage team is thrilled to announce that the &quot;Retroactive Default StorageClass Assignment&quot; feature,\nintroduced as an alpha in Kubernetes v1.25, has now graduated to GA and is officially part of the Kubernetes v1.28 release.\nThis enhancement brings a significant improvement to how default\n<a href=\"https://kubernetes.io/docs/concepts/storage/storage-classes/\">StorageClasses</a> are assigned to PersistentVolumeClaims (PVCs).</p>\n<p>With this feature enabled, you no longer need to create a default StorageClass first and then a PVC to assign the class.\nInstead, any PVCs without a StorageClass assigned will now be retroactively updated to include the default StorageClass.\nThis enhancement ensures that PVCs no longer get stuck in an unbound state, and storage provisioning works seamlessly,\neven when a default StorageClass is not defined at the time of PVC creation.</p>\n<h2 id=\"what-changed\">What changed?</h2>\n<p>The PersistentVolume (PV) controller has been modified to automatically assign a default StorageClass to any unbound\nPersistentVolumeClaim with the <code>storageClassName</code> not set. Additionally, the PersistentVolumeClaim\nadmission validation mechanism within\nthe API server has been adjusted to allow changing values from an unset state to an actual StorageClass name.</p>\n<h2 id=\"how-to-use-it\">How to use it?</h2>\n<p>As this feature has graduated to GA, there's no need to enable a feature gate anymore.\nSimply make sure you are running Kubernetes v1.28 or later, and the feature will be available for use.</p>\n<p>For more details, read about\n<a href=\"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#retroactive-default-storageclass-assignment\">default StorageClass assignment</a> in the Kubernetes documentation.\nYou can also read the previous <a href=\"https://kubernetes.io/blog/2023/01/05/retroactive-default-storage-class/\">blog post</a> announcing beta graduation in v1.26.</p>\n<p>To provide feedback, join our <a href=\"https://github.com/kubernetes/community/tree/master/sig-storage\">Kubernetes Storage Special-Interest-Group</a> (SIG)\nor participate in discussions on our <a href=\"https://app.slack.com/client/T09NY5SBT/C09QZFCE5\">public Slack channel</a>.</p>","PublishedAt":"2023-08-18 00:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/08/18/retroactive-default-storage-class-ga/","SourceName":"Kubernetes"}},{"node":{"ID":4390,"Title":"Adopting dbt as the Data Transformation Tool at Instacart","Description":"","PublishedAt":"2023-08-17 23:50:21+00:00","OriginURL":"https://tech.instacart.com/adopting-dbt-as-the-data-transformation-tool-at-instacart-36c74bc407df?source=rss----587883b5d2ee---4","SourceName":"Instacart"}},{"node":{"ID":4391,"Title":"AVA Discovery View: Surfacing Authentic Moments","Description":"","PublishedAt":"2023-08-17 22:07:14+00:00","OriginURL":"https://netflixtechblog.com/ava-discovery-view-surfacing-authentic-moments-b8cd145491cc?source=rss----2615bd06b42e---4","SourceName":"Netflix"}},{"node":{"ID":4388,"Title":"mTLS: When certificate authentication is done wrong","Description":"<p>In this post, we'll deep dive into some interesting attacks on mTLS authentication. We'll have a look at implementation vulnerabilities and how developers can make their mTLS systems vulnerable to user impersonation, privilege escalation, and information leakages.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://github.blog/2023-08-17-mtls-when-certificate-authentication-is-done-wrong/\">mTLS: When certificate authentication is done wrong</a> appeared first on <a rel=\"nofollow\" href=\"https://github.blog\">The GitHub Blog</a>.</p>\n","PublishedAt":"2023-08-17 21:22:26+00:00","OriginURL":"https://github.blog/2023-08-17-mtls-when-certificate-authentication-is-done-wrong/","SourceName":"GitHub"}},{"node":{"ID":4386,"Title":"New – Amazon EC2 Hpc7a Instances Powered by 4th Gen AMD EPYC Processors Optimized for High Performance Computing","Description":"In January 2022, we launched Amazon EC2 Hpc6a instances for customers to efficiently run their compute-bound high performance computing (HPC) workloads on AWS with up to 65 percent better price performance over comparable x86-based compute-optimized instances. As their jobs grow more complex, customers have asked for more cores with more compute performance and more memory […]","PublishedAt":"2023-08-17 19:55:06+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/new-amazon-ec2-hpc7a-instances-powered-by-4th-gen-amd-epyc-processors-optimized-for-high-performance-computing/","SourceName":"AWS"}},{"node":{"ID":4384,"Title":"CDK for Terraform 0.18 reduces synthesization time","Description":"The newest CDKTF release cuts synthesization times for TypeScript, Python, and Java, drastically improving the user experience.","PublishedAt":"2023-08-17 14:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/cdk-for-terraform-0-18-reduces-synthesization-time","SourceName":"HashiCorp"}},{"node":{"ID":4382,"Title":"How to Ensure Supply Chain Security for AI Applications","Description":"<p>Machine Learning (ML) is at the heart of the boom in AI Applications, revolutionizing various domains. From powering intelligent Large Language Model (LLM) based chatbots like ChatGPT and Bard, to enabling text-to-AI image generators like Stable Diffusion, ML continues to drive innovation. Its transformative impact advances multiple fields from genetics to medicine to finance. Without [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/how-to-ensure-supply-chain-security-for-ai-applications/\">How to Ensure Supply Chain Security for AI Applications</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2023-08-17 13:20:29+00:00","OriginURL":"https://blog.cloudera.com/how-to-ensure-supply-chain-security-for-ai-applications/","SourceName":"Cloudera"}},{"node":{"ID":4383,"Title":"Elastic Stack 8.9.1 released ","Description":"","PublishedAt":"2023-08-17 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/elastic-stack-8-9-1-released","SourceName":"Elastic"}},{"node":{"ID":4385,"Title":"Changes to Datadog Cloud Security Management","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/cloud-security-management-changes/CSM-product-split-announcement_230815.png\" width=\"100%\"/>In order to better meet organizations&rsquo; specific requirements for securing their environments, we are making changes to our Cloud Security Management product. On August 1, Datadog introduced new offerings in Cloud Security Management: CSM Pro and CSM Enterprise. Alongside Datadog Cloud Workload Security, these distinct packages provide customers with security capabilities tailored to their particular use cases and needs.CSM Pro provides continuous security scanning of your cloud and container environments for misconfigurations and resource vulnerabilities.","PublishedAt":"2023-08-17 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/cloud-security-management-changes/","SourceName":"Datadog"}},{"node":{"ID":4387,"Title":"Easily install the Datadog Agent using AWS Systems Manager","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/datadog-agent-aws-ssm/hero.png\" width=\"100%\"/>AWS Systems Manager (SSM), an end-to-end management solution for AWS resources, provides a marketplace of pre-packaged software scripts for SSM-managed Windows and Linux instances, enabling AWS users to automatically install custom software on large groups of instances.Datadog now offers documents that enable easy, one-click installation of the latest version of our Agent for both Linux and Windows through the AWS SSM marketplace, allowing joint Datadog and AWS users to install the Agent without having to configure the Agent YAML file.","PublishedAt":"2023-08-17 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/datadog-agent-aws-ssm/","SourceName":"Datadog"}},{"node":{"ID":4379,"Title":"New Accreditations for Cloudera Partners","Description":"<p>Cloudera Partner Network Introduces New Sales, Technical and Industry Accreditations</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/new-accreditations-for-cloudera-partners/\">New Accreditations for Cloudera Partners</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2023-08-16 20:30:32+00:00","OriginURL":"https://blog.cloudera.com/new-accreditations-for-cloudera-partners/","SourceName":"Cloudera"}},{"node":{"ID":4380,"Title":"Blog: Kubernetes 1.28: Non-Graceful Node Shutdown Moves to GA","Description":"<p><strong>Authors:</strong> Xing Yang (VMware) and Ashutosh Kumar (Elastic)</p>\n<p>The Kubernetes Non-Graceful Node Shutdown feature is now GA in Kubernetes v1.28.\nIt was introduced as\n<a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-storage/2268-non-graceful-shutdown\">alpha</a>\nin Kubernetes v1.24, and promoted to\n<a href=\"https://kubernetes.io/blog/2022/12/16/kubernetes-1-26-non-graceful-node-shutdown-beta/\">beta</a>\nin Kubernetes v1.26.\nThis feature allows stateful workloads to restart on a different node if the\noriginal node is shutdown unexpectedly or ends up in a non-recoverable state\nsuch as the hardware failure or unresponsive OS.</p>\n<h2 id=\"what-is-a-non-graceful-node-shutdown\">What is a Non-Graceful Node Shutdown</h2>\n<p>In a Kubernetes cluster, a node can be shutdown in a planned graceful way or\nunexpectedly because of reasons such as power outage or something else external.\nA node shutdown could lead to workload failure if the node is not drained\nbefore the shutdown. A node shutdown can be either graceful or non-graceful.</p>\n<p>The <a href=\"https://kubernetes.io/blog/2021/04/21/graceful-node-shutdown-beta/\">Graceful Node Shutdown</a>\nfeature allows Kubelet to detect a node shutdown event, properly terminate the pods,\nand release resources, before the actual shutdown.</p>\n<p>When a node is shutdown but not detected by Kubelet's Node Shutdown Manager,\nthis becomes a non-graceful node shutdown.\nNon-graceful node shutdown is usually not a problem for stateless apps, however,\nit is a problem for stateful apps.\nThe stateful application cannot function properly if the pods are stuck on the\nshutdown node and are not restarting on a running node.</p>\n<p>In the case of a non-graceful node shutdown, you can manually add an <code>out-of-service</code> taint on the Node.</p>\n<pre tabindex=\"0\"><code>kubectl taint nodes &lt;node-name&gt; node.kubernetes.io/out-of-service=nodeshutdown:NoExecute\n</code></pre><p>This taint triggers pods on the node to be forcefully deleted if there are no\nmatching tolerations on the pods. Persistent volumes attached to the shutdown node\nwill be detached, and new pods will be created successfully on a different running\nnode.</p>\n<p><strong>Note:</strong> Before applying the out-of-service taint, you must verify that a node is\nalready in shutdown or power-off state (not in the middle of restarting).</p>\n<p>Once all the workload pods that are linked to the out-of-service node are moved to\na new running node, and the shutdown node has been recovered, you should remove that\ntaint on the affected node after the node is recovered.</p>\n<h2 id=\"what-s-new-in-stable\">What’s new in stable</h2>\n<p>With the promotion of the Non-Graceful Node Shutdown feature to stable, the\nfeature gate <code>NodeOutOfServiceVolumeDetach</code> is locked to true on\n<code>kube-controller-manager</code> and cannot be disabled.</p>\n<p>Metrics <code>force_delete_pods_total</code> and <code>force_delete_pod_errors_total</code> in the\nPod GC Controller are enhanced to account for all forceful pods deletion.\nA reason is added to the metric to indicate whether the pod is forcefully deleted\nbecause it is terminated, orphaned, terminating with the <code>out-of-service</code> taint,\nor terminating and unscheduled.</p>\n<p>A &quot;reason&quot; is also added to the metric <code>attachdetach_controller_forced_detaches</code>\nin the Attach Detach Controller to indicate whether the force detach is caused by\nthe <code>out-of-service</code> taint or a timeout.</p>\n<h2 id=\"what-s-next\">What’s next?</h2>\n<p>This feature requires a user to manually add a taint to the node to trigger\nworkloads failover and remove the taint after the node is recovered.\nIn the future, we plan to find ways to automatically detect and fence nodes\nthat are shutdown/failed and automatically failover workloads to another node.</p>\n<h2 id=\"how-can-i-learn-more\">How can I learn more?</h2>\n<p>Check out additional documentation on this feature\n<a href=\"https://kubernetes.io/docs/concepts/architecture/nodes/#non-graceful-node-shutdown\">here</a>.</p>\n<h2 id=\"how-to-get-involved\">How to get involved?</h2>\n<p>We offer a huge thank you to all the contributors who helped with design,\nimplementation, and review of this feature and helped move it from alpha, beta, to stable:</p>\n<ul>\n<li>Michelle Au (<a href=\"https://github.com/msau42\">msau42</a>)</li>\n<li>Derek Carr (<a href=\"https://github.com/derekwaynecarr\">derekwaynecarr</a>)</li>\n<li>Danielle Endocrimes (<a href=\"https://github.com/endocrimes\">endocrimes</a>)</li>\n<li>Baofa Fan (<a href=\"https://github.com/carlory\">carlory</a>)</li>\n<li>Tim Hockin (<a href=\"https://github.com/thockin\">thockin</a>)</li>\n<li>Ashutosh Kumar (<a href=\"https://github.com/sonasingh46\">sonasingh46</a>)</li>\n<li>Hemant Kumar (<a href=\"https://github.com/gnufied\">gnufied</a>)</li>\n<li>Yuiko Mouri (<a href=\"https://github.com/YuikoTakada\">YuikoTakada</a>)</li>\n<li>Mrunal Patel (<a href=\"https://github.com/mrunalp\">mrunalp</a>)</li>\n<li>David Porter (<a href=\"https://github.com/bobbypage\">bobbypage</a>)</li>\n<li>Yassine Tijani (<a href=\"https://github.com/yastij\">yastij</a>)</li>\n<li>Jing Xu (<a href=\"https://github.com/jingxu97\">jingxu97</a>)</li>\n<li>Xing Yang (<a href=\"https://github.com/xing-yang\">xing-yang</a>)</li>\n</ul>\n<p>This feature is a collaboration between SIG Storage and SIG Node.\nFor those interested in getting involved with the design and development of any\npart of the Kubernetes Storage system, join the Kubernetes Storage Special\nInterest Group (SIG).\nFor those interested in getting involved with the design and development of the\ncomponents that support the controlled interactions between pods and host\nresources, join the Kubernetes Node SIG.</p>","PublishedAt":"2023-08-16 18:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/08/16/kubernetes-1-28-non-graceful-node-shutdown-ga/","SourceName":"Kubernetes"}},{"node":{"ID":4381,"Title":"Curbing Connection Churn in Zuul","Description":"","PublishedAt":"2023-08-16 17:55:48+00:00","OriginURL":"https://netflixtechblog.com/curbing-connection-churn-in-zuul-2feb273a3598?source=rss----2615bd06b42e---4","SourceName":"Netflix"}},{"node":{"ID":4377,"Title":"Join AWS Hybrid Cloud & Edge Day to Learn How to Deploy Your Applications in the Everywhere Cloud","Description":"In his keynote of AWS re:Invent 2021, Dr. Werner Vogels shared the insight of how “the everywhere cloud” is bringing AWS to new locales through AWS hardware and services and spotlighted it as one of his tech predictions for 2022 and beyond in his blog post. “What we will see in 2022, and even more […]","PublishedAt":"2023-08-16 16:47:44+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/join-aws-hybrid-cloud-edge-day-to-learn-how-to-deploy-your-applications-in-the-everywhere-cloud/","SourceName":"AWS"}},{"node":{"ID":4378,"Title":"The Next Era of Data at Instacart","Description":"","PublishedAt":"2023-08-16 16:14:54+00:00","OriginURL":"https://tech.instacart.com/the-next-era-of-data-at-instacart-e081d8dfa162?source=rss----587883b5d2ee---4","SourceName":"Instacart"}},{"node":{"ID":4375,"Title":"Introducing Cloudflare's 2023 phishing threats report","Description":"The 2023 Phishing Threats Report analyzes millions of malicious emails, brand impersonation examples, identity deception, and other key attack trends based on email security data from a 12-month period","PublishedAt":"2023-08-16 09:13:17+00:00","OriginURL":"http://blog.cloudflare.com/2023-phishing-report/","SourceName":"Cloudflare"}},{"node":{"ID":4393,"Title":"Making event-driven development predictable with Discover","Description":"<p>SPONSORED BY DISCOVER FINANCIAL SERVICES On this sponsored episode of the podcast, Ben and Ryan chat with Paul Manning and Emanuele Pugliese of Discover Financial about the tech that goes into payments and the way they approach developer experience and architecture. They talk about domain-driven design, event-driven architecture, Kafka Streams, and how they leverage all…</p>\n<p>The post <a rel=\"nofollow\" href=\"https://stackoverflow.blog/2023/08/16/making-event-driven-development-predictable-with-discover/\">Making event-driven development predictable with Discover</a> appeared first on <a rel=\"nofollow\" href=\"https://stackoverflow.blog\">Stack Overflow Blog</a>.</p>\n","PublishedAt":"2023-08-16 04:40:00+00:00","OriginURL":"https://stackoverflow.blog/2023/08/16/making-event-driven-development-predictable-with-discover/","SourceName":"Stack Overflow"}},{"node":{"ID":4376,"Title":"Optimizing cloud resources and cost with APM metadata in Elastic Observability","Description":"","PublishedAt":"2023-08-16 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/optimize-cloud-resources-cost-apm-metadata-elastic-observability","SourceName":"Elastic"}},{"node":{"ID":4457,"Title":"Searching by music: Leveraging vector search for audio information retrieval","Description":"","PublishedAt":"2023-08-16 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/searching-by-music-leveraging-vector-search-audio-information-retrieval","SourceName":"Elastic"}},{"node":{"ID":4374,"Title":"New – Amazon EC2 M7a General Purpose Instances Powered by 4th Gen AMD EPYC Processors","Description":"In November 2021, we launched Amazon EC2 M6a instances, powered by 3rd Gen AMD EPYC (Milan) processors, running at frequencies up to 3.6 GHz, which offer you up to 35 percent improvement in price performance compared to M5a instances. Many customers who run workloads that are dependent on x86 instructions, such as SAP, are looking […]","PublishedAt":"2023-08-15 22:11:37+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/new-amazon-ec2-m7a-general-purpose-instances-powered-by-4th-gen-amd-epyc-processors/","SourceName":"AWS"}}]}},"pageContext":{"limit":30,"skip":1350,"numPages":193,"currentPage":46}},"staticQueryHashes":["3649515864"]}