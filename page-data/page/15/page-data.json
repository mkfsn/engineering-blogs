{"componentChunkName":"component---src-templates-blog-list-tsx","path":"/page/15","result":{"data":{"allPost":{"edges":[{"node":{"ID":5164,"Title":"Data Quality Score: The next chapter of data quality at Airbnb","Description":"","PublishedAt":"2023-11-28 19:37:19+00:00","OriginURL":"https://medium.com/airbnb-engineering/data-quality-score-the-next-chapter-of-data-quality-at-airbnb-851dccda19c3?source=rss----53c7c27702d5---4","SourceName":"Airbnb"}},{"node":{"ID":5163,"Title":"Cloudera’s QATS Certification for Dell PowerScale Unleashes a New Era of Data Management","Description":"<p>With its rise in popularity generative AI has emerged as a top CEO priority, and the importance of performant, seamless, and secure data management and analytics solutions to power those AI applications is essential. Cloudera Private Cloud Data Services is a comprehensive platform that empowers organizations to deliver trusted enterprise data at scale in order [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.cloudera.com/clouderas-qats-certification-for-dell-powerscale-unleashes-a-new-era-of-data-management/\">Cloudera&#8217;s QATS Certification for Dell PowerScale Unleashes a New Era of Data Management</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.cloudera.com\">Cloudera Blog</a>.</p>\n","PublishedAt":"2023-11-28 19:15:35+00:00","OriginURL":"https://blog.cloudera.com/clouderas-qats-certification-for-dell-powerscale-unleashes-a-new-era-of-data-management/","SourceName":"Cloudera"}},{"node":{"ID":5154,"Title":"New generative AI capabilities for Amazon DataZone to further simplify data cataloging and discovery (preview)","Description":"Today, we are announcing a preview of an automation feature backed by generative artificial intelligence (AI) for Amazon DataZone that will dramatically decrease the amount of time needed to provide context for organizational data. The new feature can automate the traditionally labor-intensive process of data cataloging. Powered by the large language models (LLMs) of Amazon […]","PublishedAt":"2023-11-28 18:09:27+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/new-generative-ai-capabilities-for-amazon-datazone-to-further-simplify-data-cataloging-and-discovery-preview/","SourceName":"AWS"}},{"node":{"ID":5155,"Title":"Amazon DynamoDB zero-ETL integration with Amazon OpenSearch Service is now available","Description":"Today, we are announcing the general availability of Amazon DynamoDB zero-ETL integration with Amazon OpenSearch Service, which lets you perform a search on your DynamoDB data by automatically replicating and transforming it without custom code or infrastructure. This zero-ETL integration reduces the operational burden and cost involved in writing code for a data pipeline architecture, […]","PublishedAt":"2023-11-28 18:06:25+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/amazon-dynamodb-zero-etl-integration-with-amazon-opensearch-service-is-now-generally-available/","SourceName":"AWS"}},{"node":{"ID":5208,"Title":"Blog: New Experimental Features in Gateway API v1.0","Description":"<p><em><strong>Authors:</strong></em> Candace Holman (Red Hat), Dave Protasowski (VMware), Gaurav K Ghildiyal (Google), John Howard (Google), Simone Rodigari (IBM)</p>\n<p>Recently, the <a href=\"https://gateway-api.sigs.k8s.io/\">Gateway API</a> <a href=\"https://kubernetes.io/blog/2023/10/31/gateway-api-ga/\">announced its v1.0 GA release</a>, marking a huge milestone for the project.</p>\n<p>Along with stabilizing some of the core functionality in the API, a number of exciting new <em>experimental</em> features have been added.</p>\n<h2 id=\"backend-tls-policy\">Backend TLS Policy</h2>\n<p><code>BackendTLSPolicy</code> is a new Gateway API type used for specifying the TLS configuration of the connection from the Gateway to backend Pods via the Service API object.\nIt is specified as a <a href=\"https://gateway-api.sigs.k8s.io/geps/gep-713/#direct-policy-attachment\">Direct PolicyAttachment</a> without defaults or overrides, applied to a Service that accesses a backend, where the BackendTLSPolicy resides in the same namespace as the Service to which it is applied.\nAll Gateway API Routes that point to a referenced Service should respect a configured <code>BackendTLSPolicy</code>.</p>\n<p>While there were existing ways provided for <a href=\"https://gateway-api.sigs.k8s.io/guides/tls/#tls-configuration\">TLS to be configured for edge and passthrough termination</a>, this new API object specifically addresses the configuration of TLS in order to convey HTTPS from the Gateway dataplane to the backend.\nThis is referred to as &quot;backend TLS termination&quot; and enables the Gateway to know how to connect to a backend Pod that has its own certificate.</p>\n<p><img src=\"https://gateway-api.sigs.k8s.io/geps/images/1897-TLStermtypes.png\" alt=\"Termination Types\"></p>\n<p>The specification of a <code>BackendTLSPolicy</code> consists of:</p>\n<ul>\n<li><code>targetRef</code> - Defines the targeted API object of the policy. Only Service is allowed.</li>\n<li><code>tls</code> - Defines the configuration for TLS, including <code>hostname</code>, <code>caCertRefs</code>, and <code>wellKnownCACerts</code>. Either <code>caCertRefs</code> or <code>wellKnownCACerts</code> may be specified, but not both.</li>\n<li><code>hostname</code> - Defines the Server Name Indication (SNI) that the Gateway uses to connect to the backend. The certificate served by the backend must match this SNI.</li>\n<li><code>caCertRefs</code> - Defines one or more references to objects that contain PEM-encoded TLS certificates, which are used to establish a TLS handshake between the Gateway and backend.</li>\n<li><code>wellKnownCACerts</code> - Specifies whether or not system CA certificates may be used in the TLS handshake between the Gateway and backend.</li>\n</ul>\n<h3 id=\"examples\">Examples</h3>\n<h4 id=\"using-system-certificates\">Using System Certificates</h4>\n<p>In this example, the <code>BackendTLSPolicy</code> is configured to use system certificates to connect with a TLS-encrypted upstream connection where Pods backing the <code>dev</code> Service are expected to serve a valid certificate for <code>dev.example.com</code>.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>gateway.networking.k8s.io/v1alpha2<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>BackendTLSPolicy<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>tls-upstream-dev<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">targetRef</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Service<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>dev-service<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">group</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">tls</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">wellKnownCACerts</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;System&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">hostname</span>:<span style=\"color:#bbb\"> </span>dev.example.com<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><h4 id=\"using-explicit-ca-certificates\">Using Explicit CA Certificates</h4>\n<p>In this example, the <code>BackendTLSPolicy</code> is configured to use certificates defined in the configuration map <code>auth-cert</code> to connect with a TLS-encrypted upstream connection where Pods backing the <code>auth</code> Service are expected to serve a valid certificate for <code>auth.example.com</code>.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>gateway.networking.k8s.io/v1alpha2<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>BackendTLSPolicy<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>tls-upstream-auth<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">targetRef</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Service<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>auth-service<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">group</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">tls</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">caCertRefs</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>ConfigMapReference<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>auth-cert<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">group</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#b44\">&#34;&#34;</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">hostname</span>:<span style=\"color:#bbb\"> </span>auth.example.com<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>The following illustrates a BackendTLSPolicy that configures TLS for a Service serving a backend:</p>\n<figure>\n<div class=\"mermaid\">\nflowchart LR\nclient([\"client\"])\ngateway[\"Gateway\"]\nstyle gateway fill:#02f,color:#fff\nhttproute[\"HTTP<BR>Route\"]\nstyle httproute fill:#02f,color:#fff\nservice[\"Service\"]\nstyle service fill:#02f,color:#fff\npod1[\"Pod\"]\nstyle pod1 fill:#02f,color:#fff\npod2[\"Pod\"]\nstyle pod2 fill:#02f,color:#fff\nclient -.->|HTTP <br> request| gateway\ngateway --> httproute\nhttproute -.->|BackendTLSPolicy|service\nservice --> pod1 & pod2\n</div>\n</figure>\n<noscript>\n<div class=\"alert alert-secondary callout\" role=\"alert\">\n<em class=\"javascript-required\">JavaScript must be <a href=\"https://www.enable-javascript.com/\">enabled</a> to view this content</em>\n</div>\n</noscript>\n<p>For more information, refer to the <a href=\"https://gateway-api.sigs.k8s.io/guides/tls\">documentation for TLS</a>.</p>\n<h2 id=\"httproute-timeouts\">HTTPRoute Timeouts</h2>\n<p>A key enhancement in Gateway API's latest release (v1.0) is the introduction of the <code>timeouts</code> field within HTTPRoute Rules. This feature offers a dynamic way to manage timeouts for incoming HTTP requests, adding precision and reliability to your gateway setups.</p>\n<p>With Timeouts, developers can fine-tune their Gateway API's behavior in two fundamental ways:</p>\n<ol>\n<li>\n<p><strong>Request Timeout</strong>:</p>\n<p>The request timeout is the duration within which the Gateway API implementation must send a response to a client's HTTP request.\nIt allows flexibility in specifying when this timeout starts, either before or after the entire client request stream is received, making it implementation-specific.\nThis timeout efficiently covers the entire request-response transaction, enhancing the responsiveness of your services.</p>\n</li>\n<li>\n<p><strong>Backend Request Timeout</strong>:</p>\n<p>The backendRequest timeout is a game-changer for those dealing with backends.\nIt sets a timeout for a single request sent from the Gateway to a backend service.\nThis timeout spans from the initiation of the request to the reception of the full response from the backend.\nThis feature is particularly helpful in scenarios where the Gateway needs to retry connections to a backend, ensuring smooth communication under various conditions.</p>\n</li>\n</ol>\n<p>Notably, the <code>request</code> timeout encompasses the <code>backendRequest</code> timeout. Hence, the value of <code>backendRequest</code> should never exceed the value of the <code>request</code> timeout.</p>\n<p>The ability to configure these timeouts adds a new layer of reliability to your Kubernetes services.\nWhether it's ensuring client requests are processed within a specified timeframe or managing backend service communications, Gateway API's Timeouts offer the control and predictability you need.</p>\n<p>To get started, you can define timeouts in your HTTPRoute Rules using the Timeouts field, specifying their type as Duration.\nA zero-valued timeout (<code>0s</code>) disables the timeout, while a valid non-zero-valued timeout should be at least 1ms.</p>\n<p>Here's an example of setting request and backendRequest timeouts in an HTTPRoute:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>gateway.networking.k8s.io/v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>HTTPRoute<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>timeout-example<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">parentRefs</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>example-gateway<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">rules</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">matches</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">path</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">type</span>:<span style=\"color:#bbb\"> </span>PathPrefix<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">value</span>:<span style=\"color:#bbb\"> </span>/timeout<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">timeouts</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">request</span>:<span style=\"color:#bbb\"> </span>10s<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">backendRequest</span>:<span style=\"color:#bbb\"> </span>2s<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">backendRefs</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>timeout-svc<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">port</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">8080</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>In this example, a <code>request</code> timeout of 10 seconds is defined, ensuring that client requests are processed within that timeframe.\nAdditionally, a 2-second <code>backendRequest</code> timeout is set for individual requests from the Gateway to a backend service called timeout-svc.</p>\n<p>These new HTTPRoute Timeouts provide Kubernetes users with more control and flexibility in managing network communications, helping ensure a smoother and more predictable experience for both clients and backends.\nFor additional details and examples, refer to the <a href=\"https://gateway-api.sigs.k8s.io/api-types/httproute/#timeouts-optional\">official timeouts API documentation</a>.</p>\n<h2 id=\"gateway-infrastructure-labels\">Gateway Infrastructure Labels</h2>\n<p>While Gateway API providers a common API for different implementations, each implementation will have different resources created under-the-hood to apply users' intent.\nThis could be configuring cloud load balancers, creating in-cluster Pods and Services, or more.</p>\n<p>While the API has always provided an extension point -- <code>parametersRef</code> in <code>GatewayClass</code> -- to customize implementation specific things, there was no common core way to express common infrastructure customizations.</p>\n<p>Gateway API v1.0 paves the way for this with a new <code>infrastructure</code> field on the <code>Gateway</code> object, allowing customization of the underlying infrastructure.\nFor now, this starts small with two critical fields: labels and annotations.\nWhen these are set, any generated infrastructure will have the provided labels and annotations set on them.</p>\n<p>For example, I may want to group all my resources for one application together:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>gateway.networking.k8s.io/v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Gateway<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>hello-world<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">infrastructure</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">labels</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">app.kubernetes.io/name</span>:<span style=\"color:#bbb\"> </span>hello-world<span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>In the future, we are looking into more common infrastructure configurations, such as resource sizing.</p>\n<p>For more information, refer to the <a href=\"https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.GatewayInfrastructure\">documentation</a> for this feature.</p>\n<h2 id=\"support-for-websockets-http-2-and-more\">Support for Websockets, HTTP/2 and more!</h2>\n<p>Not all implementations of Gateway API support automatic protocol selection.\nIn some cases protocols are disabled without an explicit opt-in.</p>\n<p>When a Route's backend references a Kubernetes Service, application developers can specify the protocol using <code>ServicePort</code> <a href=\"https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol\"><code>appProtocol</code></a> field.</p>\n<p>For example the following <code>store</code> Kubernetes Service is indicating the port <code>8080</code> supports HTTP/2 Prior Knowledge.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-yaml\" data-lang=\"yaml\"><span style=\"display:flex;\"><span><span style=\"color:#008000;font-weight:bold\">apiVersion</span>:<span style=\"color:#bbb\"> </span>v1<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">kind</span>:<span style=\"color:#bbb\"> </span>Service<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">metadata</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">name</span>:<span style=\"color:#bbb\"> </span>store<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"></span><span style=\"color:#008000;font-weight:bold\">spec</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">selector</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">app</span>:<span style=\"color:#bbb\"> </span>store<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">ports</span>:<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span>- <span style=\"color:#008000;font-weight:bold\">protocol</span>:<span style=\"color:#bbb\"> </span>TCP<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">appProtocol</span>:<span style=\"color:#bbb\"> </span>kubernetes.io/h2c<span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">port</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">8080</span><span style=\"color:#bbb\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#bbb\"> </span><span style=\"color:#008000;font-weight:bold\">targetPort</span>:<span style=\"color:#bbb\"> </span><span style=\"color:#666\">8080</span><span style=\"color:#bbb\">\n</span></span></span></code></pre></div><p>Currently, Gateway API has conformance testing for:</p>\n<ul>\n<li><code>kubernetes.io/h2c</code> - HTTP/2 Prior Knowledge</li>\n<li><code>kubernetes.io/ws</code> - WebSocket over HTTP</li>\n</ul>\n<p>For more information, refer to the documentation for <a href=\"https://gateway-api.sigs.k8s.io/guides/backend-protocol\">Backend Protocol Selection</a>.</p>\n<h2 id=\"gwctl-our-new-gateway-api-command-line-tool\"><code>gwctl</code>, our new Gateway API command line tool</h2>\n<p><code>gwctl</code> is a command line tool that aims to be a <code>kubectl</code> replacement for viewing Gateway API resources.</p>\n<p>The initial release of <code>gwctl</code> that comes bundled with Gateway v1.0 release includes helpful features for managing Gateway API Policies.\nGateway API Policies serve as powerful extension mechanisms for modifying the behavior of Gateway resources.\nOne challenge with using policies is that it may be hard to discover which policies are affecting which Gateway resources.\n<code>gwctl</code> helps bridge this gap by answering questions like:</p>\n<ul>\n<li>Which policies are available for use in the Kubernetes cluster?</li>\n<li>Which policies are attached to a particular Gateway, HTTPRoute, etc?</li>\n<li>If policies are applied to multiple resources in the Gateway resource hierarchy, what is the effective policy that is affecting a particular resource? (For example, if an HTTP request timeout policy is applied to both an HTTPRoute and its parent Gateway, what is the effective timeout for the HTTPRoute?)</li>\n</ul>\n<p><code>gwctl</code> is still in the very early phases of development and hence may be a bit rough around the edges.\nFollow the instructions in <a href=\"https://github.com/kubernetes-sigs/gateway-api/tree/main/gwctl#try-it-out\">the repository</a> to install and try out <code>gwctl</code>.</p>\n<h3 id=\"examples-1\">Examples</h3>\n<p>Here are some examples of how <code>gwctl</code> can be used:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-bash\" data-lang=\"bash\"><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># List all policies in the cluster. This will also give the resource they bind</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># to.</span>\n</span></span><span style=\"display:flex;\"><span>gwctl get policies -A\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># List all available policy types.</span>\n</span></span><span style=\"display:flex;\"><span>gwctl get policycrds\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># Describe all HTTPRoutes in namespace ns2. (Output includes effective policies)</span>\n</span></span><span style=\"display:flex;\"><span>gwctl describe httproutes -n ns2\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># Describe a single HTTPRoute in the default namespace. (Output includes</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># effective policies)</span>\n</span></span><span style=\"display:flex;\"><span>gwctl describe httproutes my-httproute-1\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># Describe all Gateways across all namespaces. (Output includes effective</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># policies)</span>\n</span></span><span style=\"display:flex;\"><span>gwctl describe gateways -A\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#080;font-style:italic\"># Describe a single GatewayClass. (Output includes effective policies)</span>\n</span></span><span style=\"display:flex;\"><span>gwctl describe gatewayclasses foo-com-external-gateway-class\n</span></span></code></pre></div><h2 id=\"get-involved\">Get involved</h2>\n<p>These projects, and many more, continue to be improved in Gateway API.\nThere are lots of opportunities to get involved and help define the future of Kubernetes routing APIs for both Ingress and Mesh.</p>\n<p>If this is interesting to you, please <a href=\"https://gateway-api.sigs.k8s.io/contributing/\">join us in the community</a> and help us build the future of Gateway API together!</p>","PublishedAt":"2023-11-28 18:00:00+00:00","OriginURL":"https://kubernetes.io/blog/2023/11/28/gateway-api-ga/","SourceName":"Kubernetes"}},{"node":{"ID":5156,"Title":"New generative AI features in Amazon Connect, including Amazon Q, facilitate improved contact center service","Description":"If you manage a contact center, then you know the critical role that agents play in helping your organization build customer trust and loyalty. Those of us who’ve reached out to a contact center know how important agents are with guiding through complex decisions and providing fast and accurate solutions where needed. This can take […]","PublishedAt":"2023-11-28 17:52:31+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/new-generative-ai-features-in-amazon-connect-including-amazon-q-facilitate-improved-contact-center-service/","SourceName":"AWS"}},{"node":{"ID":5157,"Title":"New Amazon Q in QuickSight uses generative AI assistance for quicker, easier data insights (preview)","Description":"Today, I’m happy to share that Amazon Q in QuickSight is available for preview. Now you can experience the Generative BI capabilities in Amazon QuickSight announced on July 26, as well as two additional capabilities for business users. Turning insights into impact faster with Amazon Q in QuickSight With this announcement, business users can now […]","PublishedAt":"2023-11-28 17:41:41+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/new-amazon-q-in-quicksight-uses-generative-ai-assistance-for-quicker-easier-data-insights-preview/","SourceName":"AWS"}},{"node":{"ID":5158,"Title":"Introducing Amazon Q, a new generative AI-powered assistant (preview)","Description":"Today, we are announcing Amazon Q, a new generative artificial intelligence- (AI)-powered assistant designed for work that can be tailored to your business. You can use Amazon Q to have conversations, solve problems, generate content, gain insights, and take action by connecting to your company’s information repositories, code, data, and enterprise systems. Amazon Q provides […]","PublishedAt":"2023-11-28 17:39:26+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/introducing-amazon-q-a-new-generative-ai-powered-assistant-preview/","SourceName":"AWS"}},{"node":{"ID":5159,"Title":"Upgrade your Java applications with Amazon Q Code Transformation (preview)","Description":"As our applications age, it takes more and more effort just to keep them secure and running smoothly. Developers managing the upgrades must spend time relearning the intricacies and nuances of breaking changes and performance optimizations others have already discovered in past upgrades. As a result, it’s difficult to balance the focus between new features […]","PublishedAt":"2023-11-28 17:37:31+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/upgrade-your-java-applications-with-amazon-q-code-transformation-preview/","SourceName":"AWS"}},{"node":{"ID":5160,"Title":"Improve developer productivity with generative-AI powered Amazon Q in Amazon CodeCatalyst (preview)","Description":"Today, I’m excited to introduce the preview of new generative artificial intelligence (AI) capabilities within Amazon CodeCatalyst that accelerate software delivery using Amazon Q. Accelerate feature development – The feature development capability in Amazon Q can help you accelerate the implementation of software development tasks such as adding comments and READMEs, refining issue descriptions, generating […]","PublishedAt":"2023-11-28 17:35:08+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/improve-developer-productivity-with-generative-ai-powered-amazon-q-in-amazon-codecatalyst-preview/","SourceName":"AWS"}},{"node":{"ID":5146,"Title":"Amazon Q brings generative AI-powered assistance to IT pros and developers (preview)","Description":"Today, we are announcing the preview of Amazon Q, a new type of generative artificial intelligence (AI) powered assistant that is specifically for work and can be tailored to a customer’s business. Amazon Q brings a set of capabilities to support developers and IT professionals. Now you can use Amazon Q to get started building […]","PublishedAt":"2023-11-28 17:30:35+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/amazon-q-brings-generative-ai-powered-assistance-to-it-pros-and-developers-preview/","SourceName":"AWS"}},{"node":{"ID":5147,"Title":"Guardrails for Amazon Bedrock helps implement safeguards customized to your use cases and responsible AI policies (preview)","Description":"As part of your responsible artificial intelligence (AI) strategy, you can now use Guardrails for Amazon Bedrock (preview) to promote safe interactions between users and your generative AI applications by implementing safeguards customized to your use cases and responsible AI policies. AWS is committed to developing generative AI in a responsible, people-centric way by focusing […]","PublishedAt":"2023-11-28 17:10:04+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/guardrails-for-amazon-bedrock-helps-implement-safeguards-customized-to-your-use-cases-and-responsible-ai-policies-preview/","SourceName":"AWS"}},{"node":{"ID":5148,"Title":"Agents for Amazon Bedrock is now available with improved control of orchestration and visibility into reasoning","Description":"Back in July, we introduced Agents for Amazon Bedrock in preview. Today, Agents for Amazon Bedrock is generally available. Agents for Amazon Bedrock helps you accelerate generative artificial intelligence (AI) application development by orchestrating multistep tasks. Agents uses the reasoning capability of foundation models (FMs) to break down user-requested tasks into multiple steps. They use […]","PublishedAt":"2023-11-28 17:03:52+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/agents-for-amazon-bedrock-is-now-available-with-improved-control-of-orchestration-and-visibility-into-reasoning/","SourceName":"AWS"}},{"node":{"ID":5149,"Title":"Customize models in Amazon Bedrock with your own data using fine-tuning and continued pre-training","Description":"Today, I’m excited to share that you can now privately and securely customize foundation models (FMs) with your own data in Amazon Bedrock to build applications that are specific to your domain, organization, and use case. With custom models, you can create unique user experiences that reflect your company’s style, voice, and services. With fine-tuning, […]","PublishedAt":"2023-11-28 17:01:36+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/customize-models-in-amazon-bedrock-with-your-own-data-using-fine-tuning-and-continued-pre-training/","SourceName":"AWS"}},{"node":{"ID":5150,"Title":"Knowledge Bases now delivers fully managed RAG experience in Amazon Bedrock","Description":"Back in September, we introduced Knowledge Bases for Amazon Bedrock in preview. Starting today, Knowledge Bases for Amazon Bedrock is generally available. With a knowledge base, you can securely connect foundation models (FMs) in Amazon Bedrock to your company data for Retrieval Augmented Generation (RAG). Access to additional data helps the model generate more relevant, […]","PublishedAt":"2023-11-28 17:01:11+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/knowledge-bases-now-delivers-fully-managed-rag-experience-in-amazon-bedrock/","SourceName":"AWS"}},{"node":{"ID":5161,"Title":"Terraform extension for VS Code adds Terraform Cloud view","Description":"A new view in the HashiCorp Terraform extension for Visual Studio Code shows your Terraform Cloud workspaces and runs, reducing context-switching.","PublishedAt":"2023-11-28 17:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/terraform-extension-for-vs-code-adds-terraform-cloud-view","SourceName":"HashiCorp"}},{"node":{"ID":5162,"Title":"HashiCorp at re:Invent 2023: A year of collaboration with AWS","Description":"A recap of HashiCorp infrastructure and security news and developments on AWS from the past year, from self-service provisioning to fighting secrets sprawl and more.","PublishedAt":"2023-11-28 17:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/hashicorp-at-re-invent-2023-a-year-of-collaboration-with-aws","SourceName":"HashiCorp"}},{"node":{"ID":5229,"Title":"Vault benchmark testing tool","Description":"Vault benchmark is an open source tool that tests the performance of HashiCorp Vault auth methods and secrets engines.","PublishedAt":"2023-11-28 17:00:00+00:00","OriginURL":"https://www.hashicorp.com/blog/vault-benchmark-testing-tool","SourceName":"HashiCorp"}},{"node":{"ID":5151,"Title":"Join the preview for new memory-optimized, AWS Graviton4-powered Amazon EC2 instances (R8g)","Description":"We are opening up a preview of the next generation of Amazon Elastic Compute Cloud (Amazon EC2) instances. Equipped with brand-new Graviton4 processors, the new R8g instances will deliver better price performance than any existing memory-optimized instance. The R8g instances are suitable for your most demanding memory-intensive workloads: big data analytics, high-performance databases, in-memory caches […]","PublishedAt":"2023-11-28 16:19:53+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/join-the-preview-for-new-memory-optimized-aws-graviton4-powered-amazon-ec2-instances-r8g/","SourceName":"AWS"}},{"node":{"ID":5152,"Title":"Announcing the new Amazon S3 Express One Zone high performance storage class","Description":"The new Amazon S3 Express One Zone storage class is designed to deliver up to 10x better performance than the S3 Standard storage class while handling hundreds of thousands of requests per second with consistent single-digit millisecond latency, making it a great fit for your most frequently accessed data and your most demanding applications. Objects […]","PublishedAt":"2023-11-28 16:15:38+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/new-amazon-s3-express-one-zone-high-performance-storage-class/","SourceName":"AWS"}},{"node":{"ID":5144,"Title":" Better debugging for Cloudflare Workers, now with breakpoints ","Description":" We provide many tools to help you debug Cloudflare Workers; from your local environment all the way into production. In this post, we highlight some of the tools we currently offer, and do a deep dive into one specific area - breakpoint debugging - a tool we recently added into our workerd runtime ","PublishedAt":"2023-11-28 14:00:20+00:00","OriginURL":"http://blog.cloudflare.com/debugging-cloudflare-workers/","SourceName":"Cloudflare"}},{"node":{"ID":5259,"Title":"Better debugging for Cloudflare Workers, now with breakpoints","Description":" We provide many tools to help you debug Cloudflare Workers; from your local environment all the way into production. In this post, we highlight some of the tools we currently offer, and do a deep dive into one specific area - breakpoint debugging - a tool we recently added into our workerd runtime ","PublishedAt":"2023-11-28 14:00:20+00:00","OriginURL":"https://blog.cloudflare.com/debugging-cloudflare-workers","SourceName":"Cloudflare"}},{"node":{"ID":5359,"Title":"Better debugging for Cloudflare Workers, now with breakpoints","Description":" We provide many tools to help you debug Cloudflare Workers; from your local environment all the way into production. In this post, we highlight some of the tools we currently offer, and do a deep dive into one specific area - breakpoint debugging - a tool we recently added into our workerd runtime ","PublishedAt":"2023-11-28 14:00:20+00:00","OriginURL":"https://staging.blog.mrk.cfdata.org/debugging-cloudflare-workers","SourceName":"Cloudflare"}},{"node":{"ID":5141,"Title":"Reserve quantum computers, get guidance and cutting-edge capabilities with Amazon Braket Direct","Description":"Today, we are announcing the availability of Braket Direct, a new Amazon Braket program that helps quantum researchers dive deeper into quantum computing. This program lets you get dedicated, private access to the full capacity of various quantum processing units (QPUs) without any queues or wait times, connect with quantum computing specialists to receive expert […]","PublishedAt":"2023-11-28 05:12:34+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/reserve-quantum-computers-get-expertise-and-cutting-edge-capabilities-with-amazon-braket-direct/","SourceName":"AWS"}},{"node":{"ID":5142,"Title":"AWS Step Functions Workflow Studio is now available in AWS Application Composer","Description":"Today, we’re announcing&nbsp;that AWS Step Functions Workflow Studio&nbsp;is now available in&nbsp;AWS Application Composer. This new integration brings together the development of workflows and application resources into a unified visual infrastructure as code (IaC) builder. Now, you can have a seamless transition between authoring workflows with AWS Step Functions Workflow Studio and defining resources with AWS […]","PublishedAt":"2023-11-28 04:58:57+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/aws-step-functions-workflow-studio-is-now-available-in-aws-application-composer/","SourceName":"AWS"}},{"node":{"ID":5143,"Title":"Amazon CodeCatalyst introduces custom blueprints and a new enterprise tier","Description":"Today, I’m excited to introduce the new Amazon CodeCatalyst enterprise tier and custom blueprints. Amazon CodeCatalyst enterprise tier is a new pricing tier that offers features like custom blueprints and project lifecycle management. The enterprise tier is $20/user per month, and each enterprise tier space gets 1,500 compute minutes, 160 Dev Environment hours, and 64GB […]","PublishedAt":"2023-11-28 04:58:45+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/amazon-codecatalyst-introduces-custom-blueprints-and-a-new-enterprise-tier/","SourceName":"AWS"}},{"node":{"ID":5139,"Title":"Amazon ElastiCache Serverless for Redis and Memcached is now available","Description":"Today, we are announcing the availability of Amazon ElastiCache Serverless, a new serverless option that allows customers to create a cache in under a minute and instantly scale capacity based on application traffic patterns. ElastiCache Serverless is compatible with two popular open-source caching solutions, Redis and Memcached. You can use ElastiCache Serverless to operate a […]","PublishedAt":"2023-11-28 04:23:21+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/amazon-elasticache-serverless-for-redis-and-memcached-now-generally-available/","SourceName":"AWS"}},{"node":{"ID":5140,"Title":"Join the preview of Amazon Aurora Limitless Database","Description":"Today, we are announcing the preview of Amazon Aurora Limitless Database, a new capability supporting automated horizontal scaling to process millions of write transactions per second and manage petabytes of data in a single Aurora database. Amazon Aurora read replicas allow you to increase the read capacity of your Aurora cluster beyond the limits of […]","PublishedAt":"2023-11-28 03:53:43+00:00","OriginURL":"https://aws.amazon.com/blogs/aws/join-the-preview-amazon-aurora-limitless-database/","SourceName":"AWS"}},{"node":{"ID":5145,"Title":"A step-by-step guide to creating custom ES Rally tracks","Description":"","PublishedAt":"2023-11-28 00:00:00+00:00","OriginURL":"https://www.elastic.co/blog/creating-custom-es-rally-tracks-guide","SourceName":"Elastic"}},{"node":{"ID":5153,"Title":"Govern your infrastructure resources with the Datadog Resource Catalog","Description":"<img class=\"webfeedsFeaturedVisual rss\" src=\"https://imgix.datadoghq.com/img/blog/datadog-resource-catalog/rc-hero.png\" width=\"100%\"/>As an administrator of an expanding, highly distributed infrastructure, you may be responsible for overseeing thousands of on-premise and cloud resources from multiple providers—governed under dozens of accounts by a complex nest of RBAC rules. To query all these resources for purposes such as compliance audits and access management, you may be required to write custom scripts and painstakingly sift through data across disparate tools. To efficiently govern all these disparate resources, you need to access ownership, configuration, and security posture data about all of them in one place.","PublishedAt":"2023-11-28 00:00:00+00:00","OriginURL":"https://www.datadoghq.com/blog/datadog-resource-catalog/","SourceName":"Datadog"}}]}},"pageContext":{"limit":30,"skip":420,"numPages":193,"currentPage":15}},"staticQueryHashes":["3649515864"]}