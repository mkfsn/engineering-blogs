{"version":3,"file":"component---src-templates-blog-post-list-by-source-tsx-8cfefabaa214a20afad5.js","mappings":"6LAQe,SAASA,EAAT,GAAyC,ICRxBC,EDQSC,EAAc,EAAdA,KACrC,OACIC,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAIA,EAAAA,cAAAA,IAAAA,CAAGC,OAAO,SAASC,KAAMH,EAAKI,WAAaJ,EAAKK,QACpDJ,EAAAA,cAAAA,KAAAA,KAAMD,EAAKM,aACXL,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAACM,EAAAA,GAAD,CAAMC,GAAE,YCdQT,EDcqBC,EAAKS,WCb/CV,EAAKW,QAAQ,IAAK,KAAKC,gBDcZX,EAAKS,aAK1B,C,IEbKG,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,IAAAA,CAEE,OAFFA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACFC,OAAA,WACI,OACIZ,EAAAA,cAAAA,QAAAA,CAAOa,UAAU,sBACbb,EAAAA,cAAAA,QAAAA,KACAA,EAAAA,cAAAA,KAAAA,KACIA,EAAAA,cAAAA,KAAAA,KAAAA,SACAA,EAAAA,cAAAA,KAAAA,KAAAA,gBACAA,EAAAA,cAAAA,KAAAA,KAAAA,YAGJA,EAAAA,cAAAA,QAAAA,KAEIc,KAAKC,MAAMC,MAAMC,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OAAclB,EAAAA,cAACH,EAAD,CAAiBsB,IAAG,SAAWD,EAAKE,GAAMrB,KAAMmB,GAAnF,KAXZ,IAFFP,CAAqBX,EAAAA,WAqB3B,G,sGCbe,SAASqB,EAAT,GAA0D,IAAtCtB,EAAsC,EAAtCA,KAAMuB,EAAgC,EAAhCA,YAC/BN,GAD+D,EAAnBO,SACpCxB,EAAKyB,QAAQC,OAE3B,OACIzB,EAAAA,cAAC0B,EAAAA,EAAD,KACI1B,EAAAA,cAAAA,KAAAA,CAAIa,UAAU,aAAaS,EAAYK,QACvC3B,EAAAA,cAACW,EAAAA,EAAD,CAAcK,MAAOA,IAGhC,C","sources":["webpack://engineering-blogs/./src/components/BlogPostExcerpt.tsx","webpack://engineering-blogs/./src/utils/strings.ts","webpack://engineering-blogs/./src/components/BlogPostList.tsx","webpack://engineering-blogs/./src/templates/BlogPostListBySource.tsx"],"sourcesContent":["import React from \"react\";\nimport {Link} from \"gatsby\";\nimport {normalizeSource} from \"../utils/strings\";\n\ntype Props = {\n    data: any;\n};\n\nexport default function BlogPostExcerpt({data}: Props) {\n    return (\n        <tr>\n            <td><a target=\"_blank\" href={data.OriginURL}>{ data.Title }</a></td>\n            <td>{ data.PublishedAt }</td>\n            <td>\n                <Link to={`/source/${normalizeSource(data.SourceName)}`}>\n                    { data.SourceName }\n                </Link>\n            </td>\n        </tr>\n    );\n}\n","export function normalizeSource(name: string): string {\n    return name.replace(\" \", \"-\").toLowerCase();\n}\n","import React from \"react\";\nimport BlogPostExcerpt from \"./BlogPostExcerpt\";\n\ntype Props = {\n    posts: Array<{node: any}>;\n};\n\nclass BlogPostList extends React.Component<Props> {\n    render() {\n        return (\n            <table className=\"table is-fullwidth\">\n                <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Publish Date</th>\n                    <th>Source</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    this.props.posts.map(({node}) => ( <BlogPostExcerpt key={`track-${node.ID}`} data={node} /> ))\n                }\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default BlogPostList;\n","import {graphql, PageProps} from \"gatsby\";\nimport React, { useEffect, useState } from \"react\";\n// @ts-ignore\nimport { bySourceQuery, SitePageContext } from \"../../graphql-schema\";\nimport BlogPostExcerpt from \"../components/BlogPostExcerpt\";\nimport Layout from \"../components/Layout\";\nimport PageButtonList from \"../components/PageButtonList\";\nimport BlogPostList from \"../components/BlogPostList\";\n// import useJsSearch from \"../util/useJsSearch\";\n\ntype Props = PageProps & {\n    data: bySourceQuery;\n    pageContext: any;\n};\n\nexport default function BlogList({ data, pageContext, location }: Props) {\n    const posts = data.allPost.edges;\n\n    return (\n        <Layout>\n            <h2 className=\"is-size-2\">{pageContext.source}</h2>\n            <BlogPostList posts={posts}/>\n        </Layout>\n    );\n}\n\nexport const pageQuery = graphql`\n    query bySource($source: String!) {\n        allPost( filter: {SourceName: {eq: $source}} ) {\n            edges {\n                node {\n                    ID\n                    Title\n                    Description\n                    PublishedAt\n                    OriginURL\n                    SourceName \n                }\n            }\n        }\n    }\n`;\n"],"names":["BlogPostExcerpt","name","data","React","target","href","OriginURL","Title","PublishedAt","Link","to","SourceName","replace","toLowerCase","BlogPostList","render","className","this","props","posts","map","node","key","ID","BlogList","pageContext","location","allPost","edges","Layout","source"],"sourceRoot":""}